{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","globals/redux/actions/game.js","services/http/gameServices.js","globals/redux/actions/league.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","globals/redux/actions/interactions.js","commons/LoadingBar.jsx","layouts/ProfilePanelLayout.jsx","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/AllScores.jsx","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/admin/NoticeManager.jsx","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/edit/Credentials.jsx","profile/edit/PasswordChange.jsx","profile/edit/ImagePicker.jsx","profile/edit/AvatarChange.jsx","profile/edit/AcountManager.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/GamePlay.jsx","games/RandomGame.jsx","leagues/ModalContesters.jsx","leagues/SingleLeagueCard.jsx","leagues/Leagues.jsx","games/SinglePlayer.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTable.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SinglePlayerCard.jsx","tables/rankings/AllPlayers.jsx","tables/rankings/Rankings.jsx","profile/admin/EditStudent.jsx","profile/admin/StudentsManagement.jsx","profile/admin/LeaguesManager.jsx","leagues/matches/SingleMatchCard.jsx","leagues/matches/MatchesTable.jsx","leagues/LeagueHome.jsx","layouts/LeagueLayout.jsx","commons/MainRouter.jsx","globals/redux/actions/index.js","tools/NotificationCenter.jsx","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/interactions.js","globals/redux/reducers/league.js","globals/redux/store/index.js","index.js","services/configs/index.js","services/configs/gamesetting.js"],"names":["Profile","Admin","module","exports","Root","SignUp","SignIn","GameDeck","Rankings","GameGuide","ContactUs","League","ChatRoom","MyGamesAndFriends","Notices","StudentManagement","Documents","LeaguesManager","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","MyAvatar","PasswordChange","Friends","Records","Administrators","Games","Mine","Leagues","NewLeague","LeaguesList","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","enter_league","leagueID","reset","clear","TOKEN","getItem","LEAGUE","GlobalContext","createContext","device","signOut","goTo","redirectToGamePlay","cancelGame","openLeaguePage","NavigationBar","me","useSelector","state","context","useContext","Navbar","style","borderBottom","bg","className","Container","Nav","activeClassName","to","Routes","Client","aria-hidden","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAvatar","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","uploadAvatar","avatar","formData","FormData","append","getMyFriends","isMyFriend","targetID","ResetOpponent","dispatch","a","ResetMyPlayer","LoadThisPlayer","data","player","payload","LoadMyPlayer","EnterRoom","room","ExitRoom","gameServices","getAllGames","getMyGames","loadLeague","listLeagues","joinLeague","teamID","createLeague","Mode","title","capacity","prize","deadline","EnterLeague","league","ExitLeague","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","findIndex","mode","Provider","value","push","destination","setTimeout","ProfilePanel","Row","Configs","aria-current","isAdmin","Button","variant","CollapsedPanel","border","borderRadius","AutoSignIn","opponent","storageToken","chatServices","getOurChat","friendID","getMyInteractions","UpdateMyChatList","name","sent","recieved","getState","myinteractions","interactions","find","interact","with","messages","friend","date","Date","LoadingBar","loading","whichOne","setWhichOne","Math","floor","random","useLayoutEffect","document","body","overflowY","height","selectedLoader","time","customLoading","ProfilePanelLayout","setLoading","myInteractions","Array","forEach","ownerOf","map","msg","owner","Error","Col","lg","sm","objectify","DateObject","calendar","persian","locale","persian_fa","toHijri","format","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Card","Body","Footer","block","disabled","size","AllScores","scores","length","score","players","gameID","Text","Record","small","ListGroup","Item","Badge","pill","ReapeatRandomSearch","tools","randomSearchRepeats","GameSetting","RandomSearchRepeatLimit","CloseRandomSearch","EndFriendRequest","friendRequestTarget","EndFriendlyInvitation","friendlyGameTarget","RecieveGameInvitation","ID","gameType","gameInvitation","ReloadRecords","recordReloadTrigger","reloadTrigger","FriendRecords","person","thisIsMe","setGameType","setAvatar","records","md","Image","src","alt","roundedCircle","points","wins","draws","loses","xs","InviteToFriendlyGame","InputGroup","Prepend","Radio","onChange","defaultChecked","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","setFriends","friendsCount","setFriendsCount","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","area-hidden","Content","Pane","filter","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","SendMessageTo","RecieveMessageFrom","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","chat","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","current","scrollIntoView","behavior","top","offsetTop","index","ref","onSubmit","event","preventDefault","composeMessage","sort","i1","i2","getTime","setFullname","studentID","setStudentID","email","setEmail","password","setPassword","pageUpdateTrigger","triggerPageUpdate","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","checkConfirmPassword","ImagePicker","selector","preview","setPreview","Group","rounded","imageFile","oFReader","FileReader","readAsDataURL","onload","oFREvent","result","updatePreview","files","accept","htmlFor","AvatarChange","myAvatar","selectMyAvatar","upload","AcountManager","TABS","Tabs","SignInSideBar","onSignInSubmitted","setState","Number","props","replace","this","autoComplete","sitekey","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","piece","setPiece","opp","isFriend","onFriendRequestClick","innerHTML","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","resolve","server","WebSocket","onopen","send","scoreless","onerror","close","onclose","withReduxDashboard","component","UpdateScoreboard","details","CleanScoreboard","BriefScoreboard","timeRemaining","turn","timeStamp","setTimeStamp","aThird","T3D","TurnTimeOut","textAlign","TableDesign","dimension","table","onEachCellClick","dimens","cell","setCell","i","cellWidths","cellHeights","deviceWidth","window","innerWidth","deviceHeight","innerHeight","width","margin","h","w","row","direction","marginLeft","column","GamePlay","lineColor","myTurn","socketGamePlay","playerOnline","timerID","connectionCheckTimerID","updateGameScorebaord","oppTurn","syncPlayersTurnTimer","t0","remaining","clearInterval","setInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","surrender","startTime","IDs","opponentID","newMove","cellID","cellIndex","verifyAndApplyTheMove","getCellCoordinates","cellButtons","focus","madeBy","endThisGame","closeThisGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","navigator","onLine","loadCurrentGame","dimen","onFloorId","selectedCellButton","cellButton","tempTable","opacity","inspectAreaAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","tableRowFloorMainDiagCount","tableRowFloorSideDiagCount","tableColumnFloorMainDiagCount","tableColumnFloorSideDiagCount","connectTheScoreLines","firstCell","step","getElementsByClassName","RandomGame","setDimension","isScoreless","setScoreless","searching","setSearching","onStartGameClick","padding","checked","ModalContesters","contesters","show","setShow","Modal","onHide","closeButton","contester","SingleLeagueCard","reload","showMore","toggleShow","ready","setReady","join","started","Title","leagues","setLeagues","triggerReload","SinglePlayer","difficulty","Difficulty","Easy","Medium","Hard","continueGame","setContinueGame","setSurrender","transition","href","ScoresTable","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","allGames","then","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","backdrop","controlId","contextType","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SinglePlayerCard","rowNumber","playerID","scope","AllPlayers","p","tempPlayers","p1","p2","EditStudent","preventDefaults","StudentsManagement","lookFor","setLookFor","setMode","setCapacity","setPrize","create","Modes","SingleMatchCard","MatchesTable","matches","match","LeagueHome","setMatches","playerXIndex","cont","playerOIndex","LeagueLayout","MainRouter","path","UpdateStatistics","pushed","NewMsg","by","inviterID","acceptedGame","onClose","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","reconnectingTimerID","setReconnectingTimerID","iamSignedIn","iamBusy","nextReconnectingTimeout","command","found","stats","answer","targetName","askerID","askerName","respondToFriendshipRequest","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById","ClientRoutes","require","ServerRoutes","TableRowMargings"],"mappings":"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","file":"static/js/main.1aa598f1.chunk.js","sourcesContent":["//client routes\r\n// Partial Routes\r\nconst Profile = \"/profile\",\r\n    Admin = \"/admin\",\r\n    ChatRoom = \"chatroom\",\r\n    MyGamesAndFriends = \"games\",\r\n    Notices = \"notices\",\r\n    StManagement = \"students\",\r\n    Documents = \"documents\",\r\n    Leagues = \"leagues\";\r\n\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/register\",\r\n    SignIn: \"/login\",\r\n    GameDeck: \"/gamedeck\",\r\n    Rankings: \"/rankings\",\r\n    GameGuide: \"/guide\",\r\n    ContactUs: \"/contactme\",\r\n    League: \"/league\",\r\n    Profile,\r\n    Admin,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Admin}/${Notices}`,\r\n    StudentManagement: `${Admin}/${StManagement}`,\r\n    Documents: `${Admin}/${Documents}`,\r\n    LeaguesManager: `${Admin}/${Leagues}`\r\n};\r\n","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    MyAvatar: \"avatar\",\r\n    PasswordChange: \"password\",\r\n    Friends: \"friends\",\r\n    Records: \"records\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Leagues: \"leagues\",\r\n    NewLeague: \"new\",\r\n    LeaguesList: \"list\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: \"single\",\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= : bad request\r\n        error.response.status <= 500 // <= 500: internal server error\r\n        );\r\n        // other errors are not expected\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    MethodNotAllowed: 405,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};\r\n","//browser storage keywords\r\nconst KeyToken = \"ptk\", KeyLeague = \"lgk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    enter_league: (leagueID) => {\r\n        sessionStorage.setItem(KeyLeague, leagueID);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n    LEAGUE: () => sessionStorage.getItem(KeyLeague)\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {},\r\n    goTo: () => {},\r\n    redirectToGamePlay: () => {},\r\n    cancelGame: () => {},\r\n    openLeaguePage: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar style={{borderBottom: '1px solid grey'}}  bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`درخواست بازی ${by.type}*${by.type}*${by.type} از ${by.name}\\n برای پذیرفتن دعوت کلیک کنید`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID, by.type),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\t\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (error.response.status === Status.InternalServerError) {\r\n\t\t\tSorry(\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\");\r\n\t\t}\r\n\t\telse if (!Status.isErrorExpected(error)) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"خطای غیرمنتظره ای رخ داده است. اگر برای چندمین بار است که این پیغلم را می بینید، لطفا مشکل خود را باه ما اطلاع دهید.\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tsignIn: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tgetPlayer: (userID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}/${userID}`),\r\n\tgetAvatar: (userID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.MyAvatar}/${userID}`\r\n\t\t),\r\n\tgetAllPlayers: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}`),\r\n\tgetMe: () => http.get(`${Server.Root}/${Server.Users}/${Server.Private}`),\r\n\tgetMyCredentials: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t),\r\n\teditMyCredentials: (newMe) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t),\r\n\tchangeMyPassword: (passwords) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t),\r\n\tuploadAvatar: (avatar) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"avatar\", avatar);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.MyAvatar}`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t),\r\n\tisMyFriend: (targetID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t)\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\nimport { Sorry } from \"./../../../tools/notification\";\r\n\r\nexport const ResetOpponent = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_OPPONENT\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MINE\" });\r\n\t};\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی حین بارگذاری اطلاعات حریف پیش آمد. لطفا وضعیت اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\"مشکلی در بارگذاری اطلاعات کاربری شما پیش آمد. لطفا ارتباط اینترنتی خود را بررسی کنید.\")\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","export const EnterRoom = (room) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"ENTER_ROOM\",\r\n\t\t\tpayload: room,\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"EXIT_ROOM\",\r\n\t\t});\r\n\t\tawait dispatch({type: \"RESET_OPPONENT\"});\r\n\t};\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n\t};\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_SCOREBOARD\",\r\n\t\t\tpayload: details,\r\n\t\t});\r\n\t};\r\n};\r\n\r\n/*export const SetGameID = (gameID) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"SET_GAME_ID\",\r\n\t\t\tpayload: gameID,\r\n\t\t});\r\n\t};\r\n};*/\r\n","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n\tgetAllGames: () => http.get(`${Server.Root}/${Server.Games}`),\r\n\tgetMyGames: () => http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`),\r\n\tloadLeague: (leagueID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Games}/${Server.Leagues}/${Server.LeaguesList}/${leagueID}`),\r\n\tlistLeagues: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Games}/${Server.Leagues}`),\r\n\tjoinLeague: (leagueID, teamID = null) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Games}/${Server.Leagues}/${Server.LeaguesList}/${leagueID}`,\r\n\t\t\tJSON.stringify({ teamID })\r\n\t\t),\r\n\tcreateLeague: (Mode, title, capacity, prize, deadline) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Games}/${Server.Leagues}/${Server.NewLeague}`,\r\n\t\t\tJSON.stringify({ title, Mode, deadline, capacity, prize })\r\n\t\t),\r\n};\r\n\r\nexport default gameServices;\r\n","import { Sorry } from './../../../tools/notification';\r\nimport gameServices from './../../../services/http/gameServices';\r\nimport { Status } from '../../../services/configs';\r\n\r\nexport const EnterLeague = (leagueID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (leagueID) {\r\n\t\t\ttry {\r\n\t\t\t\t// check laugue object for validty(?)\r\n\t\t\t\tconst { data, status } = await gameServices.loadLeague(leagueID);\r\n\t\t\t\tconsole.log(data.league);\r\n\t\t\t\tif (status === Status.Successful) \r\n\t\t\t\t\tawait dispatch({ type: \"ENTER_LEAGUE\", payload: data.league });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"مشکلی حین ورود به لیگ پیش آمد. لطفا وضعیت اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ExitLeague());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ExitLeague());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ExitLeague = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"EXIT_LEAGUE\" });\r\n\t};\r\n};\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ResetMyPlayer, ResetOpponent } from \"./../redux/actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./../redux/actions/game\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { EnterLeague } from './../redux/actions/league';\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(\"GlobalStates rendered\"); //s\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t};\r\n\r\n\tconst cancelGame = () => {\r\n\t\tdispatch(ExitRoom());\r\n\t\thistory.push(Routes.Client.Root);\r\n\t\tSorry(\"بازی از سوی یکی از بازیکنان لغو شد.\");\r\n\t\tsetTimeout(() => {\r\n\t\t\thistory.push(Routes.Client.GameDeck);\r\n\t\t}, 500);\r\n\t};\r\n\r\n\tconst openLeaguePage = (leagueID) => {\r\n\t\tbrowserStorage.enter_league(leagueID);\r\n\t\tdispatch(EnterLeague(leagueID));\r\n\t\thistory.push(Routes.Client.League);\r\n\r\n\t}\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{ device, signOut, redirectToGamePlay, goTo, cancelGame, openLeaguePage }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = () => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                {/* <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button> */}\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item animated-button\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li className=\"animated-button\" > \r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.StudentManagement}>\r\n                                    مدیریت دانشجویان\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.LeaguesManager}>\r\n                                    لیگ منیجر\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.Documents}>\r\n                                    توضیحات سایت\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" className=\"animated-button\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\treturn (\r\n\t\t<Navbar\r\n\t\t\tbg=\"transparent\"\r\n\t\t\tstyle={{ border: \"1px solid grey\", borderRadius: \"5px\" }}\r\n\t\t\tclassName=\"justify-content-center p-2 mt-2 nav-pills text-right w-100\">\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\texact\r\n\t\t\t\tto={Configs.Routes.Client.Profile}\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\taria-current=\"page\">\r\n\t\t\t\t<i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t<i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.ChatRoom}>\r\n\t\t\t\t<i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t{me && me.isAdmin && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{/* admin tools */}\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\t\t\tclassName=\"nav-link mx-1 border-top\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Notices}>\r\n\t\t\t\t\t\t<i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.StudentManagement}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Leagues}>\r\n\t\t\t\t\t\tلیگ منیجر\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Documents}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outline-danger\"\r\n\t\t\t\tclassName=\"mx-3\"\r\n\t\t\t\tonClick={context.signOut}>\r\n\t\t\t\t<i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n\t\t\t</Button>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from './../globals/redux/actions/player';\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\tif (storageToken) {\r\n\t\t\tconsole.log(`auth called then `);\r\n\t\t\tdispatch(LoadMyPlayer());\r\n\t\t} else {\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myInteractions = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (interactions instanceof Array) {\r\n\t\t\t\t\t//interactions catched from server side, but it requires modification: sorting, formatting messages\r\n\t\t\t\t\tinteractions.forEach((interact) => {\r\n\t\t\t\t\t\t// reformat clients chats in his/her own viewpoint\r\n\t\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\t\tmyInteractions.push({\r\n\t\t\t\t\t\t\twith: friend,\r\n\t\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\tme: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: null,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\tme: null,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait dispatch({\r\n\t\t\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\t\t\tpayload: myInteractions,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// dispatch friends here\r\n\t\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t\t} else\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"null interaction response! means sth went wrong\"\r\n\t\t\t\t\t);\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\n// export const ExtractFriends = () => {\r\n// \treturn async (dispatch, getState) => {\r\n// \t\tconst interactions = getState().interactions;\r\n// \t\tconst friends = Interactions\r\n// \t}\r\n// }\r\nexport const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n\t// one time u load from server, then new messages are simply pushed to previous data\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst myinteractions = getState().interactions;\r\n\t\t\tmyinteractions\r\n\t\t\t\t.find((interact) => interact.with.userID === friendID)\r\n\t\t\t\t.messages.push({\r\n\t\t\t\t\tname: name, //is name needed?\r\n\t\t\t\t\tme: sent ? text : null,\r\n\t\t\t\t\tfriend: recieved ? text : null,\r\n\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t});\r\n\r\n\t\t\tawait dispatch({\r\n\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\tpayload: myinteractions,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t//..propeer message\r\n\t\t\t// ...reset?\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t};\r\n};\r\n","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport {\r\n\tLoadInteractions,\r\n\tResetInteractions,\r\n} from \"../globals/redux/actions/interactions\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tdispatch(LoadMyPlayer());\r\n\t\t\tdispatch(LoadInteractions());\r\n\t\t\t// profile unmounted\r\n\t\t} catch (err) {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ResetInteractions());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device === Devices.Desktop ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col lg={3}>\r\n\t\t\t\t\t\t<ProfilePanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={9}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col className=\"mx-auto\" sm={12}>\r\n\t\t\t\t\t\t<CollapsedPanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Container, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { toHijri } from \"../../tools/format\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport { Devices } from \"../../services/configs\";\r\n\r\nconst SingleScoreCard = ({\r\n\tType,\r\n\tdate,\r\n\tplayerXName,\r\n\tplayerOName,\r\n\txScore,\r\n\toScore,\r\n}) => {\r\n\t// format score text:\r\n\tconst [xBadge, setXBadge] = useState(null);\r\n\tconst [oBadge, setOBadge] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHijriDate(toHijri(date)[0]); //toHijri = [date, time]\r\n\t\tif (xScore > oScore) {\r\n\t\t\t// x won\r\n\t\t\tsetXBadge(\"badge-success\");\r\n\t\t\tsetOBadge(\"badge-danger\");\r\n\t\t} else if (xScore === oScore) {\r\n\t\t\t//draw\r\n\t\t\tsetXBadge(\"badge-warning\");\r\n\t\t\tsetOBadge(\"badge-warning\");\r\n\t\t} else {\r\n\t\t\t// o won\r\n\t\t\tsetOBadge(\"badge-success\");\r\n\t\t\tsetXBadge(\"badge-danger\");\r\n\t\t}\r\n\t}, [date, xScore, oScore]);\r\n\t// make this card 'bg-transparent' too?\r\n\treturn (\r\n\t\t<Card border=\"dark\" className=\"single-score-card\">\r\n\t\t\t{/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"text-center mx-auto\">\r\n\t\t\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerXName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">{playerXName}</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n                            <hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">\r\n\t\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer className=\"p-0\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outline-dark\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tclassName=\"replay-game-button\">\r\n\t\t\t\t\t{hijriDate}\r\n\t\t\t\t\t<i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</Button>\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <Fragment>\r\n            { scores.length ? scores.map(score => (\r\n                <SingleScoreCard key={score.gameID}\r\n                    Type={score.Type}\r\n                    date={score.date}\r\n                    playerXName={score.players[0].name}\r\n                    playerOName={score.players[1].name}\r\n                    xScore={score.players[0].score}\r\n                    oScore={score.players[1].score}\r\n                ></SingleScoreCard>\r\n            )) :\r\n            <Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n                <Card.Body className=\"text-center\">\r\n                    <Card.Text>\r\n                        هیچ بازی ای انجام نگرفته است\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                </Card>}\r\n        </Fragment>\r\n     );\r\n};\r\n \r\nexport default AllScores;","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-center\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","import { GameSetting } from \"../../../services/configs\";\r\n\r\nexport const ReapeatRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = (tools.randomSearchRepeats + 1) % GameSetting.RandomSearchRepeatLimit;\r\n        // randomSearchRepeats === 0 => means nor search is not happening or its happening and has reached to maximum allowed retries\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const CloseRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = 0;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = targetID;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = { targetID, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = { ID, name, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RejectGameInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const AcceptInvitation = (inviterID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.acceptedGame = { inviterID, type: gameType };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EmptyGameInvitations = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        tools.acceptedGame = null;\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n}\r\nexport const ReloadRecords = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.recordReloadTrigger = !tools.reloadTrigger;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};","import {\r\n\tButton,\r\n\tCard,\r\n\tCol,\r\n\tListGroup,\r\n\tRow,\r\n\tInputGroup,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport Record from \"./Record\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { useState, useEffect } from \"react\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\nimport { Status } from \"../../services/configs\";\r\nconst FriendRecords = ({ person, thisIsMe }) => {\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst [avatar, setAvatar] = useState(null); //s\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (person) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data, status } = await userServices.getAvatar(\r\n\t\t\t\t\t\tperson.userID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Status.Successful) setAvatar(data.avatar);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\"مشکلی در بارگذاری آواتار این شخص پیش آمد ... لطفا اتصال اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t// use- no-avatar.png here too?\r\n\t\t\t\t\t// in case server return wrong?\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [person]);\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && !thisIsMe) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(person.userID, gameType));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\tconst { records } = person;\r\n\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\t\talt=\"خطا\"\r\n\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{!thisIsMe && person && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={3}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={4}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={5}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport AllScores from \"../../tables/scores/AllScores\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst [friends, setFriends] = useState([]);\r\n\tconst [friendsCount, setFriendsCount] = useState(0);\r\n\tconst interactions = useSelector((state) => state.interactions); //.map((interact) => interact.with)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendsCount !== interactions.length) {\r\n\t\t\t//thsi if checks whether change made in interaction is friend/unfriend operation or not\r\n\t\t\t//otherwise, every new message sent or recieved cause a new .map calling!\r\n\r\n\t\t\t// const temp = interactions;\r\n\t\t\t// const sorted = temp.sort((f1, f2) => f2.name - f1.name);\r\n\t\t\tsetFriends(interactions.map((interact) => interact.with));\r\n\t\t\tsetFriendsCount(interactions.length);\r\n\t\t}\r\n\t}, [interactions, friendsCount]);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames([...serverResponse.data.myGames.reverse()]);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی حین بارگذاری لیست بازی ها پیش آمد. ارتباط اینترنتی خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? friends.findIndex((friend) => friend.userID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, friends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\teventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\teventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={me}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<AllScores scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? friends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: me\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={\r\n\t\t\t\t\t\t\t\t\t\t\t\tme.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AllScores\r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../../services/configs\";\r\nimport \"../profile.css\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices([...data.notices.reverse()]);\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t//put error message in notice side bar?\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto animated-textbox\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 animated-textbox h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","import { UpdateMyChatList } from \"./interactions\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friend, chat }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friend.userID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\t//how to scroll to last recent message in the start?\r\n\t// useEffect(() => {\r\n\t// \tsetTimeout(() => {\r\n\t// \t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t// \t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t// \t\t\t\tbehavior: \"smooth\",\r\n\t// \t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t// \t\t\t});\r\n\t// \t}, 1000);\r\n\t// }, [])\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t});\r\n\t\t}, 100);\r\n\t}, [message]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"chat-main-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{chat &&\r\n\t\t\t\t\t\t\t\tchat instanceof Array &&\r\n\t\t\t\t\t\t\t\tchat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchat[index - 1].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-3 bg-transparent chat-room-message-box animated-textbox text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst interactions = useSelector((state) => state.interactions).sort(\r\n\t\t//first sort all by last recieved message => this makes chat list contacts sorted properly\r\n\t\t(i1, i2) =>\r\n\t\t\tnew Date(i2.messages[i2.messages.length - 1].date).getTime() -\r\n\t\t\tnew Date(i1.messages[i1.messages.length - 1].date).getTime()\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends \"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={3}\r\n\t\t\t\t\t\t\tsm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link className=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.userID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={interact.with.userID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{interact.with.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\tfriend={interact.with}\r\n\t\t\t\t\t\t\t\t\t\tchat={interact.messages}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport Configs from \"../../services/configs\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst Credentials = () => {\r\n\tconst [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n\r\n\tconst reloadPage = () => {\r\n\t\tsetLoading(false);\r\n\t\ttriggerPageUpdate(!pageUpdateTrigger);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } = await userServices.getMyCredentials();\r\n\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\tconst { me } = data;\r\n\t\t\t\t\tsetFullname(me.fullname);\r\n\t\t\t\t\tsetStudentID(me.studentID);\r\n\t\t\t\t\tsetEmail(me.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [pageUpdateTrigger]);\r\n\r\n\tconst saveChanges = async (event) => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\t// check all inputs plz\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.editMyCredentials({\r\n\t\t\t\tstudentID,\r\n\t\t\t\tfullname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(`تغییرات با موفقیت اعمال شد`);\r\n\t\t\t\t// dispatch(TriggerRecordUpdate());\r\n\t\t\t\t// find another way to update\r\n\r\n\t\t\t\treloadPage();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplaceholder=\"نام و نام خانوادگی\"\r\n\t\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">ایمیل</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0 mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Credentials;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst PasswordChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst checkConfirmPassword = (event) => {\r\n\t\tsetConfirmNewPassword(event.target.value);\r\n\t\tif (newPassword !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\r\n\tconst changeMyPassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.changeMyPassword({\r\n\t\t\t\tpassword,\r\n\t\t\t\tnewPassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"رمز شما با موفقیت تغییر داده شد\");\r\n\t\t\t\tcontext.signOut();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => changeMyPassword(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tرمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tتایید رمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm New Password\"\r\n\t\t\t\t\t\tvalue={confirmNewPassword}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(event) => checkConfirmPassword(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-key px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر رمز عبور\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordChange;\r\n","import { Col, Form, Image, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Notify } from \"./../../tools/notification\";\r\nimport './avatar.css';\r\nconst ImagePicker = ({ selector }) => {\r\n\tconst [preview, setPreview] = useState(null);\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst { avatar } = me ? me : { avatar: null };\r\n\tuseEffect(() => {\r\n\t\tsetPreview(avatar);\r\n\t}, [avatar]);\r\n\tconst updatePreview = (imageFile) => {\r\n\t\ttry {\r\n\t\t\tselector(imageFile);\r\n\t\t\tconst oFReader = new FileReader();\r\n\t\t\toFReader.readAsDataURL(imageFile);\r\n\r\n\t\t\toFReader.onload = (oFREvent) => {\r\n\t\t\t\tsetPreview(oFREvent.target.result);\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tNotify(\"پیش نمایش فایل انتخابی با مشکل رو به رو شد.\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form.Group>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"text-center\" sm={4} xs={4} md={3} lg={2}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\tsrc={preview}\r\n\t\t\t\t\t\trounded\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tclassName=\"dropbox-rectangle\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"btn-outline-primary file-picker-control\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tid=\"filepicker\"\r\n\t\t\t\t\t\tonChange={(e) => updatePreview(e.target.files[0])}\r\n\t\t\t\t\t\taccept=\".jpg,.jpeg,.png\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"ابتدا عکس مورد نظر را از اینجا انتخاب کنید\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Form.Label\r\n\t\t\t\t\thtmlFor=\"filepicker\"\r\n\t\t\t\t\tclassName=\"btn-outline-primary file-picker-label animated-button\">\r\n\t\t\t\t\tبا کلیک روی اینجا عکس خود را انتخاب کنید و یا فایل آن را\r\n\t\t\t\t\tبکشید و در وسط کادر سبز رنگ رها کنید ...\r\n\t\t\t\t</Form.Label>\r\n\t\t\t</Row>\r\n\t\t</Form.Group>\r\n\t);\r\n};\r\n\r\nexport default ImagePicker;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { OK } from \"../../tools/notification\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport ImagePicker from \"./ImagePicker\";\r\n\r\nconst AvatarChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [myAvatar, selectMyAvatar] = useState(null);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst upload = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.uploadAvatar(myAvatar);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"آواتار شما با موفقیت تغییر داده شد\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\tsetPassword(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => upload(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<ImagePicker selector={selectMyAvatar} />\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-upload px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر آواتار\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default AvatarChange;\r\n","import { Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport Credentials from \"./Credentials\";\r\nimport PasswordChange from \"./PasswordChange\";\r\nimport AvatarChange from \"./AvatarChange\";\r\n\r\nconst AcountManager = () => {\r\n\t//states\r\n\r\n\tconst TABS = { CREDENTIALS: 0, AVATAR: 1, PASSWORD: 2 };\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tdefaultActiveKey={TABS.CREDENTIALS}\r\n\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t<Tab eventKey={TABS.CREDENTIALS} title=\"ویرایش مشخصات\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Credentials />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.AVATAR} title=\"آواتار\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<AvatarChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.PASSWORD} title=\"تغییر رمزعبور\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<PasswordChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default AcountManager;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tborder=\"primary\"\r\n\t\t\t\tclassName=\"sign-in-sidebar animated-sidebar-intense\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Row className=\"justify-content-center my-3\">\r\n\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"Your client site key\" />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices([...data.notices.reverse()]);\r\n                    //if all is empty\r\n                    if(data.notices.length === 0) {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                // show error message within \r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar animated-form\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {Boolean(notices.length) && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های فعال\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col lg={2} md={3} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg={10} md={9} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import { Card, Col, Alert, ListGroup, Button, Image } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs, { Status } from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst { fullname, userID, records, avatar } = props.person\r\n\t\t? props.person\r\n\t\t: me;\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\tconst thisIsMe = me && userID === me.userID;\r\n\tuseEffect(() => {\r\n\t\tsetPiece(!thisIsMe ? scoreboard.opp : scoreboard.me);\r\n\t}, [thisIsMe, scoreboard]);\r\n\r\n\tconst { recordReloadTrigger } = tools;\r\n\tuseEffect(() => {\r\n\t\tif (!thisIsMe) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\"برقراری ارتباط با سرور موفقیت امیز نبود.لطفا از ارتباط اینترنتی خود اطمینان حاصل کنید.\");\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [userID, thisIsMe, recordReloadTrigger]);\r\n\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(userID));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar animated-form\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">{fullname}</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"player-avatar\"\r\n\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باختها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{thisIsMe ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\tif (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\telse setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto p-0\">\r\n\t\t\t\t\t{rightSideBar && <Col lg={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tlg={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col className=\"p-0 pl-2\" lg={3} md={4}>\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (room) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", room.name, {gameType: room.type, scoreless: room.scoreless})); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, CleanScoreboard } from \"./actions/game\";\r\nimport { LoadThisPlayer, ResetOpponent } from \"./actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./actions/game\";\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n\tconst mapStateToProps = (state) => ({\r\n\t\tme: state.me,\r\n\t\topponent: state.opponent,\r\n\t\troom: state.room,\r\n\t\tscoreboard: state.scoreboard,\r\n\t\ttools: state.tools,\r\n\t});\r\n\r\n\tconst mapDispatchToProps = (dispatch) => ({\r\n\t\tLoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n\t\tResetOpponent: () => dispatch(ResetOpponent()),\r\n\t\tEnterRoom: (room) => dispatch(EnterRoom(room)),\r\n\t\tExitRoom: () => dispatch(ExitRoom()),\r\n\t\t// SetGameID: (gameID) => dispatch(SetGameID(gameID)),\r\n\t\tUpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n\t\tCleanScoreboard: () => dispatch(CleanScoreboard()),\r\n\t});\r\n\treturn connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { GameSetting } from \"../../services/configs\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players, turn }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = GameSetting.T3D.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-start px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-half px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>;\r\n        }\r\n        setTimeStamp(<div className={color}>{icon}{timeRemaining} : {players[turn].shape}</div>);\r\n    }, [timeRemaining, aThird, players, turn]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}>\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}>\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({\r\n\ttimeRemaining,\r\n\tdimension,\r\n\tplayers,\r\n\ttable,\r\n\tturn,\r\n\tonEachCellClick\r\n}) => {\r\n\tlet dimens = [];\r\n\tconst [cell, setCell] = useState(null);\r\n\tfor (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst cellWidths = [70, 65, 60, 55, 50, 45, 40, 35, 30, 25];\r\n\t\tconst cellHeights = [45, 40, 35, 30, 29, 28];\r\n\t\tconst deviceWidth = window.innerWidth,\r\n\t\t\tdeviceHeight = window.innerHeight;\r\n\t\t/* first decide cell height, margin nearly equals to height */\r\n\t\tlet width = cellWidths[cellWidths.length - 1],\r\n\t\t\theight = cellHeights[cellHeights.length - 1],\r\n\t\t\tmargin = cellHeights[cellHeights.length - 1],\r\n            fontSize = 25;\r\n\t\tfor (const h of cellHeights) {\r\n\t\t\tif (h * dimension * dimension <= deviceHeight * 0.75) {\r\n\t\t\t\tmargin = height = h;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const w of cellWidths) {\r\n\t\t\tif ((w + margin) * (dimension + 1) <= deviceWidth) {\r\n\t\t\t\twidth = w;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n        //find better scaling for font size?\r\n        if(height < 30 || width < 40)\r\n            fontSize = 15;\r\n        else if(height < 40 || width < 60)\r\n            fontSize = 20;\r\n        else\r\n            fontSize = 25;\r\n\t\tsetCell({ width, height, margin, fontSize });\r\n\t}, [dimension]);\r\n\t//prop drilling in BriefScoreBoard\r\n\treturn (\r\n\t\t<Card bg=\"transparent\" border=\"dark\" className=\"w-100 mt-2 mx-auto\">\r\n\t\t\t<BriefScoreboard timeRemaining={timeRemaining} turn={turn} players={players} />\r\n\t\t\t<Card.Body className=\"game-border-card\">\r\n\t\t\t\t{table && cell ? (\r\n\t\t\t\t\tdimens.map((floor) => (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t{dimens.map((row) => (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdirection: \"ltr\",\r\n\t\t\t\t\t\t\t\t\t\tmarginLeft: `${cell.margin * row}px`,\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{dimens.map((column) => (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tkey={\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloor * dimension * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\trow * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"border-dark\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"game-table-cells\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: `${cell.width}px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\theight: `${cell.height}px`,\r\n                                                fontSize: `${cell.fontSize}px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttable[floor][row][\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t] !== null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? players[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttable[floor][\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][column]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ].color\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tid={\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloor * dimension * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\trow * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tonEachCellClick(event)\r\n\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t{table[floor][row][column] !==\r\n\t\t\t\t\t\t\t\t\t\t\t\tnull &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tplayers[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttable[floor][row][column]\r\n\t\t\t\t\t\t\t\t\t\t\t\t].shape}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p className=\"text-center\"> در حال اتصال... </p>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n\tconnect,\r\n\tcreateSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { GameSetting, Routes } from \"../../services/configs\";\r\nimport { Attention, Notify, Sorry } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\n\r\nclass GamePlay extends Component {\r\n\t//**** game resets on device change. fix it */\r\n\tstate = {\r\n\t\tplayers: [\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"blue\",\r\n\t\t\t\tlineColor: \"primary\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"darkred\",\r\n\t\t\t\tlineColor: \"danger\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t], // maybe use player actual user name and change this item to an object of objects?\r\n\t\tturn: 0, // start turn is decided by throwning dices\r\n\t\tdimension: 3,\r\n\t\ttable: null,\r\n\t\tmyTurn: undefined, // change this\r\n\t\tgameID: null,\r\n\t\tsocketGamePlay: undefined,\r\n\t\tplayerOnline: true,\r\n\t\ttimeRemaining: 0, //create a config\r\n\t\ttimerID: null,\r\n\t\tconnectionCheckTimerID: null,\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.cellButtons = [];\r\n\t}\r\n\r\n\tupdateGameScorebaord = () => {\r\n\t\tconst { myTurn, players } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\r\n\t\tthis.props.UpdateScoreboard({\r\n\t\t\tme: {\r\n\t\t\t\tindex: myTurn,\r\n\t\t\t\tshape: players[myTurn].shape,\r\n\t\t\t\tscore: players[myTurn].score,\r\n\t\t\t},\r\n\t\t\topp: {\r\n\t\t\t\tindex: oppTurn,\r\n\t\t\t\tshape: players[oppTurn].shape,\r\n\t\t\t\tscore: players[oppTurn].score,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tsyncPlayersTurnTimer = (t0) => {\r\n\t\tconst remaining =\r\n\t\t\tGameSetting.T3D.TurnTimeOut - (Date.now() - t0) / 1000;\r\n\t\tthis.setState({ timeRemaining: Math.floor(remaining) });\r\n\t\t//is it needed to declare timerID as state?\r\n\t\tif (this.state.timerID) clearInterval(this.state.timerID);\r\n\t\tconst timerID = setInterval(() => {\r\n\t\t\tconst { timeRemaining, timerID } = this.state;\r\n\t\t\tif (timeRemaining <= 0) {\r\n\t\t\t\tconst { socketGamePlay } = this.state;\r\n\t\t\t\tconst { room } = this.props;\r\n\t\t\t\tclearInterval(timerID);\r\n\t\t\t\tthis.setState({ timerID: null });\r\n\t\t\t\tsocketGamePlay.send(\r\n\t\t\t\t\tcreateSocketRequest(\"ban_move\", room.name, null)\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({ timeRemaining: this.state.timeRemaining - 1 });\r\n\t\t}, 1000);\r\n\t\tthis.setState({ timerID });\r\n\t};\r\n\r\n\tupdatePlayerStates = ({ turn, xScore, oScore }) => {\r\n\t\tconst players = [...this.state.players];\r\n\t\tplayers[0].score = xScore;\r\n\t\tplayers[1].score = oScore;\r\n\t\tthis.setState({\r\n\t\t\tplayers,\r\n\t\t\tturn,\r\n\t\t});\r\n\t\tthis.updateGameScorebaord();\r\n\t};\r\n\r\n\tdisableAllTimers = () => {\r\n\t\tconst { connectionCheckTimerID, timerID } = this.state;\r\n\t\tclearTimeout(connectionCheckTimerID);\r\n\t\tclearTimeout(timerID); //move time out timer\r\n\t};\r\n\r\n\tsocketOnMessage = (response) => {\r\n\t\tconst { data } = response;\r\n\t\tconst { cmd, msg } = JSON.parse(data);\r\n\t\tconst { surrender } = this.props;\r\n\t\tif (this.props.location.pathname === Routes.Client.GameDeck) {\r\n\t\t\tif (cmd === \"START\") {\r\n\t\t\t\tconst startTime = toTimeShort(msg);\r\n\t\t\t\t//edit !surrender part\r\n\t\t\t\t!surrender && Attention(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n\t\t\t} else if (cmd === \"GAME\") {\r\n\t\t\t\tconst { IDs, dimension, myTurn } = msg;\r\n\t\t\t\tthis.setState({ dimension, myTurn });\r\n\t\t\t\tconst opponentID = IDs[Number(!myTurn)];\r\n\t\t\t\tconst { opponent, LoadThisPlayer } = this.props;\r\n\t\t\t\tif (!opponent && opponentID && !surrender)\r\n\t\t\t\t\t//ithink !surrender must be removed\r\n\t\t\t\t\t//if opponent is not null -> means this was called before and there's no need to run again\r\n\t\t\t\t\tLoadThisPlayer(opponentID);\r\n\t\t\t} else if (cmd === \"LOAD\") {\r\n\t\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\t\tconst { table, t0 } = msg;\r\n\t\t\t\tconsole.log(msg);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttable,\r\n\t\t\t\t});\r\n\t\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\t\tthis.updateGameScorebaord();\r\n\t\t\t\tthis.syncPlayersTurnTimer(t0);\r\n\t\t\t} else if (this.state.table) {\r\n\t\t\t\tif (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n\t\t\t\telse if (cmd === \"UPDATE\") {\r\n\t\t\t\t\tconst { room, me } = this.props;\r\n\t\t\t\t\tconst { dimension } = this.state;\r\n\t\t\t\t\tconst { newMove, t0 } = msg;\r\n\t\t\t\t\tconst cellID = Number(newMove.cellIndex);\r\n\r\n\t\t\t\t\t//*************** */\r\n\t\t\t\t\t//is this needed to check the move in client? considering that complete check has been made in client\r\n\t\t\t\t\t//and consder that: checking move in client may cause some bugs\r\n\t\t\t\t\t//for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n\t\t\t\t\t//turn is not updated and this player can not make new moves to recieve server's table!!!\r\n\t\t\t\t\tthis.verifyAndApplyTheMove(\r\n\t\t\t\t\t\tthis.getCellCoordinates(cellID, dimension),\r\n\t\t\t\t\t\tthis.cellButtons[cellID]\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//wrap it up this part of UPDATE and LOAD in a method\r\n\t\t\t\t\tthis.updatePlayerStates(newMove);\r\n\r\n\t\t\t\t\tthis.cellButtons[cellID].focus();\r\n\t\t\t\t\tthis.updateGameScorebaord();\r\n\r\n\t\t\t\t\t// now inform the server that the move is recieved\r\n\t\t\t\t\t//force connect it?\r\n\t\t\t\t\tif (newMove.madeBy !== me.userID)\r\n\t\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\t\tcreateSocketRequest(\r\n\t\t\t\t\t\t\t\t\"move_recieved\",\r\n\t\t\t\t\t\t\t\troom.name,\r\n\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t// server time out is set and now setInterval for this client to show how much time left\r\n\t\t\t\t\tthis.syncPlayersTurnTimer(t0);\r\n\t\t\t\t} else if (cmd === \"MOVE_MISSED\") {\r\n\t\t\t\t\tconst { turn, t0 } = msg;\r\n\t\t\t\t\t//msg --> forced set turn\r\n\t\t\t\t\tthis.setState({ turn });\r\n\t\t\t\t\tthis.syncPlayersTurnTimer(t0);\r\n\t\t\t\t} else if (cmd === \"NOT_AUTHORIZED\") {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// signOut();\r\n\t\t\t\t} else if (cmd === \"END\") {\r\n\t\t\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\t\t\tthis.endThisGame();\r\n\t\t\t\t\tthis.disableAllTimers();\r\n\t\t\t\t} else if (cmd === \"CLOSE\") {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.closeThisGame();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"wrong socket request\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tforceConnectWS = async (nextJob) => {\r\n\t\tconst { room } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tlet socket = await connect(room);\r\n\t\t\tsocket.onmessage = this.socketOnMessage;\r\n\t\t\tthis.setState({ socketGamePlay: socket });\r\n\t\t\tif (nextJob) nextJob();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// **********************\r\n\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconsole.log(\"rconnecting from GamePlay\");\r\n\t\t\t\tthis.forceConnectWS(nextJob);\r\n\t\t\t}, 3000);\r\n\t\t\t//if there is a next job --> then player is sending a move or something important and\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in serimport { LoadPlayer } from './../../globals/redux/actions/player';\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in server for sending moves\r\n\t\t}\r\n\t};\r\n\r\n\tenableConnectionCheckTimer = () => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (window.navigator.onLine) { \r\n\t\t\t\tif (!this.state.playerOnline) { // user comming bacvk online just now\r\n\t\t\t\t\t//player JUST became online\r\n\t\t\t\t\tthis.setState({ playerOnline: true }); // toggle online status\r\n\t\t\t\t\tthis.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n\t\t\t\t}\r\n\t\t\t} else if (this.state.playerOnline) {\r\n\t\t\t\t//player JUST became offline\r\n\t\t\t\tthis.setState({ playerOnline: false });\r\n\t\t\t}\r\n\t\t}, 2500); //2.5 sec is it ok?\r\n\t};\r\n\r\n\tloadCurrentGame = () => {\r\n\t\tconst { room, surrender } = this.props;\r\n\t\tconsole.log(room);\r\n\t\tthis.forceConnectWS(() => {\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"load\", room.name, null)\r\n\t\t\t);\r\n\t\t\tif (surrender) {\r\n\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\tcreateSocketRequest(\"surrender\", room.name, true)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n\t\tconst { room, surrender } = this.props;\r\n\t\tthis.setState({ dimension: room.type });\r\n\t\tthis.loadCurrentGame();\r\n\r\n\t\tthis.setState({\r\n\t\t\tconnectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.disableAllTimers();\r\n\t}\r\n\tgetCellCoordinates = (cellID, dimen) => {\r\n\t\tconst cellFloor = Math.floor(cellID / (dimen * dimen));\r\n\t\tconst onFloorId = cellID % (dimen * dimen);\r\n\t\tconst cellRow = Math.floor(onFloorId / dimen);\r\n\t\tconst cellColumn = onFloorId % dimen;\r\n\t\t// just test a random id to see how above formula works!\r\n\t\treturn { floor: cellFloor, row: cellRow, column: cellColumn };\r\n\t};\r\n\tonEachCellClick = (event) => {\r\n\t\tconst { dimension, turn, myTurn, table } = this.state;\r\n\t\tconst { opponent, room } = this.props;\r\n\t\tif (opponent && turn === myTurn) {\r\n\t\t\ttry {\r\n\t\t\t\tconst selectedCellButton = event.target;\r\n\r\n\t\t\t\tconst cell = this.getCellCoordinates(\r\n\t\t\t\t\tselectedCellButton.id,\r\n\t\t\t\t\tdimension\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(selectedCellButton.id, cell);\r\n\t\t\t\tif (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n\t\t\t\t\t//this.forceConnectWS(() => {\r\n\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\tcreateSocketRequest(\r\n\t\t\t\t\t\t\t\"move\",\r\n\t\t\t\t\t\t\troom.name,\r\n\t\t\t\t\t\t\tselectedCellButton.id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//});\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t//load again here?\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tverifyAndApplyTheMove = (cell, cellButton) => {\r\n\t\tconst { turn } = this.state;\r\n\t\tconsole.log(this.state.table);\r\n\t\tlet tempTable = [...this.state.table];\r\n\t\tif (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n\t\t\ttempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n\t\t\tthis.setState({ table: tempTable });\r\n\t\t\t// cellButton.value = players[turn].shape;\r\n\t\t\t// cellButton.style.color = players[turn].color;\r\n\t\t\tcellButton.style.opacity = 0.0;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcellButton.className = `game-table-cells player-${\r\n\t\t\t\t\tturn ? \"o\" : \"x\"\r\n\t\t\t\t}-cell animate-new-move`;\r\n\t\t\t\tcellButton.style.opacity = 1.0;\r\n\t\t\t}, 100);\r\n\r\n\t\t\tthis.inspectAreaAroundTheCell(cell.floor, cell.row, cell.column);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tinspectAreaAroundTheCell = (floor, row, column) => {\r\n\t\t// inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n\t\t// is it needed to write a inspectAll method ?\r\n\t\tconst { players, table, dimension } = this.state;\r\n\t\tconst playerInTheCell = table[floor][row][column];\r\n\t\tlet rowCount = 0,\r\n\t\t\tcolumnCount = 0,\r\n\t\t\tfloorMainDiagCount = 0,\r\n\t\t\tfloorSideDiagCount = 0,\r\n\t\t\ttableMainDiagCount = 0,\r\n\t\t\ttableSideDiagCount = 0,\r\n\t\t\ttableAltitudeCount = 0,\r\n\t\t\ttableRowFloorMainDiagCount = 0,\r\n\t\t\ttableRowFloorSideDiagCount = 0,\r\n\t\t\ttableColumnFloorMainDiagCount = 0,\r\n\t\t\ttableColumnFloorSideDiagCount = 0;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tif (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n\t\t\tif (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n\t\t\tif (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n\t\t\tif (row === column) {\r\n\t\t\t\tif (table[floor][i][i] === playerInTheCell)\r\n\t\t\t\t\tfloorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n\t\t\t\tif (row === floor && table[i][i][i] === playerInTheCell)\r\n\t\t\t\t\ttableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (row + column + 1 === dimension) {\r\n\t\t\t\tif (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n\t\t\t\t\tfloorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n\t\t\t\tif (\r\n\t\t\t\t\trow === floor &&\r\n\t\t\t\t\ttable[i][i][dimension - i - 1] === playerInTheCell\r\n\t\t\t\t)\r\n\t\t\t\t\ttableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (floor === column && table[i][row][i] === playerInTheCell)\r\n\t\t\t\ttableRowFloorMainDiagCount++;\r\n\t\t\tif (\r\n\t\t\t\tfloor + column + 1 === dimension &&\r\n\t\t\t\ttable[i][row][dimension - i - 1] === playerInTheCell\r\n\t\t\t)\r\n\t\t\t\ttableRowFloorSideDiagCount++;\r\n\t\t\tif (floor === row && table[i][i][column] === playerInTheCell)\r\n\t\t\t\ttableColumnFloorMainDiagCount++;\r\n\t\t\tif (\r\n\t\t\t\tfloor + row + 1 === dimension &&\r\n\t\t\t\ttable[i][dimension - i - 1][column] === playerInTheCell\r\n\t\t\t)\r\n\t\t\t\ttableColumnFloorSideDiagCount++;\r\n\t\t}\r\n\r\n\t\t// now inspect whether a line has been made and take action for it\r\n\t\t// the actual purpose of lines below, is to convert cell:{floor, row, format} format to ButtonID format;\r\n\t\t// ButtonID (or cellID) format is an integer between 0 and (dimension^3)\r\n\t\trowCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension + row * dimension,\r\n\t\t\t\t1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\tcolumnCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension + column,\r\n\t\t\t\tdimension,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\tfloorMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension,\r\n\t\t\t\tdimension + 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\tfloorSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension + (dimension - 1),\r\n\t\t\t\tdimension - 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\t0,\r\n\t\t\t\tdimension * (dimension + 1) + 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tdimension - 1,\r\n\t\t\t\tdimension * (dimension + 1) - 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableAltitudeCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\trow * dimension + column,\r\n\t\t\t\tdimension * dimension,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableRowFloorMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\trow * dimension,\r\n\t\t\t\tdimension * dimension + 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableRowFloorSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\t(row + 1) * dimension - 1,\r\n\t\t\t\tdimension * dimension - 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableColumnFloorMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tcolumn,\r\n\t\t\t\tdimension * (dimension + 1),\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableColumnFloorSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tdimension * (dimension - 1) + column,\r\n\t\t\t\tdimension * (dimension - 1),\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t};\r\n\r\n\t// method below: checks each possible line(according to the condition that user gives it),\r\n\t// if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n\tconnectTheScoreLines = (firstCell, step, player) => {\r\n\t\tconst { dimension, turn } = this.state;\r\n\t\tconst { room } = this.props;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tthis.cellButtons[\r\n\t\t\t\tfirstCell + i * step\r\n\t\t\t].className = `game-table-cells btn btn-${player.lineColor}`;\r\n\t\t\t!room.scoreless &&\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t\t].className = `game-table-cells player-${\r\n\t\t\t\t\t\tturn ? \"o\" : \"x\"\r\n\t\t\t\t\t}-cell`;\r\n\t\t\t\t}, 1000 + i * 100);\r\n\t\t}\r\n\t};\r\n\r\n\tcloseThisGame = () => {\r\n\t\tthis.state.socketGamePlay.close();\r\n\t\tthis.setState({ socketGamePlay: null });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.CleanScoreboard();\r\n\t\t\tthis.props.ResetOpponent();\r\n\t\t\tthis.props.ExitRoom();\r\n\t\t\tthis.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tendThisGame = () => {\r\n\t\tconst { players, myTurn } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\t\t//NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n\t\tif (players[myTurn].score > players[oppTurn].score)\r\n\t\t\tNotify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n\t\telse if (players[myTurn].score === players[oppTurn].score)\r\n\t\t\tNotify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n\t\telse Notify(\"شما باختید\");\r\n\t\t//reset everything:\r\n\t\tthis.closeThisGame();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<TableDesign\r\n\t\t\t\tdimension={this.state.dimension}\r\n\t\t\t\tplayers={this.state.players}\r\n\t\t\t\ttable={this.state.table}\r\n\t\t\t\tturn={this.state.turn}\r\n\t\t\t\ttimeRemaining={this.state.timeRemaining}\r\n\t\t\t\tonEachCellClick={this.onEachCellClick}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(GamePlay));","import { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport { Attention, Notify, OK } from \"../tools/notification\";\r\nimport {\r\n\tCloseRandomSearch,\r\n\tReapeatRandomSearch,\r\n} from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Routes } from \"../services/configs\";\r\nconst RandomGame = () => {\r\n\tconst [dimension, setDimension] = useState(4);\r\n\tconst [isScoreless, setScoreless] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [searching, setSearching] = useState(false);\r\n\tconst context = useContext(GlobalContext);\r\n\tconst dispatch = useDispatch();\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\r\n\tconst onStartGameClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (me) {\r\n\t\t\tdispatch(\r\n\t\t\t\tEnterRoom({\r\n\t\t\t\t\tname: null,\r\n\t\t\t\t\ttype: dimension,\r\n\t\t\t\t\tscoreless: isScoreless,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\tsetSearching(true);\r\n\t\t}\r\n\t\t// random game:\r\n\t\telse {\r\n\t\t\tAttention(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n\t\t\tcontext.goTo(Routes.Client.SignUp);\r\n\t\t}\r\n\t};\r\n\tconst { randomSearchRepeats } = tools;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (searching) {\r\n\t\t\tif (room.name) {\r\n\t\t\t\tOK(\r\n\t\t\t\t\t\"یک حریف تصادفی پیدا شد ... در صورت تایید هر دو طرف بازی آغاز خواهد شد.\"\r\n\t\t\t\t);\r\n\t\t\t\tsetSearching(false);\r\n\t\t\t} else if (!randomSearchRepeats) {\r\n\t\t\t\t//means no one has been found after a specific amount of time\r\n\t\t\t\tNotify(\"حریفی پیدا نشد ... لحظاتی دیگر مجددا تلاش کنید\");\r\n\t\t\t\tsetSearching(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [searching, room.name, randomSearchRepeats]);\r\n\t//on destroy\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tsetSearching(false); //make sure preloader turns off\r\n\t\t\tdispatch(CloseRandomSearch());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={searching} />\r\n\t\t\t<hr />\r\n\t\t\t<Form onSubmit={(event) => onStartGameClick(event)}>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">نوع بازی</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"0\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={!isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text className=\"ml-5\">\r\n\t\t\t\t\t\t\tامتیازی\r\n\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text>سرعتی</InputGroup.Text>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 3}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(3)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 4}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 5}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(5)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tvariant=\"success\">\r\n\t\t\t\t\t<i className=\"fa fa-search px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tجستجو\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default RandomGame;\r\n","import { Button, Container, Modal, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { useState, Fragment } from \"react\";\r\n\r\nconst ModalContesters = ({ contesters }) => {\r\n\tconst [show, setShow] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Button\r\n\t\t\t\tblock\r\n\t\t\t\tonClick={() => setShow(true)}\r\n\t\t\t\tvariant=\"outline-secondary\">\r\n\t\t\t\tبازیکنان حاضر\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Modal show={show} onHide={() => setShow(false)}>\r\n\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t{contesters &&\r\n\t\t\t\t\t\t\tcontesters.map((contester) => (\r\n\t\t\t\t\t\t\t\t<Row className=\" mx-auto text-center animated-button\">\r\n\t\t\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t{contester.fullname}\r\n\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tclassName=\"text-center animated-button\"\r\n\t\t\t\t\t\t\t\tonClick={() => setShow(false)}\r\n\t\t\t\t\t\t\t\tvariant=\"outline-danger\">\r\n\t\t\t\t\t\t\t\tبستن\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ModalContesters;\r\n","import { Card, Alert, Badge, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Status } from \"../services/configs\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nimport gameServices from \"../services/http/gameServices\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport ModalContesters from \"./ModalContesters\";\r\nimport GlobalContext from \"./../globals/state/GlobalContext\";\r\n\r\nconst SingleLeagueCard = ({ league, reload }) => {\r\n\tconst Summaries = [\r\n\t\t\"بصورت تصادفی تمامی بازیکنان با هم مسابقه می دهند و بازنده ی هر بازی از جام حذف شده و برنده به مرحله ی بعد صعود می کند. قهرمان این جام فردی است که تمامی حریفانش را شکست دهد.\",\r\n\t\t\"هر بازیکن، با تمامی بازیکنان دیگر، بازی مستقل کرده و بسته به نتیجه ای که کسب می کنند امتیازاتی کسب می کنند. قهرمان این کسابقات، بازیکنی است که در جدول رده بندی نفر اول باشد.\",\r\n\t\t\"این مسابقه، ترکیبی از جام حذفی و لیگ اصلی است. در دور مقدماتی، بازیکنان در گروه بندی اختصاص یافته ی خود، رقابت می کنند. نفر اول و دوم هر گروه به دور دوم این مسابقات که ماهیت حذفی دارد صعود می کنند.\",\r\n\t];\r\n\tconst Colors = [\"dark\", \"primary\", \"success\", \"warning\"];\r\n\tconst [showMore, toggleShow] = useState(false); //show showMore or not?\r\n\tconst [ready, setReady] = useState(false); // if league is ready to play\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tconst join = async () => {\r\n\t\ttry {\r\n\t\t\tconst { status } = await gameServices.joinLeague(league.leagueID);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(` شما با موفقیت به لیگ ${league.title} ملحق شدید.`);\r\n\t\t\t\treload();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (err.response.status === Status.MethodNotAllowed)\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"پیوستن به این لیگ مجاز نیست. ظرفیت این لیگ تکمیل شده است.\"\r\n\t\t\t\t);\r\n\t\t\telse if (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst enter = () => {\r\n\t\t// ask server whether the client is really a contester or not\r\n\t\t// re route the client to league route\r\n\t\t// dispatch a redux contaning leagueID of the league is currntly openning\r\n\t\tcontext.openLeaguePage(league.leagueID);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tleague &&\r\n\t\t\tleague.contesters &&\r\n\t\t\tleague.contesters.length === league.capacity &&\r\n\t\t\tleague.started\r\n\t\t\t// && !league.finished\r\n\t\t) {\r\n\t\t\t// if capacity is full,\r\n\t\t\t// check if player is in the league => if so then add an option for opening league room\r\n\t\t\tsetReady(true);\r\n\t\t}\r\n\t}, [league]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`bg-transparent single-league-card border-${\r\n\t\t\t\tColors[league.Mode]\r\n\t\t\t}`}>\r\n\t\t\t<Card.Body\r\n\t\t\t\tonClick={(e) => toggleShow(!showMore)}\r\n\t\t\t\tclassName=\"expand-opacity-animation\">\r\n\t\t\t\t<Card.Title className=\"text-center\">{league.title}</Card.Title>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{!showMore && (\r\n\t\t\t\t\t<Card.Text className=\"league-description-text text-right\">\r\n\t\t\t\t\t\t{Summaries[league.Mode]}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t)}\r\n\t\t\t\t{showMore && (\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tclassName=\"text-right w-100\"\r\n\t\t\t\t\t\tpill=\"true\"\r\n\t\t\t\t\t\tvariant=\"info\">\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tظرفیت :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.capacity}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tنفر\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tجایزه نفر اول :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.prize}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tامتیاز\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tتعداد شرکت کنندگان :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.contesters.length}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tنفر\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Body>\r\n\t\t\t{showMore && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t{!ready ? (\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\t\t\t\t\t\tonClick={join}>\r\n\t\t\t\t\t\t\t\t\tپیوستن\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<ModalContesters\r\n\t\t\t\t\t\t\t\t\tcontesters={league.contesters}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tclassName=\"animated-button\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={enter}>\r\n\t\t\t\t\t\t\t\tوزود به لیگ\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SingleLeagueCard;\r\n","import { Col, Nav, Row, Tab, Container } from \"react-bootstrap\";\r\nimport \"./leagues.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport gameServices from \"../services/http/gameServices\";\r\nimport { Status } from \"../services/configs\";\r\nimport { Sorry } from \"../tools/notification\";\r\nimport SingleLeagueCard from \"./SingleLeagueCard\";\r\nconst Leagues = () => {\r\n\tconst [leagues, setLeagues] = useState([]);\r\n\tconst [reload, triggerReload] = useState(false); //a trigger for run reload competition and leagues when needed\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await gameServices.listLeagues();\r\n\t\t\t\tif (status === Status.Successful) setLeagues([...data.leagues]);\r\n\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t})();\r\n\t}, [reload]);\r\n\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<hr />\r\n\t\t\t<Row>\r\n\t\t\t{leagues.map(league => \r\n\t\t\t\t<Col className=\"mb-5\" lg={6} md={6} sm={12} xs={12}><SingleLeagueCard reload={() => triggerReload(!reload)} league={league} /></Col>\r\n\t\t\t)}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Leagues;\r\n\t\t// <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n\t\t// \t<hr />\r\n\t\t// \t<Row>\r\n\t\t// \t\t<Col className=\"competition-menu-body\" sm={3}>\r\n\t\t// \t\t\t<Nav variant=\"pills\" className=\"flex-column\">\r\n\t\t// \t\t\t\t{leagues.map((league) => (\r\n\t\t// \t\t\t\t\t<Nav.Item>\r\n\t\t// \t\t\t\t\t\t<Nav.Link\r\n\t\t// \t\t\t\t\t\t\tclassName=\"text-right\"\r\n\t\t// \t\t\t\t\t\t\teventKey={league.leagueID}>\r\n\t\t// \t\t\t\t\t\t\t{league.title}\r\n\t\t// \t\t\t\t\t\t</Nav.Link>\r\n\t\t// \t\t\t\t\t</Nav.Item>\r\n\t\t// \t\t\t\t))}\r\n\t\t// \t\t\t</Nav>\r\n\t\t// \t\t</Col>\r\n\t\t// \t\t{/* <div style={{borderLeft: '1px solid gray', height:'500px'}}></div> */}\r\n\t\t// \t\t<Col sm={9}>\r\n\t\t// \t\t\t<Tab.Content>\r\n\t\t// \t\t\t\t{leagues.map((league) => (\r\n\t\t// \t\t\t\t\t<Tab.Pane eventKey={league.leagueID}>\r\n\t\t// \t\t\t\t\t\t<LeagueDescription league={league} />\r\n\t\t// \t\t\t\t\t</Tab.Pane>\r\n\t\t// \t\t\t\t))}\r\n\t\t// \t\t\t</Tab.Content>\r\n\t\t// \t\t</Col>\r\n\t\t// \t</Row>\r\n\t\t// </Tab.Container>","\r\nimport { Form } from 'react-bootstrap';\r\nimport { Fragment } from 'react';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { T3D } from '../services/configs/gamesetting';\r\nconst SinglePlayer = () => {\r\n    // This game is a game between a player and the artificial intelligense\r\n\tconst [dimension, setDimension] = useState(4);\r\n\tconst [isScoreless, setScoreless] = useState(false);\r\n\tconst [difficulty, setDifficulty] = useState(1);\r\n\r\n    const onStartSinglePlayerClick = (event) => {\r\n\r\n    }\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<hr />\r\n\t\t\t<Form onSubmit={(event) => onStartSinglePlayerClick(event)}>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">نوع بازی</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"0\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={!isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text className=\"ml-5\">\r\n\t\t\t\t\t\t\tامتیازی\r\n\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text>سرعتی</InputGroup.Text>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 3}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(3)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 4}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 5}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(5)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n                <Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">درجه سختی</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"0\"\r\n\t\t\t\t\t\t\tname=\"difficulty\"\r\n\t\t\t\t\t\t\tchecked={difficulty === T3D.Difficulty.Easy}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text className=\"ml-5\">\r\n\t\t\t\t\t\t\tراحت\r\n\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tname=\"difficulty\"\r\n\t\t\t\t\t\t\tchecked={difficulty === T3D.Difficulty.Medium}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text className=\"ml-5\">متوسط</InputGroup.Text>\r\n                        <InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tname=\"difficulty\"\r\n\t\t\t\t\t\t\tchecked={difficulty === T3D.Difficulty.Hard}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text>سخت</InputGroup.Text>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tvariant=\"success\">\r\n\t\t\t\t\t<i className=\"fa fa-street-view px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tشروع بازی\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\nexport default SinglePlayer;","import GamePlay from \"./gameplay/GamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RandomGame from \"./RandomGame\";\r\nimport { Tab, Tabs, Card, Button, Row, Col, Container, Alert } from \"react-bootstrap\";\r\nimport { Fragment, useState } from \"react\";\r\nimport Leagues from \"../leagues/Leagues\";\r\nimport SinglePlayer from './SinglePlayer';\r\n\r\nconst GameDeck = () => {\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [continueGame, setContinueGame] = useState(false);\r\n\tconst [surrender, setSurrender] = useState(false);\r\n\r\n\tconst onSurrenderClick = () => {\r\n\t\tsetSurrender(true);\r\n\t\tsetContinueGame(true);\r\n\t};\r\n\r\n\t//***** */ show opponent record before game start choice\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{continueGame && room.name ? (\r\n\t\t\t\t<GamePlay surrender={surrender} />\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tborder=\"secondary\"\r\n\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\tclassName=\"game-deck-card\">\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\ttransition={false}\r\n\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t\t{Boolean(room.name) && (\r\n\t\t\t\t\t\t\t\t<Tab eventKey=\"currentGame\" title=\"بازی کنونی\">\r\n\t\t\t\t\t\t\t\t\t<Container>\r\n                                    <hr />\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Col>\r\n                                            <Alert className=\"text-center\" variant=\"primary\">{`نوع بازی: ${room.scoreless ? \"سرعتی\" : \"امتیازی\"}`}</Alert>\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <Alert className=\"text-center\" variant=\"primary\">{`ابعاد بازی: ${room.type} * ${room.type} * ${room.type}`}</Alert>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <hr />\r\n                                        <Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetContinueGame(true)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-gamepad-o px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tادامه بازی\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={onSurrenderClick}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-gamepad-o px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tتسلیم\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\teventKey=\"randomGame\"\r\n\t\t\t\t\t\t\t\tdisabled={Boolean(room.name)}\r\n\t\t\t\t\t\t\t\ttitle=\"بازی تصادفی\">\r\n\t\t\t\t\t\t\t\t<RandomGame />\r\n\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\teventKey=\"leagues\"\r\n\t\t\t\t\t\t\t\tdisabled={Boolean(room.name)}\r\n\t\t\t\t\t\t\t\ttitle=\"لیگ ها\">\r\n\t\t\t\t\t\t\t\t<Leagues />\r\n\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\teventKey=\"singleplayer\"\r\n\t\t\t\t\t\t\t\tdisabled={Boolean(room.name)}\r\n\t\t\t\t\t\t\t\ttitle=\"تک نفره\">\r\n\t\t\t\t\t\t\t\t<SinglePlayer />\r\n\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport AllScores from \"./AllScores\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nclass ScoresTable extends Component {\r\n\tstate = {\r\n\t\tliveScores: [],\r\n\t\tfinalScores: [],\r\n\t\tshowLiveOnes: false,\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t// get all game results , live or final, handling promises\r\n\t\t// client and server side for this Module seriously need to be edited\r\n\t\t(async () => {\r\n\t\t\tthis.setState({ loading: true }); // use preloader here?\r\n\t\t\tconst { data, status } = await gameServices.getAllGames();\r\n\t\t\tif (status === Configs.Status.Successful) return data.allGames;\r\n\t\t\treturn [];\r\n\t\t})()\r\n\t\t\t.then((result) => {\r\n\t\t\t\tresult = [...result.reverse()];\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tliveScores: result.filter((game) => game.isLive),\r\n\t\t\t\t\tfinalScores: result.filter((game) => !game.isLive),\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\t//EDIT EDIT EDIT\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//******* handle errors */\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"بارگذاری لیست بازی ها موفقیت آمیز نبود. لطفا لحظاتی بعد مجددا تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.setState({ finalScores: [], loading: false });\r\n\t\t\t});\r\n\t}\r\n\r\n\tbtnShowLiveScores = () => {\r\n\t\tthis.setState({ showLiveOnes: true });\r\n\t};\r\n\r\n\tbtnShowFinalScores = () => {\r\n\t\tthis.setState({ showLiveOnes: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\t// game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n\t\t/* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n\t\tlet { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n\t\t// DESIGN : USE <Tabs> ???\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row className=\"scores-mode-select-layout\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\tshowLiveOnes\r\n\t\t\t\t\t\t\t\t\t? \"outline-success\"\r\n\t\t\t\t\t\t\t\t\t: \"outline-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"scores-mode-select-button\"\r\n\t\t\t\t\t\t\tonClick={this.btnShowLiveScores}>\r\n\t\t\t\t\t\t\tنتایج زنده\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-play-circle px-3\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t!showLiveOnes\r\n\t\t\t\t\t\t\t\t\t? \"outline-success\"\r\n\t\t\t\t\t\t\t\t\t: \"outline-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"scores-mode-select-button\"\r\n\t\t\t\t\t\t\tonClick={this.btnShowFinalScores}>\r\n\t\t\t\t\t\t\tنتایج نهایی\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-check-circle-o px-3\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{/* this single column is to make mode select buttons and Allscores same width */}\r\n\t\t\t\t\t\t<AllScores\r\n\t\t\t\t\t\t\tscores={showLiveOnes ? liveScores : finalScores}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ScoresTable;\r\n","import { Button, Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage, Routes } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\nimport GlobalContext from './../globals/state/GlobalContext';\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstatic contextType = GlobalContext;\r\n\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.context.goTo(Routes.Client.Root);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\"ورود با مشکل مواجه شد. لطفا ارتباط اینترنت خود را بررسی کنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3 form-inline\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\tclassName=\"mb-3 form-inline\"\r\n\t\t\t\t\t\t\t\tcontrolId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tرمز عبور\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row className=\"p-0\">\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModalSignIn;\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card animated-form\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام خانوادگی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>شماره دانشجویی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>تایید رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Row className=\"justify-content-center my-3\">\r\n\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"Your client site key\" />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import { useSelector } from 'react-redux';\r\nconst SinglePlayerCard = ({rowNumber, playerID, name, points, wins, loses, draws }) => {\r\n    const me = useSelector(state => state.me);\r\n\r\n    return (\r\n        <tr className={!me || playerID !== me.userID ? \"\" : \"bg-success\"}>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SinglePlayerCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SinglePlayerCard from \"./SinglePlayerCard\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n            <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                <thead className=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">نام بازیکن</th>\r\n                        <th scope=\"col\">امتیاز</th>\r\n                        <th scope=\"col\">تعداد برد</th>\r\n                        <th scope=\"col\">تعداد باخت</th>\r\n                        <th scope=\"col\">تعداد تساوی</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <SinglePlayerCard\r\n                            key={player.userID}\r\n                            rowNumber={\r\n                                players.findIndex(\r\n                                    (p) => p.userID === player.userID\r\n                                ) + 1\r\n                            }\r\n                            playerID={player.userID}\r\n                            name={player.fullname}\r\n                            points={player.records.points}\r\n                            wins={player.records.wins}\r\n                            loses={player.records.loses}\r\n                            draws={player.records.draws}></SinglePlayerCard>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nclass Rankings extends Component {\r\n\tstate = { players: [], loading: false };\r\n\r\n\tcomponentDidMount() {\r\n\t\t(async () => {\r\n\t\t\tthis.setState({ loading: true });\r\n\t\t\tconst { data, status } = await userServices.getAllPlayers();\r\n\t\t\tif (status === Configs.Status.Successful) return data.players;\r\n\t\t\treturn [];\r\n\t\t})()\r\n\t\t\t.then((result) => {\r\n\t\t\t\tlet tempPlayers = [...result];\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tplayers: tempPlayers.sort(\r\n\t\t\t\t\t\t//sort priorities: 1. more points 2. more wins 3. less loses\r\n\t\t\t\t\t\t(p1, p2) =>\r\n\t\t\t\t\t\t\tp2.records.points - p1.records.points ||\r\n\t\t\t\t\t\t\tp2.records.wins - p1.records.wins ||\r\n\t\t\t\t\t\t\tp1.records.loses - p2.records.loses\r\n\t\t\t\t\t),\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//******* handle errors */\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"بارگذاری جدول رده بندی موفقیت آمیز نبود. لطفا ارتباط اینترنتی خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.setState({ players: [], loading: false });\r\n\t\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { players, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Row className=\"mx-auto mt-3\">\r\n\t\t\t\t{loading ? <LoadingBar loading={loading} /> : null}\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<AllPlayers players={players} />\r\n\t\t\t\t</Row>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rankings;\r\n","import { Card, Col, Form, Row, Button } from \"react-bootstrap\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport '../profile.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst EditStudent = ({userID}) => {\r\n    const [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        //find student via userID\r\n\r\n        setLoading(false)\r\n    }, [])\r\n    const saveChanges = (event) => {\r\n        event.preventDefaults();\r\n    }\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"Full Name\"\r\n\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">ایمیل</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n                    disabled\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n                <Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default EditStudent;\r\n","import { Button, Card, Col, Form, Row, Tabs } from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport EditStudent from \"./EditStudent\";\r\nimport \"../profile.css\";\r\nimport { useState } from \"react\";\r\nconst StudentsManagement = () => {\r\n\tconst [userID, setUserID] = useState(null);\r\n    const [lookFor, setLookFor] = useState(\"\");\r\n\r\n    const searchForStudent = (event) => {\r\n        event.preventDefaults();\r\n        // search data base and find student name\r\n        // return student userID\r\n        // then in each tab request data associated with the userid\r\n    }\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t{!userID && <Card.Header>\r\n\t\t\t\t<Form onSubmit={e => searchForStudent(e)}>\r\n\t\t\t\t\t<Row className=\" w-100\">\r\n\t\t\t\t\t\t<Col lg={10} md={10} sm={9} xs={9}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"نام دانشجو\"\r\n                                value={lookFor}\r\n                                onChange={e => setLookFor(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox mt-0 animated-textbox\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"text-left\" lg={2} md={2} sm={3} xs={3}>\r\n\t\t\t\t\t\t\t<Button className=\"animated-button\" block variant=\"warning\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form>\r\n\t\t\t</Card.Header>}\r\n\t\t\t{userID && (\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tdefaultActiveKey=\"strecords\"\r\n\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t<Tab eventKey=\"strecords\" title=\"رکوردها\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stedit\" title=\"ویرایش دانشجو\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<EditStudent userID={userID}/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stfriends\" title=\"روابط\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stdelete\" title=\"حذف\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default StudentsManagement;\r\n","import { useState } from \"react\";\r\nimport { Row, Col, Form, Button, Card } from \"react-bootstrap\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport { Sorry, OK } from \"./../../tools/notification\";\r\nimport gameServices from \"./../../services/http/gameServices\";\r\nimport { Status } from \"../../services/configs\";\r\n\r\nconst LeaguesManager = () => {\r\n\tconst [Mode, setMode] = useState(0);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [capacity, setCapacity] = useState(20);\r\n\tconst [prize, setPrize] = useState(50);\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst create = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await gameServices.createLeague(\r\n\t\t\t\tMode,\r\n\t\t\t\ttitle,\r\n\t\t\t\tcapacity,\r\n\t\t\t\tprize\r\n\t\t\t);\r\n\t\t\tif (status === Status.CreatedSuccessfully)\r\n\t\t\t\tOK(`لیگ ${title} با موفقیت ساخته شد.`);\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\tconst Modes = { Kickout: 0, Main: 1, Championship: 2, Custom: 3 };\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => create(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card\r\n\t\t\t\tborder=\"success\"\r\n\t\t\t\tbg=\"transparent\"\r\n\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t<Card.Header className=\"text-center\">اطلاعیه جدید</Card.Header>\r\n\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t<Row className=\"mt-3 justify-content-center\">\r\n\t\t\t\t\t\t<Form.Label className=\"text-center\">نوع لیگ</Form.Label>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"m-0 p-0\">\r\n\t\t\t\t\t\t<Col className=\"mt-3 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Kickout\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Kickout)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\tحذفی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"mt-3 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Main\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Main)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\tامتیازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"mt-3 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Championship\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Championship)}>\r\n\t\t\t\t\t\t\t\tقهرمانان\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"mt-3 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Custom\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Custom)}>\r\n\t\t\t\t\t\t\t\tکاستوم\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t<Row className=\"mt-3\">\r\n\t\t\t\t\t\t<Col className=\"mt-3 text-center\" xs={2}>\r\n\t\t\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\t\t\tنام لیگ\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام لیگ باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"نام لیگ\"\r\n\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"mt-3 justify-content-center\">\r\n\t\t\t\t\t\t<Form.Label className=\"text-center\">تنظیمات</Form.Label>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col className=\"mt-3 text-center\">\r\n\t\t\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t\t\t<Row className=\"justify-content-around\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\tظزفیت\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"ظرفیت\"\r\n\t\t\t\t\t\t\t\tvalue={capacity}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setCapacity(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"mt-3 text-center\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row className=\"justify-content-around\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\tجایزه(امتیاز)\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"جایزه\"\r\n\t\t\t\t\t\t\t\tvalue={prize}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPrize(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"p-1 m-0 mt-4\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tساخت لیگ\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default LeaguesManager;\r\n","import { Card, Container, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useContext } from \"react\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport { Devices } from \"../../services/configs\";\r\n\r\nconst SingleMatchCard = ({\r\n\tType,\r\n\tdate,\r\n\tplayerXName,\r\n\tplayerOName,\r\n}) => {\r\n\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\t// change this structure to remove using of context\r\n\treturn (\r\n\t\t<Card border=\"dark\" className=\"single-score-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"text-center mx-auto\">\r\n\t\t\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-6 text-right\">\r\n\t\t\t\t\t\t\t\t{playerXName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-2 col-md-2 text-center\">\r\n\t\t\t\t\t\t\t\t----\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-6 text-left\">\r\n\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">{playerXName}</span>\r\n\t\t\t\t\t\t\t</Row>\r\n                            <hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">\r\n\t\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SingleMatchCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport { useState, Fragment } from \"react\";\r\nimport SingleMatchCard from \"./SingleMatchCard\";\r\n\r\nimport \"./scores.css\";\r\nconst MatchesTable = ({ matches }) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{Boolean(matches.length) ? (\r\n\t\t\t\tmatches.map((match) => (\r\n\t\t\t\t\t<SingleMatchCard\r\n\t\t\t\t\t\t// key={match.gameID}\r\n\r\n\t\t\t\t\t\tplayerXName={match[0]}\r\n\t\t\t\t\t\tplayerOName={match[1]}></SingleMatchCard>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n\t\t\t\t\t<Card.Body className=\"text-center\">\r\n\t\t\t\t\t\t<Card.Text>هیچ قرعه ای انجام نگرفته است</Card.Text>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default MatchesTable;\r\n","import { useSelector } from \"react-redux\";\r\nimport MatchesTable from \"./matches/MatchesTable\";\r\nimport { Tab, Tabs, Card } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nconst LeagueHome = () => {\r\n\tconst league = useSelector((state) => state.league);\r\n\tconst [matches, setMatches] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tif (league && league.matches) {\r\n\t\t\tconst matches = league.matches[league.matches.length - 1].map(\r\n\t\t\t\t(match) => {\r\n\t\t\t\t\tconst playerXIndex = league.contesters.findIndex(\r\n\t\t\t\t\t\t(cont) => cont.userID === match[0]\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst playerOIndex = league.contesters.findIndex(\r\n\t\t\t\t\t\t(cont) => cont.userID === match[1]\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst names = [\r\n\t\t\t\t\t\tplayerXIndex >= 0\r\n\t\t\t\t\t\t\t? league.contesters[playerXIndex].fullname\r\n\t\t\t\t\t\t\t: \"ناشناس\",\r\n\t\t\t\t\t\tplayerOIndex >= 0\r\n\t\t\t\t\t\t\t? league.contesters[playerOIndex].fullname\r\n\t\t\t\t\t\t\t: \"ناشناس\",\r\n\t\t\t\t\t];\r\n\t\t\t\t\treturn names;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tsetMatches(matches);\r\n\t\t}\r\n\t}, [league]);\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tdefaultActiveKey=\"draws\"\r\n\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t<Tab eventKey=\"draws\" title=\"بازی ها\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<MatchesTable matches={matches} />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey=\"table\" title=\"جدول\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey=\"details\" title=\"جزییات\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default LeagueHome;\r\n","import { Row, Col } from 'react-bootstrap';\r\nimport LeagueHome from './../leagues/LeagueHome';\r\nimport { EnterLeague, ExitLeague } from './../globals/redux/actions/league';\r\nimport { browserStorage } from '../services/configs';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport LoadingBar from '../commons/LoadingBar';\r\nconst LeagueLayout = () => {\r\n    // right side => player record inside the league\r\n    // left sidebar => my upcomming games\r\n    // middle section => all games in this round\r\n    // not started games will have empty score badges\r\n    // started games score will be written, but the whole score card will be with minimum height, no game info button is needed\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tdispatch(EnterLeague(browserStorage.LEAGUE()));\r\n\t\t\t// profile unmounted\r\n\t\t} catch (err) {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ExitLeague());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n    return ( \r\n        <Row>\r\n            <LoadingBar loading={loading} />\r\n            <Col xs={12} sm={12} md={4} lg={3}>\r\n\r\n            </Col>\r\n            <Col>\r\n                <LeagueHome />\r\n            </Col>\r\n            <Col xs={0} sm={0} md={0} lg={3}>\r\n\r\n            </Col>\r\n        </Row>\r\n     );\r\n}\r\n \r\nexport default LeagueLayout;","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/admin/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AcountManager from './../profile/edit/AcountManager';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTable from './../tables/scores/ScoresTable';\r\nimport SignUp from '../users/SignUp';\r\nimport Rankings from './../tables/rankings/Rankings';\r\nimport StudentsManagement from '../profile/admin/StudentsManagement';\r\nimport LeaguesManager from './../profile/admin/LeaguesManager';\r\nimport LeagueLayout from './../layouts/LeagueLayout';\r\n\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AcountManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${Routes.Client.Admin}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.LeaguesManager}>\r\n\t\t\t\t\t\t\t<LeaguesManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.StudentManagement}>\r\n\t\t\t\t\t\t\t<StudentsManagement />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${Routes.Client.League}/:path?`} exact>\r\n\t\t\t\t<LeagueLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.League}>\r\n\t\t\t\t\t\t\t<LeaguesManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</LeagueLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<Rankings />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst { goTo } = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () =>\r\n\t\t\t\t\t\tgoTo(Routes.Client.ChatRoom)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID, gameInvitation.type));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tReloadRecords,\r\n\tReapeatRandomSearch,\r\n\tCloseRandomSearch,\r\n\tEmptyGameInvitations,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nimport { LoadThisPlayer } from \"./../../globals/redux/actions/player\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\tconst [reconnectingTimerID, setReconnectingTimerID] = useState(null);\r\n\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(\r\n\t\t(nextReconnectingTimeout = 5000) => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"global websocket connect called -> new socket returned\"\r\n\t\t\t);\r\n\t\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\t\tresolve(socket);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\t\tdispatch(EnterRoom(msg.room));\r\n\t\t\t\t\t\t\t\tmsg.opponent &&\r\n\t\t\t\t\t\t\t\t\tdispatch(LoadThisPlayer(msg.opponent));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tcontext.signOut();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\t\tconst { found, stats } = msg;\r\n\t\t\t\t\t\t\t\tif (found) {\r\n\t\t\t\t\t\t\t\t\tdispatch(EnterRoom(found));\r\n\t\t\t\t\t\t\t\t\tdispatch(CloseRandomSearch());\r\n\t\t\t\t\t\t\t\t\tmsg.opponent &&\r\n\t\t\t\t\t\t\t\t\t\tdispatch(LoadThisPlayer(msg.opponent));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\tif (!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (stats)\r\n\t\t\t\t\t\t\t\t\t//double check if stats is sent by server, this is for avoiding further crashes\r\n\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\tUpdateStatistics(\r\n\t\t\t\t\t\t\t\t\t\t\tstats.players,\r\n\t\t\t\t\t\t\t\t\t\t\tstats.games\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"GAME_CANCELLED\": {\r\n\t\t\t\t\t\t\t\tcontext.cancelGame();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\t\tif (answer) {\r\n\t\t\t\t\t\t\t\t\tOK(\r\n\t\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را پذیرفت`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t//reload for changing friendship status in the game => delay is set for restin assure that database is updated\r\n\t\t\t\t\t\t\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\t\tconst { askerID, askerName, gameType } = msg;\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tRecieveGameInvitation(\r\n\t\t\t\t\t\t\t\t\t\taskerID,\r\n\t\t\t\t\t\t\t\t\t\taskerName,\r\n\t\t\t\t\t\t\t\t\t\tgameType\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tcontext.redirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve(socket);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\t\tsocket.close();\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`Reconnecting to global socket in ${\r\n\t\t\t\t\t\t\t\tnextReconnectingTimeout / 1000\r\n\t\t\t\t\t\t\t} seconds`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst timerID = setTimeout(() => {\r\n\t\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t\t? await connect(\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextReconnectingTimeout * 2\r\n\t\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})();\r\n\t\t\t\t\t\t}, nextReconnectingTimeout);\r\n\t\t\t\t\t\tsetReconnectingTimerID(timerID);\r\n\t\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t\t};\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(`global websocket errpr: ${err}`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t[dispatch, pack, iamSignedIn, iamBusy]\r\n\t);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\treconnectingTimerID && clearTimeout(reconnectingTimerID);\r\n\t\t};\r\n\t}, [reconnectingTimerID]);\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchRepeats,\r\n\t\tacceptedGame,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (randomSearchRepeats) {\r\n\t\t\tif (room.type) {\r\n\t\t\t\t//is it necessary?\r\n\t\t\t\t//completely making sure we're on right stage\r\n\t\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\t\tpack(\"find\", {\r\n\t\t\t\t\t\t\tgameType: room.type,\r\n\t\t\t\t\t\t\tscoreless: room.scoreless,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t} else if (!room.name) {\r\n\t\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchRepeats, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedGame) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedGame.inviterID,\r\n\t\t\t\t\t\tgameType: acceptedGame.type,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tdispatch(EmptyGameInvitations());\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget.targetID,\r\n\t\t\t\t\t\tgameType: friendlyGameTarget.type,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tdispatch,\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedGame,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\tif (answer)\r\n\t\t\t// if request accepted => reload friendship status after some seconds, delay is set to make sure friends are linked in database\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t}, 5000);\r\n\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { interactionsReducer } from './interactions';\r\nimport { leagueReducer } from './league';\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    interactions: interactionsReducer,\r\n    league: leagueReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return {...action.payload};\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return {...action.payload};\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null, scoreless: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null, scoreless: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchRepeats: 0,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null,\r\n\t\tacceptedGame: null,\r\n\t\trecordReloadTrigger: false,\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const interactionsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_INTERACTIONS\":\r\n            return [...action.payload];\r\n        case \"RESET_INTERACTIONS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};","export const leagueReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_LEAGUE\":\r\n            return {...action.payload};\r\n        case \"EXIT_LEAGUE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices: { SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}","module.exports = {\r\n    T3D: {\r\n        TableRowMargings: [0, 41, 82, 123, 164],\r\n        TurnTimeOut: 45, //secs\r\n        Difficulty: {Easy: 0, Medium: 1, Hard: 2}\r\n    },\r\n    RandomSearchRepeatLimit: 5,\r\n};\r\n"],"sourceRoot":""}