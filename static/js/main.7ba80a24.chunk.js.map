{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","services/configs/gamesetting.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","globals/redux/actions/game.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","layouts/ProfilePanelLayout.jsx","globals/redux/actions/friends.js","commons/LoadingBar.jsx","services/http/gameServices.js","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/AllScores.jsx","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/NoticeManager.jsx","globals/redux/actions/chats.js","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/edit/Credentials.jsx","profile/edit/PasswordChange.jsx","profile/edit/ImagePicker.jsx","profile/edit/AvatarChange.jsx","profile/edit/AcountManager.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/GamePlay.jsx","games/SingleGame.jsx","games/competitions/CompetitionSummary.jsx","games/competitions/CompetitionsMain.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTable.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SinglePlayerCard.jsx","tables/rankings/AllPlayers.jsx","tables/rankings/Rankings.jsx","commons/MainRouter.jsx","tools/NotificationCenter.jsx","globals/redux/actions/index.js","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/chats.js","globals/redux/reducers/freinds.js","globals/redux/store/index.js","index.js","services/configs/index.js"],"names":["Profile","module","exports","Root","SignUp","SignIn","GameDeck","Rankings","GameGuide","ContactUs","ChatRoom","MyGamesAndFriends","Notices","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","MyAvatar","PasswordChange","Friends","Public","Administrators","Games","Mine","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","reset","clear","TOKEN","getItem","T3D","TableRowMargings","TurnTimeOut","GlobalContext","createContext","device","signOut","goTo","redirectToGamePlay","NavigationBar","me","useSelector","state","context","useContext","Navbar","bg","className","Container","Nav","activeClassName","to","Routes","Client","aria-hidden","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","style","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","expectedErrors","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","uploadAvatar","avatar","formData","FormData","append","getMyFriends","isMyFriend","targetID","isAdministrator","ResetOpponent","dispatch","a","ResetMyPlayer","EnterRoom","room","payload","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","findIndex","mode","Provider","value","push","destination","ProfilePanel","props","Row","Button","border","variant","Configs","aria-current","isAdmin","width","height","CollapsedPanel","AutoSignIn","opponent","storageToken","data","player","chatServices","getOurChat","friendID","getMyInteractions","ProfilePanelLayout","myFriends","myChats","interactions","Array","Error","forEach","interact","friend","messages","ownerOf","with","ID","map","msg","owner","date","Col","lg","sm","LoadingBar","loading","whichOne","setWhichOne","Math","floor","random","useLayoutEffect","document","body","overflowY","selectedLoader","time","customLoading","gameServices","getAllGames","getMyGames","objectify","DateObject","Date","calendar","persian","locale","persian_fa","toHijri","format","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Card","Body","Footer","block","size","AllScores","scores","length","score","players","name","gameID","Text","Record","title","small","ListGroup","Item","Badge","pill","TriggerRandomSearch","getState","previous","randomSearchTriggered","EndFriendlyInvitation","friendlyGameTarget","FriendRecords","gameType","setGameType","person","records","currentID","md","Image","src","roundedCircle","points","wins","draws","loses","xs","InviteToFriendlyGame","setTimeout","InputGroup","Prepend","Radio","checked","onChange","setLoading","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","area-hidden","Content","Pane","filter","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","UpdateMyChatList","sent","recieved","chats","find","chat","SendMessageTo","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","ourChat","setOurChat","ours","current","scrollIntoView","behavior","top","offsetTop","index","ref","onSubmit","event","preventDefault","composeMessage","myfriends","setFullname","studentID","setStudentID","email","setEmail","password","setPassword","pageUpdateTrigger","triggerPageUpdate","Group","disabled","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","checkConfirmPassword","ImagePicker","selector","preview","setPreview","rounded","imageFile","oFReader","FileReader","readAsDataURL","onload","oFREvent","result","updatePreview","files","accept","for","AvatarChange","myAvatar","selectMyAvatar","upload","AcountManager","TABS","Tabs","SignInSideBar","onSignInSubmitted","setState","Number","replace","this","autoComplete","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","piece","setPiece","thisIsMe","opp","isFriend","onFriendRequestClick","innerHTML","friendRequestTarget","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","roomName","resolve","server","WebSocket","onopen","send","onerror","close","onclose","withReduxDashboard","component","tools","LoadThisPlayer","ExitRoom","UpdateScoreboard","details","CleanScoreboard","BriefScoreboard","timeRemaining","timeStamp","setTimeStamp","aThird","GameSetting","textAlign","TableDesign","dimension","table","onEachCellClick","normalCell","dimens","i","row","direction","marginLeft","column","GamePlay","selected","lineColor","turn","myTurn","socketGamePlay","playerOnline","timerID","connectionCheckTimerID","updateGameScorebaord","oppTurn","enableTimerForMyMove","timeout","clearInterval","setInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","startTime","IDs","opponentID","cellID","nextMove","verifyAndApplyTheMove","getCellCoordinates","cellButtons","focus","endThisGame","closeThisGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","window","navigator","onLine","dimen","onFloorId","selectedCellButton","cell","cellButton","tempTable","inspectAreaAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","connectTheScoreLines","count","firstCell","step","getElementsByClassName","SingleGame","friendlyGame","setRoomName","searching","setSearching","onStartGameClick","borderRadius","padding","CompetitionSummary","summary","CompetitionsMain","transition","href","ScoresTable","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","Device","allGames","then","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","Modal","backdrop","show","onHide","closeButton","controlId","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SinglePlayerCard","rowNumber","scope","AllPlayers","p","tempPlayers","sort","p1","p2","MainRouter","path","gameInvitation","pushed","NewMsg","by","inviterID","acceptedGame","onClose","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","enableGlobalTimer","iamSignedIn","iamBusy","command","UpdateStatistics","answer","targetName","askerID","askerName","RecieveGameInvitation","respondToFriendshipRequest","margin","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById","ClientRoutes","require","ServerRoutes"],"mappings":"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","file":"static/js/main.7ba80a24.chunk.js","sourcesContent":["//client routes\r\n\r\n// Partial Routes\r\nconst Profile = \"/Profile\",\r\n    ChatRoom = \"ChatRoom\",\r\n    MyGamesAndFriends = \"GamesFriends\",\r\n    Notices = \"Notices\";\r\n\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/SignUp\",\r\n    SignIn: \"/SignIn\",\r\n    GameDeck: \"/GameDeck\",\r\n    Rankings: \"/Rankings\",\r\n    GameGuide: \"/GameGuide\",\r\n    ContactUs: \"/ContacUs\",\r\n    Profile,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Profile}/${Notices}`,\r\n};\r\n","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    MyAvatar: \"avatar\",\r\n    PasswordChange: \"password\",\r\n    Friends: \"friends\",\r\n    Public: \"public\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: \"single\",\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= 400\r\n        error.response.status < 500\r\n    );\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};\r\n","//browser storage keywords\r\nconst KeyToken = \"ptk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n};\r\n","module.exports = {\r\n    T3D: {\r\n        TableRowMargings: [0, 40, 80, 120, 160],\r\n        TurnTimeOut: 45, //secs\r\n    },\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {},\r\n    goTo: () => {},\r\n    redirectToGamePlay: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`درخواست بازی ${by.type}*${by.type}*${by.type} از ${by.name}\\n برای پذیرفتن دعوت کلیک کنید`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID, by.type),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\tconst expectedErrors =\r\n\t\t\terror.response &&\r\n\t\t\terror.response.status >= Status.BadRequest && // >= 400\r\n\t\t\terror.response.status < Status.InternalServerError; // < 500\r\n\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (!expectedErrors) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tsignIn: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tgetPlayer: (userID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Public}/${userID}`),\r\n\tgetAllPlayers: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Public}`),\r\n\tgetMe: () => http.get(`${Server.Root}/${Server.Users}/${Server.Private}`),\r\n\tgetMyCredentials: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t),\r\n\teditMyCredentials: (newMe) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t),\r\n\tchangeMyPassword: (passwords) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t),\r\n\tuploadAvatar: (avatar) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"avatar\", avatar);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.MyAvatar}`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t),\r\n\tisMyFriend: (targetID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t),\r\n\tisAdministrator: (userID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Administrators}/${userID}`\r\n\t\t),\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\n\r\nexport const ResetOpponent = () =>{\r\n    return async (dispatch) => {\r\n        await dispatch({type: \"RESET_OPPONENT\"})\r\n    }\r\n}\r\n\r\nexport const ResetMyPlayer = () => {\r\n    return async (dispatch) => {\r\n        await dispatch({ type: \"RESET_MINE\" });\r\n    };\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","export const EnterRoom = (room) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"ENTER_ROOM\",\r\n\t\t\tpayload: room,\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"EXIT_ROOM\",\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n\t};\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_SCOREBOARD\",\r\n\t\t\tpayload: details,\r\n\t\t});\r\n\t};\r\n};\r\n\r\n/*export const SetGameID = (gameID) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"SET_GAME_ID\",\r\n\t\t\tpayload: gameID,\r\n\t\t});\r\n\t};\r\n};*/\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { ResetMyPlayer } from './../redux/actions/player';\r\nimport { EnterRoom } from './../redux/actions/game';\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(\"GlobalStates rendered\"); //s\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t}\r\n\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t}  \r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={{ device, signOut, redirectToGamePlay, goTo }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = (props) => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button>\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to=\"/controlPanel/admin/whatever\">\r\n                                    <svg\r\n                                        className=\"bi me-2\"\r\n                                        width=\"16\"\r\n                                        height=\"16\"></svg>\r\n                                    امکانات ادمین\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = (props) => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n    return (\r\n        <Row bg=\"light\" className=\"profile-panel-sidebar-collapsed w-100 mx-auto pl-5\">\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                exact\r\n                to={Configs.Routes.Client.Profile}\r\n                className=\"nav-link\"\r\n                aria-current=\"page\">\r\n                <i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link\"\r\n                to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link\"\r\n                to={Configs.Routes.Client.ChatRoom}>\r\n                <i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n\r\n            {me && me.isAdmin && (\r\n                <Fragment>\r\n                    {/* admin tools */}\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link border-top\"\r\n                        to={Configs.Routes.Client.Notices}>\r\n                        <i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n                    </NavLink>\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link\"\r\n                        to=\"/controlPanel/admin/whatever\">\r\n                        <svg className=\"bi me-2\" width=\"16\" height=\"16\"></svg>\r\n                    </NavLink>\r\n                </Fragment>\r\n            )}\r\n\r\n            <Button\r\n                variant=\"outline-danger\"\r\n                onClick={context.signOut}>\r\n                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n            </Button>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from './../globals/redux/actions/player';\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\tif (storageToken) {\r\n\t\t\tconsole.log(`auth called then `);\r\n\t\t\tdispatch(LoadMyPlayer());\r\n\t\t} else {\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Fragment, useContext, useEffect } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { LoadMyFriendsChats, ResetMyFriendsChats } from \"../globals/redux/actions/friends\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n    const context = useContext(GlobalContext);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\t\tdispatch(LoadMyFriendsChats());\r\n\t\t// profile unmounted\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n            dispatch(ResetMyFriendsChats());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <AutoSignIn />\r\n            {(context.device === Devices.Desktop) ? (\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <Col lg={3}>\r\n                        <ProfilePanel />\r\n                    </Col>\r\n                    <Col lg={9}>{children}</Col>\r\n                </Row>\r\n            ) : (\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <Col className=\"mx-auto\" sm={12}>\r\n                        <CollapsedPanel />\r\n                    </Col>\r\n                    <Col sm={12}>{children}</Col>\r\n                </Row>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"./../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadMyFriendsChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myFriends = [],\r\n\t\t\t\tmyChats = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (!(interactions instanceof Array))\r\n\t\t\t\t\tthrow new Error(\"server response is not an array!\");\r\n\t\t\t\tinteractions.forEach((interact) => {\r\n\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\tmyFriends.push(friend);\r\n\t\t\t\t\tmyChats.push({\r\n\t\t\t\t\t\twith: friend.ID,\r\n\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t? { me: msg.text, friend: null, date: msg.date }\r\n\t\t\t\t\t\t\t\t: { me: null, friend: msg.text, date: msg.date }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"LOAD_FRIENDS\",\r\n\t\t\t\t\tpayload: myFriends,\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: myChats });\r\n\t\t\t\t// dispatch friends here\r\n\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetMyFriendsChats = () => {\r\n\treturn async(dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t}\r\n}","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n\tgetAllGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}`);\r\n\t},\r\n\tgetMyGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`);\r\n\t}\r\n};\r\n\r\nexport default gameServices;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState } from 'react';\r\nimport { toHijri } from \"../../tools/format\";\r\n\r\nconst SingleScoreCard = ({\r\n    Type,\r\n    date,\r\n    playerXName,\r\n    playerOName,\r\n    xScore,\r\n    oScore,\r\n}) => {\r\n    // format score text:\r\n    const [xBadge, setXBadge] = useState(null);\r\n    const [oBadge, setOBadge] = useState(null);\r\n    const [hijriDate, setHijriDate] = useState(null);\r\n    useEffect(() => {\r\n        setHijriDate(toHijri(date)[0]);//toHijri = [date, time]\r\n        if (xScore > oScore) {\r\n            // x won\r\n            setXBadge(\"badge-success\");\r\n            setOBadge(\"badge-danger\");\r\n        } else if (xScore === oScore) {\r\n            //draw\r\n            setXBadge(\"badge-warning\");\r\n            setOBadge(\"badge-warning\");\r\n        } else {\r\n            // o won\r\n            setOBadge(\"badge-success\");\r\n            setXBadge(\"badge-danger\");\r\n        }\r\n    }, [date, xScore, oScore]);\r\n    // make this card 'bg-transparent' too?\r\n    return (\r\n        <Card border=\"dark\" className=\"single-score-card\">\r\n            {/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n            <Card.Body>\r\n                <Row className=\"text-center mx-auto\">\r\n                    <span className=\"col-5\">{playerXName}</span>\r\n                    <span\r\n                        className={`badge badge-pill ${xBadge} single-score-badge col-1`}>\r\n                        {xScore}\r\n                    </span>\r\n\r\n                    <span\r\n                        className={`badge badge-pill ${oBadge} single-score-badge col-1`}>\r\n                        {oScore}\r\n                    </span>\r\n                    <span className=\"col-5\">{playerOName}</span>\r\n                </Row>\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-0\">\r\n                <Button\r\n                    variant=\"outline-dark\"\r\n                    block\r\n                    size=\"lg\"\r\n                    className=\"replay-game-button\">\r\n                        {hijriDate} \r\n                        <i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n                </Button>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <Fragment>\r\n            { scores.length ? scores.map(score => (\r\n                <SingleScoreCard key={score.gameID}\r\n                    Type={score.Type}\r\n                    date={score.date}\r\n                    playerXName={score.players[0].name}\r\n                    playerOName={score.players[1].name}\r\n                    xScore={score.players[0].score}\r\n                    oScore={score.players[1].score}\r\n                ></SingleScoreCard>\r\n            )) :\r\n            <Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n                <Card.Body className=\"text-center\">\r\n                    <Card.Text>\r\n                        هیچ بازی ای انجام نگرفته است\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                </Card>}\r\n        </Fragment>\r\n     );\r\n};\r\n \r\nexport default AllScores;","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-center\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","export const TriggerRandomSearch = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.randomSearchTriggered = !previous.randomSearchTriggered;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendRequestTarget = targetID;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendRequestTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendlyGameTarget = { targetID, type: gameType };\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendlyGameTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.gameInvitation = { ID, name, type: gameType };\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RejectGameInvitation = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const AcceptInvitation = (inviterID, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.acceptedGame = {inviterID, type: gameType};\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\n// reject invitation by nulling the field\r\n","import { Button, Card, Col, ListGroup, Row, InputGroup, Image } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport Record from \"./Record\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { useState } from 'react';\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\n\r\nconst FriendRecords = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst dispatch = useDispatch();\r\n\tif (!me) return null; //because of time delay to load player data, component crashes below\r\n\t//fix the bug in a better way\r\n\tconst person = props.friend ? props.friend : me;\r\n\tconst {records, avatar, userID: currentID} = person;\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && currentID !== me.userID) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(currentID,gameType));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Image className=\"friends-section-avatar\" src={avatar} roundedCircle />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{props.friend && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={gameType === 3}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={gameType === 4}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={gameType === 5}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport AllScores from \"../../tables/scores/AllScores\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst myFriends = useSelector((state) => state.friends);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames(serverResponse.data.myGames.reverse());\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? myFriends.findIndex((friend) => friend.ID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, myFriends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link eventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t<FriendRecords friend={null} />\r\n\t\t\t\t\t\t\t\t\t<AllScores scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\teventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tfriend={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? myFriends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AllScores \r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.ID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.ID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../services/configs\";\r\nimport \"./profile.css\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices(data.notices.reverse());\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","\r\nexport const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n\t// one time u load from server, then new messages are simply pushed to previous data\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst previous = [...getState().chats];\r\n\t\t\t// is it ok to use by refrence ?\r\n\t\t\tconsole.log(\"recieve update\");\r\n\t\t\tprevious.find(chat => chat.with === friendID).messages.push({\r\n\t\t\t\tname: name, //is name needed?\r\n\t\t\t\tme: sent ? text : null,\r\n\t\t\t\tfriend: recieved ? text : null,\r\n\t\t\t\tdate: new Date(),\r\n\t\t\t});\r\n\t\t\tawait dispatch({\r\n\t\t\t\ttype: \"LOAD_CHATS\",\r\n\t\t\t\tpayload: previous,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t//..propeer message\r\n\t\t\t// ...reset?\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetMyChats = () => {\r\n\treturn async(dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t}\r\n}\r\n/*\r\n// load all chats\r\nexport const LoadMyChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await chatServices.getMyChats();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst {myChats} = data;\r\n\t\t\t\tconsole.log(myChats);\r\n\t\t\t\tconst chats = myChats.map((chat) => {\r\n\t\t\t\t\tconst { ownerOf, friendID, messages } = chat;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twith: friendID,\r\n\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t? { me: msg.text, friend: null, date: msg.date }\r\n\t\t\t\t\t\t\t\t: { me: null, friend: msg.text, date: msg.date }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: chats });\r\n\t\t\t\t// dispatch friends here\r\n\t\t\t\t// chats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t\tawait dispatch({ type: \"LOAD_FRIENDS\", payload: chats });\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\t}\r\n\t};\r\n};*/","import { UpdateMyChatList } from \"./chats\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\tconst chats = useSelector((state) => state.chats);\r\n\tconst [ourChat, setOurChat] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet ours = chats.find((chat) => chat.with === friendID);\r\n\t\tsetOurChat(ours && ours.messages ? ours.messages : []);\r\n\t}, [chats, friendID]);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { recieved } = message;\r\n\t\tif (!message.sent && recieved && recieved.friendID === friendID) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t}, [message, ourChat, friendID, dispatch]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friendID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"big-single-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{ourChat &&\r\n\t\t\t\t\t\t\t\tourChat instanceof Array &&\r\n\t\t\t\t\t\t\t\tourChat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tourChat[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex - 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tconst myfriends = useSelector((state) => state.friends);\r\n\t\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t// id=\"left-tabs-example\"\r\n\t\t\t\t// defaultActiveKey={filterID}\r\n\t\t\t\t// onSelect={(key) => setFilterID(key)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3} md={3} sm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.ID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{friend.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\t// key={uuidv1()}\r\n\t\t\t\t\t\t\t\t\t\tfriendID={friend.ID}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport Configs from \"../../services/configs\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst Credentials = () => {\r\n\tconst [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n\r\n\tconst reloadPage = () => {\r\n\t\tsetLoading(false);\r\n\t\ttriggerPageUpdate(!pageUpdateTrigger);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } = await userServices.getMyCredentials();\r\n\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\tconst { me } = data;\r\n\t\t\t\t\tsetFullname(me.fullname);\r\n\t\t\t\t\tsetStudentID(me.studentID);\r\n\t\t\t\t\tsetEmail(me.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [pageUpdateTrigger]);\r\n\r\n\tconst saveChanges = async (event) => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\t// check all inputs plz\r\n        event.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.editMyCredentials({\r\n\t\t\t\tstudentID,\r\n\t\t\t\tfullname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(`تغییرات با موفقیت اعمال شد`);\r\n\t\t\t\t// dispatch(TriggerRecordUpdate());\r\n\t\t\t\t// find another way to update\r\n\r\n\t\t\t\treloadPage();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"Full Name\"\r\n\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">ایمیل</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-2\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n                            required\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Credentials;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst PasswordChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst checkConfirmPassword = (event) => {\r\n\t\tsetConfirmNewPassword(event.target.value);\r\n\t\tif (newPassword !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\r\n\r\n\tconst changeMyPassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n        setLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.changeMyPassword({\r\n\t\t\t\tpassword,\r\n\t\t\t\tnewPassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"رمز شما با موفقیت تغییر داده شد\");\r\n\t\t\t\tcontext.signOut();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={e => changeMyPassword(e)}>\r\n            <LoadingBar loading={loading} />\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tرمز عبور جدید\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tتایید رمز عبور جدید\r\n\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Confirm New Password\"\r\n\t\t\t\t\tvalue={confirmNewPassword}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={(event) => checkConfirmPassword(event)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-2\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-key px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر رمز عبور\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordChange;\r\n","import { Col, Form, Image, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Notify } from \"./../../tools/notification\";\r\nimport './avatar.css';\r\nconst ImagePicker = ({ selector }) => {\r\n\tconst [preview, setPreview] = useState(null);\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst { avatar } = me ? me : { avatar: null };\r\n\tuseEffect(() => {\r\n\t\tsetPreview(avatar);\r\n\t}, [avatar]);\r\n\tconst updatePreview = (imageFile) => {\r\n\t\ttry {\r\n\t\t\tselector(imageFile);\r\n\t\t\tconst oFReader = new FileReader();\r\n\t\t\toFReader.readAsDataURL(imageFile);\r\n\r\n\t\t\toFReader.onload = (oFREvent) => {\r\n\t\t\t\tsetPreview(oFREvent.target.result);\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tNotify(\"پیش نمایش فایل انتخابی با مشکل رو به رو شد.\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form.Group>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"text-center\" sm={4} xs={4} md={3} lg={2}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\tsrc={preview}\r\n\t\t\t\t\t\trounded\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tclassName=\"dropbox-rectangle\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"btn-outline-primary file-picker-control\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tid=\"filepicker\"\r\n\t\t\t\t\t\tonChange={(e) => updatePreview(e.target.files[0])}\r\n\t\t\t\t\t\taccept=\".jpg,.jpeg,.png\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"ابتدا عکس مورد نظر را از اینجا انتخاب کنید\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Form.Label\r\n\t\t\t\t\tfor=\"filepicker\"\r\n\t\t\t\t\tclassName=\"btn-outline-primary file-picker-label\">\r\n\t\t\t\t\tبا کلیک روی اینجا عکس خود را انتخاب کنید و یا فایل آن را\r\n\t\t\t\t\tبکشید و در وسط کادر سبز رنگ رها کنید ...\r\n\t\t\t\t</Form.Label>\r\n\t\t\t</Row>\r\n\t\t</Form.Group>\r\n\t);\r\n};\r\n\r\nexport default ImagePicker;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { OK } from \"../../tools/notification\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport ImagePicker from \"./ImagePicker\";\r\n\r\nconst AvatarChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [myAvatar, selectMyAvatar] = useState(null);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst upload = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.uploadAvatar(myAvatar);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"آواتار شما با موفقیت تغییر داده شد\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\tsetPassword(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => upload(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<ImagePicker selector={selectMyAvatar} />\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-2\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-upload px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر آواتار\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default AvatarChange;\r\n","import { Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport Credentials from \"./Credentials\";\r\nimport PasswordChange from \"./PasswordChange\";\r\nimport AvatarChange from './AvatarChange';\r\n\r\nconst AcountManager = () => {\r\n    //states\r\n    \r\n    const TABS = { CREDENTIALS: 0, AVATAR: 1, PASSWORD: 2 };\r\n\r\n\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tborder=\"secondary\"\r\n\t\t\t\tbg=\"transparent\"\r\n\t\t\t\tclassName=\"game-deck-card\">\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tdefaultActiveKey={TABS.CREDENTIALS}\r\n\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t<Tab eventKey={TABS.CREDENTIALS} title=\"ویرایش مشخصات\">\r\n\t\t\t\t\t\t\t<Credentials />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey={TABS.AVATAR} title=\"آواتار\">\r\n\t\t\t\t\t\t\t<AvatarChange />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey={TABS.PASSWORD} title=\"تغییر رمزعبور\">\r\n\t\t\t\t\t\t\t<PasswordChange />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t\r\n\t\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default AcountManager;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card border=\"primary\" className=\"sign-in-sidebar\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices(data.notices.reverse());\r\n                    //if all is empty\r\n                    if(data.notices.length === 0) {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {notices.length && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های فعال\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import { Card, Col, Alert, ListGroup, Button, Image } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst { fullname, userID, records, avatar } = props.person ? props.person : me;\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\tconst thisIsMe = me && userID === me.userID;\r\n\tuseEffect(() => {\r\n\t\tsetPiece(!thisIsMe ? scoreboard.opp : scoreboard.me);\r\n\t}, [thisIsMe, scoreboard]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!thisIsMe) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [userID, thisIsMe]);\r\n\t\r\n\tif (!userID) return null;\r\n\t\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(userID));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">{fullname}</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"player-avatar\"\r\n\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باختها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{thisIsMe ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t}, []);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"sidebar manager called\");\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\tif (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\telse setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t\r\n\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t{rightSideBar && <Col md={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tmd={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col md={context.device !== Devices.Tablet ? 3 : 4}>\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (roomName, gameType) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", roomName, gameType)); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, CleanScoreboard } from \"./actions/game\";\r\nimport { LoadThisPlayer, ResetOpponent } from \"./actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./actions/game\";\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n\tconst mapStateToProps = (state) => ({\r\n\t\tme: state.me,\r\n\t\topponent: state.opponent,\r\n\t\troom: state.room,\r\n\t\tscoreboard: state.scoreboard,\r\n\t\ttools: state.tools,\r\n\t});\r\n\r\n\tconst mapDispatchToProps = (dispatch) => ({\r\n\t\tLoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n\t\tResetOpponent: () => dispatch(ResetOpponent()),\r\n\t\tEnterRoom: (room) => dispatch(EnterRoom(room)),\r\n\t\tExitRoom: () => dispatch(ExitRoom()),\r\n\t\t// SetGameID: (gameID) => dispatch(SetGameID(gameID)),\r\n\t\tUpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n\t\tCleanScoreboard: () => dispatch(CleanScoreboard()),\r\n\t});\r\n\treturn connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { GameSetting } from \"../../services/configs\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = GameSetting.T3D.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-start px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-half px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>;\r\n        }\r\n        setTimeStamp(<div className={color}>{icon}{timeRemaining}</div>);\r\n    }, [timeRemaining, aThird]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}>\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}>\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({ timeRemaining, dimension, players, table, onEachCellClick,normalCell }) => {\r\n    let dimens = [];\r\n    for (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n    //prop drilling in BriefScoreBoard\r\n    return (\r\n        <Card\r\n            bg=\"transparent\"\r\n            border=\"dark\"\r\n            className=\"w-100 mx-auto\">\r\n            <BriefScoreboard timeRemaining={timeRemaining} players={players} />\r\n            <Card.Body className=\"game-border-card\">\r\n                {table ? (\r\n                    dimens.map((floor) => (\r\n                        <Fragment>\r\n                            {dimens.map((row) => (\r\n                                <Row\r\n                                    style={{\r\n                                        direction: \"ltr\",\r\n                                        marginLeft: `${GameSetting.T3D.TableRowMargings[row]}px`,\r\n                                    }}>\r\n                                    {dimens.map((column) => (\r\n                                        <Button\r\n                                            key={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            variant={normalCell}\r\n                                            className=\"game-table-cells\"\r\n                                            style={\r\n                                                table[floor][row][column] !==\r\n                                                null\r\n                                                    ? {\r\n                                                          color: players[\r\n                                                              table[floor][row][\r\n                                                                  column\r\n                                                              ]\r\n                                                          ].color,\r\n                                                      }\r\n                                                    : null\r\n                                            }\r\n                                            id={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            onClick={(event) =>\r\n                                                onEachCellClick(event)\r\n                                            }>\r\n                                            {table[floor][row][column] !==\r\n                                                null &&\r\n                                                players[\r\n                                                    table[floor][row][column]\r\n                                                ].shape}\r\n                                        </Button>\r\n                                    ))}\r\n                                </Row>\r\n                            ))}\r\n                            <br />\r\n                        </Fragment>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"text-center\"> در حال اتصال... </p>\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n\tconnect,\r\n\tcreateSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport { Attention, Notify, Sorry } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\n\r\nclass GamePlay extends Component {\r\n\t//**** game resets on device change. fix it */\r\n\tstate = {\r\n\t\tnormalCell: \"outline-dark\",\r\n\t\tplayers: [\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"blue\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"primary\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"darkred\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"danger\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t], // maybe use player actual user name and change this item to an object of objects?\r\n\t\tturn: 0, // start turn is decided by throwning dices\r\n\t\tdimension: 3,\r\n\t\ttable: null,\r\n\t\tmyTurn: undefined, // change this\r\n\t\tgameID: null,\r\n\t\tsocketGamePlay: undefined,\r\n\t\tplayerOnline: true,\r\n\t\ttimeRemaining: 0, //create a config\r\n\t\ttimerID: null,\r\n\t\tconnectionCheckTimerID: null,\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.cellButtons = [];\r\n\t}\r\n\r\n\tupdateGameScorebaord = () => {\r\n\t\tconst { myTurn, players } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\r\n\t\tthis.props.UpdateScoreboard({\r\n\t\t\tme: {\r\n\t\t\t\tindex: myTurn,\r\n\t\t\t\tshape: players[myTurn].shape,\r\n\t\t\t\tscore: players[myTurn].score,\r\n\t\t\t},\r\n\t\t\topp: {\r\n\t\t\t\tindex: oppTurn,\r\n\t\t\t\tshape: players[oppTurn].shape,\r\n\t\t\t\tscore: players[oppTurn].score,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tenableTimerForMyMove = (timeout = GameSetting.T3D.TurnTimeOut) => {\r\n\t\tthis.setState({ timeRemaining: timeout });\r\n\t\t//is it needed to declare timerID as state?\r\n\t\tclearInterval(this.state.timerID);\r\n\t\tconst timerID = setInterval(() => {\r\n\t\t\tconst { timeRemaining, timerID } = this.state;\r\n\t\t\tif (timeRemaining <= 0) {\r\n\t\t\t\tclearInterval(timerID);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({ timeRemaining: this.state.timeRemaining - 1 });\r\n\t\t}, 1000);\r\n\t\tthis.setState({ timerID });\r\n\t};\r\n\r\n\tupdatePlayerStates = ({ turn, xScore, oScore }) => {\r\n\t\tconst players = [...this.state.players];\r\n\t\tplayers[0].score = xScore;\r\n\t\tplayers[1].score = oScore;\r\n\t\tthis.setState({\r\n\t\t\tplayers,\r\n\t\t\tturn,\r\n\t\t});\r\n\t\tthis.updateGameScorebaord();\r\n\t};\r\n\r\n\tdisableAllTimers = () => {\r\n\t\tconst { connectionCheckTimerID, timerID } = this.state;\r\n\t\tclearTimeout(connectionCheckTimerID);\r\n\t\tclearTimeout(timerID); //move time out timer\r\n\t};\r\n\r\n\tsocketOnMessage = (response) => {\r\n\t\tconst { data } = response;\r\n\t\tconst { cmd, msg } = JSON.parse(data);\r\n\t\tif (cmd === \"START\") {\r\n\t\t\tconst startTime = toTimeShort(msg);\r\n\t\t\tAttention(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n\t\t} else if (cmd === \"GAME\") {\r\n\t\t\tconst { IDs, dimension, myTurn } = msg;\r\n\t\t\tthis.setState({ dimension, myTurn });\r\n\t\t\tconst opponentID = IDs[Number(!myTurn)];\r\n\t\t\tconst { opponent, LoadThisPlayer } = this.props;\r\n\t\t\tif (!opponent && opponentID)\r\n\t\t\t\t//if opponent is not null -> means this was called before and there's no need to run again\r\n\t\t\t\tLoadThisPlayer(opponentID);\r\n\t\t} else if (cmd === \"LOAD\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tconst { table } = msg;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttable,\r\n\t\t\t});\r\n\t\t\tthis.updateGameScorebaord();\r\n\t\t} else if (cmd === \"TIMER\") {\r\n\t\t\t//you can calculate request respone time -> then minimize it from tiem sent by server -> to gain acurate time\r\n\t\t\t//but its real neccessary, Math.floor on the server side does this nearly\r\n\t\t\t//but for accurate approach remember: remove Math.floor from server side\r\n\t\t\tconsole.log(\"time updated: \", msg);\r\n\t\t\tthis.setState({ timeRemaining: msg });\r\n\t\t\tclearTimeout(this.state.timerID); //clear move time out timers, though their disabled before, this is for assurance\r\n\t\t\tthis.enableTimerForMyMove(msg);\r\n\t\t} else if (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n\t\telse if (cmd === \"UPDATE\") {\r\n\t\t\tconst { room } = this.props;\r\n\t\t\tconst { dimension } = this.state;\r\n\t\t\tconst cellID = Number(msg.nextMove);\r\n\r\n\t\t\t//*************** */\r\n\t\t\t//is this needed to check the move in client? considering that complete check has been made in client\r\n\t\t\t//and consder that: checking move in client may cause some bugs\r\n\t\t\t//for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n\t\t\t//turn is not updated and this player can not make new moves to recieve server's table!!!\r\n\t\t\tthis.verifyAndApplyTheMove(\r\n\t\t\t\tthis.getCellCoordinates(cellID, dimension),\r\n\t\t\t\tthis.cellButtons[cellID]\r\n\t\t\t);\r\n\t\t\t//wrap it up this part of UPDATE and LOAD in a method\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\r\n\t\t\tthis.cellButtons[cellID].focus();\r\n\t\t\tthis.updateGameScorebaord();\r\n\r\n\t\t\t// now inform the server that the move is recieved\r\n\t\t\t//force connect it?\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"move_recieved\", room.name, true)\r\n\t\t\t);\r\n\t\t\t// server time out is set and now setInterval for this client to show how much time left\r\n\t\t\tthis.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"MOVE_MISSED\") {\r\n\t\t\tconst { myTurn } = this.state;\r\n\t\t\t//msg --> forced set turn\r\n\t\t\tthis.setState({ turn: msg });\r\n\t\t\tif (msg === myTurn) this.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"NOT_AUTHORIZED\") {\r\n\t\t\tSorry(\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\");\r\n\t\t\t// signOut();\r\n\t\t} else if (cmd === \"END\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tthis.endThisGame();\r\n\t\t\tthis.disableAllTimers();\r\n\t\t} else if (cmd === \"CLOSE\") {\r\n\t\t\tAttention(\r\n\t\t\t\t\"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n\t\t\t);\r\n\t\t\tthis.closeThisGame();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"wrong socket request\");\r\n\t\t}\r\n\t};\r\n\r\n\tforceConnectWS = async (nextJob) => {\r\n\t\tconst { room } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tlet socket = await connect(room.name, room.type);\r\n\t\t\tsocket.onmessage = this.socketOnMessage;\r\n\t\t\tthis.setState({ socketGamePlay: socket });\r\n\t\t\tif (nextJob) nextJob();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// **********************\r\n\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\tsetTimeout(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconsole.log(\"rconnecting from GamePlay\");\r\n\t\t\t\t\tthis.forceConnectWS(nextJob);\r\n\t\t\t\t},\r\n\t\t\t\tnextJob ? 1000 : 3000\r\n\t\t\t);\r\n\t\t\t//if there is a next job --> then player is sending a move or something important and\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in serimport { LoadPlayer } from './../../globals/redux/actions/player';\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in server for sending moves\r\n\t\t}\r\n\t};\r\n\r\n\tenableConnectionCheckTimer = () => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (window.navigator.onLine) {\r\n\t\t\t\tif (!this.state.playerOnline) {\r\n\t\t\t\t\t//player JUST became online\r\n\t\t\t\t\tthis.setState({ playerOnline: true }); // toggle online status\r\n\t\t\t\t\tthis.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n\t\t\t\t}\r\n\t\t\t} else if (this.state.playerOnline) {\r\n\t\t\t\t//player JUST became offline\r\n\t\t\t\tthis.setState({ playerOnline: false });\r\n\t\t\t}\r\n\t\t}, 2500); //2.5 sec is it ok?\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n\t\tconst { room } = this.props;\r\n\t\tconst { myTurn } = this.state;\r\n\t\tthis.setState({ dimension: room.type });\r\n\r\n\t\tthis.forceConnectWS(() => {\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"load\", room.name, null)\r\n\t\t\t);\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"mytimer\", room.name, myTurn)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tconnectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.disableAllTimers();\r\n\t}\r\n\tgetCellCoordinates = (cellID, dimen) => {\r\n\t\tconst cellFloor = Math.floor(cellID / (dimen * dimen));\r\n\t\tconst onFloorId = cellID % (dimen * dimen);\r\n\t\tconst cellRow = Math.floor(onFloorId / dimen);\r\n\t\tconst cellColumn = onFloorId % dimen;\r\n\t\t// just test a random id to see how above formula works!\r\n\t\treturn { floor: cellFloor, row: cellRow, column: cellColumn };\r\n\t};\r\n\tonEachCellClick = (event) => {\r\n\t\tconst { dimension, turn, timerID } = this.state;\r\n\t\tconst {opponent, room } = this.props;\r\n\t\tif (opponent) {\r\n\t\t\ttry {\r\n\t\t\t\tconst selectedCellButton = event.target;\r\n\r\n\t\t\t\t//this is just for when the connection is not automatically came back, so the user via clicking cells can initiate connection\r\n\t\t\t\tif (this.state.turn !== this.state.myTurn) {\r\n\t\t\t\t\t//is this needed really?\r\n\t\t\t\t\tthis.forceConnectWS(null);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst cell = this.getCellCoordinates(\r\n\t\t\t\t\tselectedCellButton.id,\r\n\t\t\t\t\tdimension\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n\t\t\t\t\t//send move to WebSocket Server\r\n\r\n\t\t\t\t\tthis.setState({ turn: (turn + 1) % 2 });\r\n\t\t\t\t\tthis.forceConnectWS(() => {\r\n\t\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\t\tcreateSocketRequest(\r\n\t\t\t\t\t\t\t\t\"move\",\r\n\t\t\t\t\t\t\t\troom.name,\r\n\t\t\t\t\t\t\t\tselectedCellButton.id\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclearInterval(timerID);\r\n\t\t\t\t\tthis.setState({ timeRemaining: 0 });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t//load again here?\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tverifyAndApplyTheMove = (cell, cellButton) => {\r\n\t\tconst { players, turn, normalCell } = this.state;\r\n\t\tlet tempTable = [...this.state.table];\r\n\t\tif (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n\t\t\ttempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n\t\t\tthis.setState({ table: tempTable });\r\n\t\t\t// cellButton.value = players[turn].shape;\r\n\t\t\t// cellButton.style.color = players[turn].color;\r\n\t\t\tcellButton.className = `game-table-cells btn btn-${players[turn].selected}`;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcellButton.className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t}, 1000);\r\n\t\t\t// time to inspect the new cell:\r\n\t\t\tthis.inspectAreaAroundTheCell(cell.floor, cell.row, cell.column);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tinspectAreaAroundTheCell = (floor, row, column) => {\r\n\t\t// inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n\t\t// is it needed to write a inspectAll method ?\r\n\t\tconst { players, table, dimension } = this.state;\r\n\t\tconst playerInTheCell = table[floor][row][column];\r\n\t\tlet rowCount = 0,\r\n\t\t\tcolumnCount = 0,\r\n\t\t\tfloorMainDiagCount = 0,\r\n\t\t\tfloorSideDiagCount = 0;\r\n\t\tlet tableMainDiagCount = 0,\r\n\t\t\ttableSideDiagCount = 0,\r\n\t\t\ttableAltitudeCount = 0;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tif (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n\t\t\tif (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n\t\t\tif (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n\t\t\tif (row === column) {\r\n\t\t\t\tif (table[floor][i][i] === playerInTheCell)\r\n\t\t\t\t\tfloorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n\t\t\t\tif (row === floor && table[i][i][i] === playerInTheCell)\r\n\t\t\t\t\ttableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (row + column + 1 === dimension) {\r\n\t\t\t\tif (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n\t\t\t\t\tfloorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n\t\t\t\tif (\r\n\t\t\t\t\trow === floor &&\r\n\t\t\t\t\ttable[i][i][dimension - i - 1] === playerInTheCell\r\n\t\t\t\t)\r\n\t\t\t\t\ttableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// now inspect wether a line has been made and take action for it\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\trowCount,\r\n\t\t\tfloor * dimension * dimension + row * dimension,\r\n\t\t\t1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tcolumnCount,\r\n\t\t\tfloor * dimension * dimension + column,\r\n\t\t\tdimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorMainDiagCount,\r\n\t\t\tfloor * dimension * dimension,\r\n\t\t\tdimension + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorSideDiagCount,\r\n\t\t\tfloor * dimension * dimension + (dimension - 1),\r\n\t\t\tdimension - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableMainDiagCount,\r\n\t\t\t0,\r\n\t\t\tdimension * (dimension + 1) + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableSideDiagCount,\r\n\t\t\tdimension - 1,\r\n\t\t\tdimension * (dimension + 1) - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableAltitudeCount,\r\n\t\t\trow * dimension + column,\r\n\t\t\tdimension * dimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t};\r\n\r\n\t// method below: checks each possible line(according to the condition that user gives it),\r\n\t// if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n\tconnectTheScoreLines = (count, firstCell, step, player, dimension) => {\r\n\t\tconst { normalCell } = this.state;\r\n\t\tif (count === dimension) {\r\n\t\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t].className = `game-table-cells btn btn-${player.lineColor}`;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t\t].className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t\t}, 1000 + i * 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tcloseThisGame = () => {\r\n\t\tthis.state.socketGamePlay.close();\r\n\t\tthis.setState({ socketGamePlay: null });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.CleanScoreboard();\r\n\t\t\tthis.props.ResetOpponent();\r\n\t\t\tthis.props.ExitRoom();\r\n\t\t\tthis.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tendThisGame = () => {\r\n\t\tconst { players, myTurn } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\t\t//NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n\t\tif (players[myTurn].score > players[oppTurn].score)\r\n\t\t\tNotify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n\t\telse if (players[myTurn].score === players[oppTurn].score)\r\n\t\t\tNotify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n\t\telse Notify(\"شما باختید\");\r\n\t\t//reset everything:\r\n\t\tthis.closeThisGame();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<TableDesign\r\n\t\t\t\tdimension={this.state.dimension}\r\n\t\t\t\tplayers={this.state.players}\r\n\t\t\t\ttable={this.state.table}\r\n\t\t\t\ttimeRemaining={this.state.timeRemaining}\r\n\t\t\t\tonEachCellClick={this.onEachCellClick}\r\n\t\t\t\tnormalCell={this.state.normalCell}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(GamePlay));\r\n\r\n//another way to check online / offline status :\r\n// initiateGameTimer = () => {\r\n//     setInterval(() => {\r\n//         if (window.navigator.onLine) {\r\n//             if (this.connectionLost) {\r\n//                 console.log(\"connected\");\r\n//                 this.connectionLost = false;\r\n//                 this.forceConnectWS(null);\r\n//             }\r\n//         } else {\r\n//             console.log(\"dissconnected\");\r\n//             this.connectionLost = true;\r\n//         }\r\n//         /*this.isOnline(\r\n//             () => {\r\n//                 if (this.connectionLost) {\r\n//                     console.log(\"connected\");\r\n//                     this.connectionLost = false;\r\n//                     this.forceConnectWS(null);\r\n//                 }\r\n//             },\r\n//             () => {\r\n//                 console.log(\"dissconnected\");\r\n//                 this.connectionLost = true;\r\n//             }\r\n//         );*/\r\n//     }, 1000);\r\n// };\r\n\r\n// /*    isOnline = (success, failure) => {\r\n//     var xhr = XMLHttpRequest\r\n//         ? new XMLHttpRequest()\r\n//         : new window.ActiveXObject(\"Microsoft.XMLHttp\");\r\n//     xhr.onload = function () {\r\n//         if (success instanceof Function) {\r\n//             success();\r\n//         }\r\n//     };\r\n//     xhr.onerror = function () {\r\n//         if (failure instanceof Function) {\r\n//             failure();\r\n//         }\r\n//     };\r\n//      xhr.open(\"GET\", \"https://t3dweb.herokuapp.com/users\", true);//edit this ******************************\r\n//      xhr.send();\r\n// }; */\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from '../commons/LoadingBar';\r\nimport { Notify } from \"../tools/notification\";\r\nimport { TriggerRandomSearch } from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nconst SingleGame = ({ friendlyGame }) => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [gameType, setGameType] = useState(4);\r\n    const me = useSelector((state) => state.me);\r\n    const [searching, setSearching] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onStartGameClick = (event) => {\r\n        event.preventDefault();\r\n        if (!me) {\r\n            Notify(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n            return;\r\n        }\r\n        if (friendlyGame) dispatch(EnterRoom({ name: roomName, type: gameType }));\r\n        // random game:\r\n        else {\r\n            dispatch(EnterRoom({ name: null, type: gameType }));\r\n            dispatch(TriggerRandomSearch());\r\n            setSearching(true);\r\n        }\r\n    };\r\n\r\n    //on destroy\r\n    useEffect(() => {\r\n        return () => {\r\n            setSearching(false); //make sure preloader turns off\r\n         }\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <LoadingBar loading={searching} />\r\n            <hr />\r\n            <Form onSubmit={(event) => onStartGameClick(event)}>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"w-25\">ابعاد جدول</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2px\",\r\n                        }}>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"3\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 3}\r\n                                onChange={() => setGameType(3)}\r\n                            />\r\n                            <InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"4\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 4}\r\n                                onChange={() => setGameType(4)}\r\n                            />\r\n                            <InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"5\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 5}\r\n                                onChange={() => setGameType(5)}\r\n                            />\r\n                            <InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                {friendlyGame && (\r\n                    \r\n                    <Form.Group className=\"mt-3 form-inline\">\r\n                        \r\n                        <Form.Label className=\"w-25\">نام روم</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"w-75 text-left bg-transparent\"\r\n                            placeholder=\"Room Name\"\r\n                            value={roomName}\r\n                            required=\"required\"\r\n                            onChange={(event) =>\r\n                                setRoomName(event.target.value)\r\n                            }\r\n                        />\r\n                    </Form.Group>\r\n                )}\r\n                <hr />\r\n                <Button type=\"submit\" className=\"mt-4\" block variant=\"success\">\r\n                    <i\r\n                        className={`fa ${\r\n                            friendlyGame ? \"fa-handshake-o\" : \"fa-search\"\r\n                        } px-2`}\r\n                        aria-hidden=\"true\"></i>\r\n                    {friendlyGame ? \"ارسال درخواست\" : \"جستجو\"}\r\n                </Button>\r\n            </Form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SingleGame;\r\n","import { Alert, Badge, Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst CompetitionSummary = ({ title, summary }) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" variant=\"info\">\r\n                    <Alert.Heading className=\"text-center\">\r\n                        <Badge variant=\"success p-2\" >\r\n                            {title}\r\n                        </Badge>\r\n                    </Alert.Heading>\r\n\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" pill=\"true\" variant=\"info\">\r\n                    <p>تعداد شرکت کنندگان : 00000000</p>\r\n                    <p>نکات دیگر</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col>\r\n                    <Button block variant=\"outline-success\">شرکت در مسابقه</Button>\r\n                </Col>\r\n                <Col>\r\n                <Button block variant=\"outline-secondary\">بازیکنان حاضر</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionSummary;\r\n","import { Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport \"./competitions.css\";\r\nimport CompetitionSummary from \"./CompetitionSummary\";\r\n\r\nconst CompetitionsMain = () => {\r\n    return (\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <hr />\r\n\r\n            <Row>\r\n                <Col className=\"competition-menu-body\" sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"first\">\r\n                                جام حذفی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"second\">\r\n                                لیگ امتیازی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"third\">\r\n                                بازی شرطی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"forth\">\r\n                                جدول رندوم\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"fifth\">\r\n                                و غیره\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Col>\r\n                {/* <div style={{borderLeft: '1px solid gray', height:'500px'}}></div> */}\r\n                <Col sm={9}>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"first\">\r\n                            <CompetitionSummary\r\n                                title=\"جام حذفی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"second\">\r\n                            <CompetitionSummary\r\n                                title=\"لیگ امتیازی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"third\">\r\n                            <CompetitionSummary\r\n                                title=\"بازی شرطی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"forth\">\r\n                            <CompetitionSummary\r\n                                title=\"جدول رندوم\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"fifth\">\r\n                            <CompetitionSummary\r\n                                title=\"و غیره\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Col>\r\n            </Row>\r\n        </Tab.Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionsMain;\r\n","import GamePlay from \"./gameplay/GamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleGame from \"./SingleGame\";\r\nimport { Tab, Tabs, Card, Fade } from \"react-bootstrap\";\r\nimport { Fragment } from \"react\";\r\nimport CompetitionsMain from \"./competitions/CompetitionsMain\";\r\n\r\nconst GameDeck = () => {\r\n    const room = useSelector((state) => state.room);\r\n\r\n    return (\r\n        <Fragment>\r\n            {room.name ? (\r\n                <GamePlay />\r\n            ) : (\r\n                <Card\r\n                    border=\"secondary\"\r\n                    bg=\"transparent\"\r\n                    className=\"game-deck-card\">\r\n                    <Card.Body>\r\n                        <Tabs\r\n                            defaultActiveKey=\"randomGame\"\r\n                            transition={false}\r\n                            variant=\"pills\"\r\n                            // transition={Fade}\r\n                            className=\"mb-3\">\r\n                            \r\n                            <Tab eventKey=\"randomGame\" title=\"بازی تصادفی\">\r\n                                <SingleGame friendlyGame={false} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"competitions\" title=\"مسابقات\">\r\n                                <CompetitionsMain />\r\n                            </Tab>\r\n                            <Tab eventKey=\"friendlyGame\" title=\"بازی با دوستان\">\r\n                                <SingleGame friendlyGame={true} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport AllScores from \"./AllScores\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nclass ScoresTable extends Component {\r\n    state = {\r\n        liveScores: [],\r\n        finalScores: [],\r\n        showLiveOnes: false,\r\n        loading: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log('CHecking prop: ', this.props.Device);\r\n        // get all game results , live or final, handling promises\r\n        // client and server side for this Module seriously need to be edited\r\n        (async () => {\r\n            this.setState({ loading: true }); // use preloader here?\r\n            const { data, status } = await gameServices.getAllGames();\r\n            if (status === Configs.Status.Successful) return data.allGames;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                result = result.reverse();\r\n                this.setState({\r\n                    liveScores: result.filter((game) => game.isLive),\r\n                    finalScores: result.filter((game) => !game.isLive),\r\n                    loading: false,\r\n                });\r\n                //EDIT EDIT EDIT\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ finalScores: [], loading: false });\r\n            });\r\n    }\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({ showLiveOnes: true });\r\n    };\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({ showLiveOnes: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n       \r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n        // DESIGN : USE <Tabs> ???\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowLiveScores}>\r\n                            نتایج زنده\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                !showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowFinalScores}>\r\n                            نتایج نهایی\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* this single column is to make mode select buttons and Allscores same width */}\r\n                        <AllScores\r\n                            scores={showLiveOnes ? liveScores : finalScores}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScoresTable;\r\n","import { Button, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3 form-inline\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\tclassName=\"mb-3 form-inline\"\r\n\t\t\t\t\t\t\t\tcontrolId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tرمز عبور\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">نام</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tنام خانوادگی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tتایید رمز عبور\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","const SinglePlayerCard = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SinglePlayerCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SinglePlayerCard from \"./SinglePlayerCard\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n            <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                <thead className=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">نام بازیکن</th>\r\n                        <th scope=\"col\">امتیاز</th>\r\n                        <th scope=\"col\">تعداد برد</th>\r\n                        <th scope=\"col\">تعداد باخت</th>\r\n                        <th scope=\"col\">تعداد تساوی</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <SinglePlayerCard\r\n                            key={player.userID}\r\n                            rowNumber={\r\n                                players.findIndex(\r\n                                    (p) => p.userID === player.userID\r\n                                ) + 1\r\n                            }\r\n                            name={player.fullname}\r\n                            points={player.records.points}\r\n                            wins={player.records.wins}\r\n                            loses={player.records.loses}\r\n                            draws={player.records.draws}></SinglePlayerCard>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from '../../services/configs';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nclass Rankings extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === Configs.Status.Successful) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort( //sort priorities: 1. more points 2. more wins 3. less loses\r\n                        (p1, p2) =>\r\n                            p2.records.points - p1.records.points ||\r\n                            p2.records.wins - p1.records.wins ||\r\n                            p1.records.loses - p2.records.loses\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <Row className=\"mx-auto mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <AllPlayers players={players} />\r\n                </Row>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rankings;\r\n","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AcountManager from './../profile/edit/AcountManager';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTable from './../tables/scores/ScoresTable';\r\nimport SignUp from '../users/SignUp';\r\nimport Rankings from './../tables/rankings/Rankings';\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AcountManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<Rankings />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst { goTo } = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () =>\r\n\t\t\t\t\t\tgoTo(Routes.Client.ChatRoom)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID, gameInvitation.type));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tTriggerRandomSearch,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst enableGlobalTimer = useCallback(() => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (socketGlobal) socketGlobal.send(pack(\"online\"));\r\n\t\t}, 300000); // every 5 MINUTES request number of online members to update the site\r\n\t}, [pack, socketGlobal]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"global timer enabled\");\r\n\t\tconst timerID = enableGlobalTimer();\r\n\t\treturn () => {\r\n\t\t\tconsole.log(\"global timer disabled\");\r\n\t\t\tclearInterval(timerID);\r\n\t\t};\r\n\t}, [enableGlobalTimer]);\r\n\r\n\tconst { signOut, redirectToGamePlay } = context;\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(() => {\r\n\t\tconsole.log(\"global websocket connect called -> new socket returned\");\r\n\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t);\r\n\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tsignOut();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\tif (msg) {\r\n\t\t\t\t\t\t\t\tdispatch(EnterRoom(msg));\r\n\t\t\t\t\t\t\t\tsocket.send(pack(\"online\"));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tif(!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\tdispatch(TriggerRandomSearch());\r\n\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\tif (answer)\r\n\t\t\t\t\t\t\t\tOK(`${targetName} درخواست دوستی شما را پذیرفت`);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\tconst { askerID, askerName, gameType } = msg;\r\n\t\t\t\t\t\t\tdispatch(RecieveGameInvitation(askerID, askerName, gameType));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tredirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\tsocket.close();\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\tconsole.log(\"Reconnecting in  5 seconds\");\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t? await connect()\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t};\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(`global websocket errpr: ${err}`);\r\n\t\t\t}\r\n\t\t});\r\n\t}, [dispatch, signOut, redirectToGamePlay, pack, iamSignedIn, iamBusy]);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchTriggered,\r\n\t\tacceptedGame,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (room.type) {\r\n\t\t\t//is it necessary?\r\n\t\t\t//completely making sure we're on right stage\r\n\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\tsocketGlobal.send(pack(\"find\", room.type));\r\n\t\t} else if (!room.name) {\r\n\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchTriggered, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedGame) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedGame.inviterID,\r\n\t\t\t\t\t\tgameType: acceptedGame.type\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget.targetID,\r\n\t\t\t\t\t\tgameType: friendlyGameTarget.type,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedGame,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { chatsReducer } from './chats';\r\nimport { friendsReducer } from './freinds';\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    chats: chatsReducer,\r\n    friends: friendsReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return action.payload;\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return action.payload;\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchTriggered: false,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null,\r\n\t\tacceptedGame: null,\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const chatsReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"LOAD_CHATS\":\r\n\t\t\t// use a copy of?\r\n\t\t\treturn [...action.payload];\r\n\t\tcase \"RESET_CHATS\":\r\n\t\t\t//... what to do?\r\n\t\t\treturn [];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const friendsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_FRIENDS\":\r\n            return [...action.payload];\r\n        case \"RESET_FRIENDS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\n//dispatch\r\n// store.subscribe(() => console.log(store.getState()));","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices: { SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}"],"sourceRoot":""}