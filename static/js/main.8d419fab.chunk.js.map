{"version":3,"sources":["tables/Score.jsx","tables/AllScores.jsx","tables/ScoresTable.jsx","informations/GameRules.jsx","informations/ContactInfo.jsx","services/httpService.js","services/userServices.js","common/LoadingBar.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","common/MainContext.jsx","common/NavigationBar.jsx","sidebars/SignInSideBar.jsx","sidebars/NewsSideBar.jsx","common/SmartPhoneNavigationBar.jsx","sidebars/no-avatar.png","sidebars/PlayerInfoSideBar.jsx","common/MainLayout.jsx","tables/Player.jsx","tables/AllPlayers.jsx","tables/Ranking.jsx","users/ControlPanel.jsx","games/GamePlay.jsx","games/GameDeck.jsx","App.js","index.js"],"names":["Score","playerXName","playerOName","xScore","oScore","xBorderStyle","oBorderStyle","xBadgeColor","oBadgeColor","border","borderRadius","paddingLeft","paddingRight","className","style","id","AllScores","scores","map","score","ScoresTable","state","liveScores","finalScores","showLiveOnes","btnShowLiveScores","setState","btnShowFinalScores","this","onClick","Component","GameRules","ContactInfo","href","axios","defaults","headers","post","interceptors","response","use","error","STATUS","expectedErrors","status","toast","position","closeOnClick","Promise","reject","http","get","put","delete","userServices","signUp","user","config","serverRoot","usersRoute","signupRoute","JSON","stringify","signIn","signinRoute","getPlayer","userID","getAllPlayers","saveUser","token","sessionStorage","setItem","readUserID","getItem","LoadingBar","loading","useLayoutEffect","document","body","overflowY","height","time","customLoading","ModalSignIn","showModal","studentID","password","onCloseClick","onShowClick","onSignInSubmitted","event","a","preventDefault","SUCCESSFULL","AUTHENTICATION_INVALID","Number","data","props","history","replace","onForgotPasswordClick","Button","variant","Modal","show","onHide","Header","closeButton","Body","Form","onSubmit","Group","Label","Control","type","placeholder","value","onChange","e","target","controlId","withRouter","SignUp","confirmPassword","firstname","lastname","email","checkConfirmPassword","setCustomValidity","onSignUpSubmit","trim","length","USER_CREATED","ALREADY_EXISTS","newUser","fullname","success","warn","pattern","onInput","onInvalid","required","MainContext","createContext","player","NavigationBar","context","useContext","to","exact","activeClassName","float","SignInSideBar","NewsSideBar","SmartPhoneNavigationBar","PlayerInfoSideBar","src","noAvatar","alt","records","points","wins","loses","draws","contextType","pathname","location","deviceIsDesktop","useMediaQuery","query","deviceIsSmartPhone","deviceIsTablet","useState","setPlayer","then","result","catch","err","pageLeftSideBars","pageRightSideBar","Provider","children","Player","rowNumber","name","scope","AllPlayers","players","Card","width","findIndex","p","Ranking","tempPlayers","sort","p1","p2","ControlPanel","onSignOutClick","clear","GamePlay","rowMarginRatio","shape","color","lineColor","turn","tableDimension","table","yourTurn","undefined","gameStarted","createSocketRequest","request","roomName","playerID","msg","connectToWS","socketConnection","WebSocket","webSocketRoot","onopen","send","onerror","console","log","onmessage","parse","command","info","cellID","cell","getCellCoordinates","verifyAndApplyTheMove","cellButtons","onclose","updateMarginParameters","divTableBlock","offsetWidth","onTableBlockResize","dimen","onFloorId","floor","Math","row","column","onEachCellClick","selectedCellButton","cellButton","tempTable","innerHTML","inspectTableAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","i","wholePoint","connectTheScoreLines","count","firstCell","step","dimension","drawGameTable","dimens","push","marginLeft","getElementsByClassName","getElementById","addEventListener","GameDeck","startGame","onStartGameClick","App","path","component","render"],"mappings":"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","file":"static/js/main.8d419fab.chunk.js","sourcesContent":["import './scoresTable.css';\r\n\r\nconst Score = ({playerXName, playerOName, xScore, oScore}) => {\r\n    // format score text:\r\n    let xBorderStyle = null; \r\n    let oBorderStyle = null; // null means default text color\r\n    let xBadgeColor = null;\r\n    let oBadgeColor = null; // null means default badge color\r\n\r\n    if(xScore > oScore){ // x won\r\n        xBadgeColor = \"badge-success\";\r\n        xBorderStyle = {border:'5px solid green', borderRadius: '15px', paddingLeft: '1%',paddingRight: '1%'};\r\n        oBadgeColor = \"badge-danger\";\r\n        oBorderStyle = null; // null means default text color\r\n    }\r\n    else if(xScore === oScore){ //draw\r\n        xBadgeColor = \"badge-warning\";\r\n        oBadgeColor = \"badge-warning\";\r\n        xBorderStyle = null;\r\n        oBorderStyle = null; // null means default text color\r\n    }\r\n    else{ // o won\r\n        oBadgeColor = \"badge-success\";\r\n        oBorderStyle = {border:'5px solid green', borderRadius: '15px', paddingLeft: '1%',paddingRight: '1%'};\r\n        xBadgeColor = \"badge-danger\";\r\n        xBorderStyle = null; // null means default text color\r\n    }\r\n\r\n    // make this car 'bg-transparent' too?\r\n    return (  \r\n        <div className=\"card border-info mb-3 scoreCard\" >\r\n            <div className=\"card-header text-center border-info\">نوع بازی</div>\r\n            <div className=\"card-body\">\r\n                <p \r\n                    className=\"card-title text-center mx-auto\">\r\n                    <span style={xBorderStyle} >{playerXName}</span>\r\n                    <span className={`badge badge-pill ${xBadgeColor} scoreBadge ml-3 mr-3`}>{xScore < 10 ? `0${xScore}` : `${xScore}`}</span>\r\n                    \r\n                    <span className={`badge badge-pill ${oBadgeColor} scoreBadge ml-3 mr-3`}>{oScore < 10 ? `0${oScore}` : `${oScore}`}</span> \r\n                    <span style={oBorderStyle} >{playerOName}</span>\r\n                </p>\r\n                \r\n            </div>\r\n            <button id=\"btnReplayGame\" className=\"btn btn-outline-info btn-lg btn-block\">بازپخش بازی</button>\r\n            {/*1st method: pass key to the score.jsx and find the specific game to replay\r\n            2nd method: pass replay function from AllScores.jsx to Scores.jsx ? */}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Score;","import Score from \"./Score\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <div>\r\n            { scores.map(score => (\r\n                <Score key={score.id}\r\n                    playerXName={score.playerXName}\r\n                    playerOName={score.playerOName}\r\n                    xScore={score.xScore}\r\n                    oScore={score.oScore}\r\n                ></Score>\r\n            )) }\r\n        </div>\r\n     );\r\n};\r\n \r\nexport default AllScores;","import './scoresTable.css';\r\nimport { Component } from 'react';\r\nimport AllScores from './AllScores';\r\n\r\n\r\nclass ScoresTable extends Component {\r\n    state = { \r\n        liveScores: [ {id:0, playerXName: 'سهند علی زاده', playerOName: 'علی رضا قربانی', xScore: 10, oScore: 6},\r\n                         {id:1 ,playerXName: 'paya', playerOName: 'whatever', xScore: 15, oScore: 1},\r\n                         {id:2 ,playerXName: 'مجید نویدزاده', playerOName: 'علی یاری', xScore: 8, oScore: 8},\r\n                         {id:3 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14},\r\n                         {id:4 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14},\r\n                         {id:5 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14} ],\r\n        finalScores: [ {id:0, playerXName: 'نوید بختیاری', playerOName: 'محسن رضایی', xScore: 0, oScore: 6},\r\n                        {id:1 ,playerXName: 'پرهام کبیری', playerOName: 'سمانه سماوی', xScore: 2, oScore: 4},\r\n                        {id:2 ,playerXName: 'مجید داورخواه', playerOName: 'زهرا فنایی', xScore: 4, oScore: 12},\r\n                        {id:3 ,playerXName: 'امیر صفوی نسب', playerOName: 'paya', xScore: 3, oScore: 3} ],\r\n        showLiveOnes: true\r\n     };\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({showLiveOnes: true});\r\n\r\n    }\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({showLiveOnes: false});\r\n    }\r\n\r\n    render() {\r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let {liveScores, finalScores, showLiveOnes} = this.state;\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-6'>\r\n                       <button\r\n                        className={`scoresTypeSelectButton btn ${showLiveOnes ? `btn-outline-success` : `btn-outline-primary`}`}\r\n                        onClick={this.btnShowLiveScores}  >نتایج زنده</button>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <button \r\n                            className={`scoresTypeSelectButton btn ${showLiveOnes ? `btn-outline-primary` : `btn-outline-success`}`}\r\n                            onClick={this.btnShowFinalScores}  >نتایج نهایی</button> \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <AllScores scores={showLiveOnes? liveScores : finalScores} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ScoresTable;","import './info.css'\r\n\r\nconst GameRules = () => {\r\n    return ( \r\n        <div className=\"card border-warning mb-3 singleCard\" >\r\n            <div className=\"card-header text-center border-warning\">قوانین بازی</div>\r\n            <div className=\"card-body text-right\">\r\n                <p>سطر اول</p>\r\n                <p>سطر دوم</p>\r\n                <p>سطر سوم</p>\r\n                <p>سطر چهارم</p>\r\n                <p>سطر پنجم</p>\r\n                <p>سطر ششم</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameRules;","import './info.css'\r\n\r\nconst ContactInfo = () => {\r\n    return ( \r\n        <div className=\"card border-dark mb-3 singleCard\" >\r\n            <div className=\"card-header text-center border-dark\">اطلاعات تماس</div>\r\n            <div className=\"card-body text-center\">\r\n                <p>دانشگاه علم و صنعت ایران</p>\r\n                <p>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></p>\r\n                <p>Phone Number: 0000000000000</p>\r\n                <p>اطلاعات تماس استاد</p>\r\n                <p>instagram: ......</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ContactInfo;","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n    const STATUS = { AUTHENTICATION_INVALID: 401, INPUT_INVALID: 422 };\r\n    const expectedErrors =\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status < 500;\r\n\r\n    if (error.response.status === STATUS.AUTHENTICATION_INVALID) {\r\n        toast.error(\"شماره دانشجویی یا رمز عبور نادرست است\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    } else if (error.response.status === STATUS.INPUT_INVALID) {\r\n        toast.error(\"فرمت ورودی نادرست است\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    } else if (!expectedErrors) {\r\n        // console.log(error);\r\n        toast.error(\"مشکلی از سمت سرور رخ داده است.\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n};\r\n\r\nexport default http;","import http from \"./httpService\";\r\nimport config from \"./config.json\";\r\n\r\nconst userServices = {\r\n    signUp: (user) => {\r\n        return http.post(\r\n            `${config.serverRoot}/${config.usersRoute}/${config.signupRoute}`,\r\n            JSON.stringify(user)\r\n        );\r\n    },\r\n    signIn: (user) => {\r\n        return http.post(\r\n            `${config.serverRoot}/${config.usersRoute}/${config.signinRoute}`,\r\n            JSON.stringify(user)\r\n        );\r\n    },\r\n    getPlayer: (userID) => {\r\n        return http.get(`${config.serverRoot}/${config.usersRoute}/${userID}`);\r\n    },\r\n    getAllPlayers: () => {\r\n        return http.get(`${config.serverRoot}/${config.usersRoute}`);\r\n    },\r\n    saveUser: (id, token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(\"uid\", id); // localStorage or sessionStorage?\r\n        sessionStorage.setItem(\"token\", token);\r\n    },\r\n    readUserID: () => {\r\n        // consider local storage\r\n        return sessionStorage.getItem(\"uid\");\r\n    }\r\n};\r\n\r\nexport default userServices;","import { useLayoutEffect } from \"react\";\r\nimport { Planets } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading]);\r\n\r\n    return <>{loading ? <Planets time={0} customLoading={loading} /> : null}</>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { Component } from \"react\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\nclass ModalSignIn extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    state = {\r\n        showModal: false,\r\n        studentID: \"\",\r\n        password: \"\",\r\n        loading: false,\r\n    };\r\n\r\n    onCloseClick = () => this.setState({ showModal: false });\r\n    onShowClick = () => this.setState({ showModal: true });\r\n\r\n    onSignInSubmitted = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const STATUS = { SUCCESSFULL: 200, AUTHENTICATION_INVALID: 401 };\r\n        const { studentID, password } = this.state;\r\n        const user = { studentID, password: Number(password) };\r\n        try {\r\n            const { status, data } = await userServices.signIn(user);\r\n            if (status === STATUS.SUCCESSFULL) {\r\n                userServices.saveUser(data.userID, data.token);\r\n                this.props.history.replace(\"/\");\r\n            }\r\n        } catch (ex) {\r\n            // check nonserver errors\r\n            this.setState({ password: \"\" });\r\n            //toast.error('.ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.', {position: 'top-right', closeOnClick: true});\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    onForgotPasswordClick = () => {};\r\n\r\n    render() {\r\n        const { showModal, studentID, password, loading } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <LoadingBar loading={loading} />\r\n                <Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n                    ورود کاربران\r\n                </Button>\r\n\r\n                <Modal show={showModal} onHide={this.onCloseClick}>\r\n                    <Modal.Header closeButton></Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form\r\n                            className=\"m-4 text-right\"\r\n                            onSubmit={(event) => this.onSignInSubmitted(event)}\r\n                        >\r\n                            <Form.Group className=\"mb-3 form-inline\">\r\n                                <Form.Label className=\"w-25\">\r\n                                    شماره دانشجویی\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"w-75 text-left\"\r\n                                    placeholder=\"Student ID\"\r\n                                    value={studentID}\r\n                                    onChange={(e) =>\r\n                                        this.setState({\r\n                                            studentID: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                className=\"mb-3 form-inline\"\r\n                                controlId=\"formBasicPassword\"\r\n                            >\r\n                                <Form.Label className=\"w-25\">\r\n                                    رمز عبور\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    className=\"w-75 text-left\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        this.setState({\r\n                                            password: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                            <>\r\n                                <Button\r\n                                    className=\"w-50\"\r\n                                    type=\"submit\"\r\n                                    variant=\"outline-success\"\r\n                                >\r\n                                    ورود\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"w-50\"\r\n                                    variant=\"outline-info\"\r\n                                    onClick={this.onForgotPasswordClick}\r\n                                >\r\n                                    فراموشی رمز\r\n                                </Button>\r\n                            </>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass SignUp extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    // 2. first and last name must be persian text so make the direction correct and force persian chars\r\n    state = {\r\n        studentID: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        loading: false,\r\n    };\r\n\r\n    checkConfirmPassword = (event) => {\r\n        this.setState({ confirmPassword: event.target.value });\r\n        if (this.state.password !== event.target.value) {\r\n            event.target.setCustomValidity(\r\n                \"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n            );\r\n            //console.log(password, confirmPassword);\r\n        } else event.target.setCustomValidity(\"\");\r\n    };\r\n    onSignUpSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            studentID,\r\n            password,\r\n            confirmPassword,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n        } = this.state;\r\n        if (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n            toast.error(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true,\r\n            });\r\n            this.setState({\r\n                firstname: firstname.trim(),\r\n                lastname: lastname.trim(),\r\n            });\r\n            return;\r\n        }\r\n        const STATUS = { USER_CREATED: 201, ALREADY_EXISTS: 403 };\r\n        if (password === confirmPassword) {\r\n            try {\r\n                this.setState({ loading: true });\r\n                const newUser = {\r\n                    studentID: Number(studentID),\r\n                    password,\r\n                    email,\r\n                    fullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n                };\r\n\r\n                const { status, data } = await userServices.signUp(newUser);\r\n\r\n                if (status === STATUS.USER_CREATED) {\r\n                    //console.log(data);\r\n                    toast.success(`ثبت نام با موفقیت انجام شد`, {\r\n                        position: \"top-right\",\r\n                        closeOnClick: true,\r\n                    });\r\n                    userServices.saveUser(data.userID, data.token);\r\n                    this.props.history.replace(\"/\");\r\n                    // this.props.history.replace('/signIn')\r\n                    // ******* change server to return user token and auto sign in\r\n                }\r\n            } catch (ex) {\r\n                // console.log(ex);\r\n                this.setState({ loading: false });\r\n                if (ex.response.status === STATUS.ALREADY_EXISTS) {\r\n                    toast.error(\r\n                        \"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                    toast.warn(\r\n                        \"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                } else {\r\n                    toast.error(\r\n                        \"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            toast.error(\"رمز عبورها مطابقت ندارند\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true,\r\n            });\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            studentID,\r\n            password,\r\n            confirmPassword,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            loading,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"card border-success mb-3 signUpCard\">\r\n                <LoadingBar loading={loading} />\r\n                <div className=\"card-header bg-transparent text-center border-success\">\r\n                    فرم ثبت نام\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">نام</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                pattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"First Name\"\r\n                                value={firstname}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        firstname: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">نام خانوادگی</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                pattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                    )\r\n                                }\r\n                                placeholder=\"Last Name\"\r\n                                value={lastname}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        lastname: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">شماره دانشجویی</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                pattern=\"[0-9]{8}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Student ID\"\r\n                                value={studentID}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        studentID: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">ایمیل</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                pattern=\".{6,}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"E-mail\"\r\n                                value={email}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({ email: e.target.value })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">رمز عبور</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                pattern=\".{6,15}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        password: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">تایید رمز عبور</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={confirmPassword}\r\n                                required=\"required\"\r\n                                onChange={(event) =>\r\n                                    this.checkConfirmPassword(event)\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success btn-block mt-4\"\r\n                        >\r\n                            ثبت نام\r\n                        </button>\r\n                    </form>\r\n                    <p className=\"forgot-password text-right mt-5\">\r\n                        اگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !{\" \"}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import { createContext } from \"react\";\r\n// 1. write <MainContext.Provider> for MainContext in Database reader\r\n// 2. use consumer for state, in ScoresTable.jsx for gathering live and final match results\r\nconst MainContext = createContext({\r\n    player: null\r\n});\r\n\r\nexport default MainContext;","import { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MainContext from \"./MainContext\";\r\n\r\nconst NavigationBar = () => {\r\n  const context = useContext(MainContext);\r\n  return (\r\n    // 2. link items theme: make theme better\r\n\r\n    <nav className=\"navbar navbar-expand-lg nav-pills navbar-light bg-light text-right\">\r\n      <div className=\"container text-right\">\r\n        {/* <NavLink className=\"navbar-brand\" to=\"#\">نام بازیکن</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"expand\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button> */}\r\n        <div className=\"navbar-expand\" id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/\"\r\n                exact\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                صفحه اصلی\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/gameDeck\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                بازی ها\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/ranking\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                رنکینگ\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/gameRules\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                قوانین\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/contactInfo\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                تماس با ما\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          {/* how to float search bar to right? */}\r\n        </div>\r\n      </div>\r\n      {context.player ? (\r\n        <NavLink\r\n          style={{ float: \"left\" }}\r\n          className=\"navItems nav-link btn btn-outline-success btn-sm\"\r\n          to=\"/controlPanel\"\r\n        >\r\n          کنترل پنل\r\n        </NavLink>\r\n      ) : (\r\n        <NavLink\r\n          style={{ float: \"left\" }}\r\n          className=\"navItems nav-link btn btn-outline-success btn-sm\"\r\n          to=\"/signUp\"\r\n        >\r\n          ثبت نام\r\n        </NavLink>\r\n      )}\r\n\r\n      {/* <form class=\"searchForm form-inline\">\r\n                    <input class=\" form-control mr-sm-2 bg-dark\" type=\"search\" placeholder=\"دنبال چی می گردی؟\" aria-label=\"Search\" />\r\n                    <button class=\" btn btn-outline-warning fa fa-search\" type=\"submit\"></button>\r\n            </form> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass SignInSideBar extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    state = {\r\n        studentID: \"\",\r\n        password: \"\",\r\n        loading: false,\r\n    };\r\n    \r\n\r\n    onSignInSubmitted = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const STATUS = { SUCCESSFULL: 200 };\r\n        const { studentID, password } = this.state;\r\n        const user = { studentID, password: Number(password) };\r\n        try {\r\n            const { status, data } = await userServices.signIn(user);\r\n            if (status === STATUS.SUCCESSFULL) {\r\n                userServices.saveUser(data.userID, data.token);\r\n                this.props.history.replace(\"/\");\r\n            }\r\n        } catch (ex) {\r\n            // check nonserver errors\r\n            // console.log(ex);\r\n            this.setState({ password: \"\" });\r\n            //toast.error('.ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.', {position: 'top-left', closeOnClick: true});\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n        const { studentID, password, loading } = this.state;\r\n        return (\r\n            <div className=\"card signInSidebar border-primary mb-3\">\r\n                <div className=\"card-header text-center text-primary border-primary\">\r\n                    ورود کاربران\r\n                </div>\r\n                <LoadingBar loading={loading} />\r\n                <div className=\"card-body text-primary\">\r\n                    <form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"signInSidebarTextBox form-control text-primary\"\r\n                            placeholder=\"Student ID\"\r\n                            value={studentID}\r\n                            onChange={(e) =>\r\n                                this.setState({ studentID: e.target.value })\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"signInSidebarTextBox form-control text-primary\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) =>\r\n                                this.setState({ password: e.target.value })\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div className=\"card-footer bg-transparent border-primary\">\r\n                            <button\r\n                                id=\"btnSideBarSignIn\"\r\n                                type=\"submit\"\r\n                                className=\"btn btn-outline-success btn-lg\"\r\n                            >\r\n                                ورود\r\n                            </button>\r\n                            <button\r\n                                id=\"btnSideBarPasswordRecovery\"\r\n                                className=\"btn btn-outline-info btn-lg\"\r\n                            >\r\n                                بازیابی پسورد\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","\r\n\r\nconst NewsSideBar = () => {\r\n    return ( \r\n        <div className=\"card newsSidebar border-success  mb-3\">\r\n            <div className=\"card-header text-center text-success border-success\">اطلاعیه</div>\r\n            <div className=\"card-body text-right\">\r\n                <p>متن خبر 1</p>\r\n                <p>متن خبر 2</p>\r\n                <p>متن خبر 3</p>\r\n                <p>متن خبر 4</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NewsSideBar;","import { NavLink } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport MainContext from \"./MainContext\";\r\n\r\nconst SmartPhoneNavigationBar = () => {\r\n  const context = useContext(MainContext);\r\n\r\n  return (\r\n    // 2. link items theme: make theme better\r\n\r\n    <nav className=\"navbar navbar-expand-lg nav-pills navbar-light bg-light text-right\">\r\n      <div className=\"container text-right\">\r\n        <div className=\"navbar-expand w-100\" id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <div className=\"row\">\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/\"\r\n                  exact\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  صفحه اصلی\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/gameDeck\"\r\n                  \r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  بازی ها\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/ranking\"\r\n                  \r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  رنکینگ\r\n                </NavLink>\r\n              </li>\r\n            </div>\r\n          </ul>\r\n          <hr />\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <div className=\"row\">\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/gameRules\"\r\n                  \r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  قوانین\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/contactInfo\"\r\n                  \r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  تماس با ما\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                {context.player ? (\r\n                  <NavLink\r\n                    className=\"navItems nav-link btn btn-outline-success btn-block mt-1 mr-lg-5\"\r\n                    to=\"/controlPanel\"\r\n                    \r\n                  >\r\n                    کنترل پنل\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink\r\n                    className=\"navItems nav-link btn btn-outline-success btn-block mt-1 mr-lg-5\"\r\n                    to=\"/signUp\"\r\n                    \r\n                  >\r\n                    ثبت نام\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SmartPhoneNavigationBar;\r\n","export default __webpack_public_path__ + \"static/media/no-avatar.5e7c913e.png\";","import { Component } from \"react\";\r\nimport MainContext from \"../common/MainContext\";\r\nimport noAvatar from \"./no-avatar.png\"; // definitely must be changed bro!\r\n\r\nclass PlayerInfoSideBar extends Component {\r\n  static contextType = MainContext;\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    const { player } = this.context;\r\n    return (\r\n      <div className=\"card playerInfoSideBar border-info mb-3\">\r\n        <div className=\"card-header text-center text-info border-info\">\r\n          {player.fullname}\r\n        </div>\r\n        <img\r\n          className=\"card-img-top playerAvatar\"\r\n          src={noAvatar}\r\n          alt=\"No Images Found\"\r\n        />\r\n        <hr />\r\n        <div className=\"card-body\">\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">امتیاز بازیکن</p>\r\n                <p className=\"col-6 text-left\">{player.records.points}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد برد</p>\r\n                <p className=\"col-6 text-left\">{player.records.wins}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد باخت</p>\r\n                <p className=\"col-6 text-left\">{player.records.loses}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد تساوی</p>\r\n                <p className=\"col-6 text-left\">{player.records.draws}</p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerInfoSideBar;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport SignInSideBar from \"./../sidebars/SignInSideBar\";\r\nimport NewsSideBar from \"./../sidebars/NewsSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport SmartPhoneNavigationBar from \"./SmartPhoneNavigationBar\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport userServices from \"../services/userServices\";\r\nimport MainContext from \"./MainContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainLayout = (props) => {\r\n    const { pathname } = props.location;\r\n    const deviceIsDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n    const deviceIsSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n    const deviceIsTablet =\r\n        !deviceIsDesktop && !deviceIsSmartPhone ? true : false;\r\n    const [player, setPlayer] = useState(\"\");\r\n    // this method is for temporary use and for finding items that cause horizontal overflow causing horizontal scrollbar\r\n    const findHorizontalOverflow = () => {\r\n        let docWidth = document.documentElement.offsetWidth;\r\n        [].forEach.call(document.querySelectorAll(\"*\"), function (el) {\r\n            if (el.offsetWidth > docWidth) {\r\n                console.log(\"here is the sabotage: \", el);\r\n            }\r\n        });\r\n    };\r\n\r\n    // use an anonymous function to check wether a reliable sign in has been made or not\r\n    // using await causes all 'return' to return a promise. so it must be handles by .then .catch\r\n    (async () => {\r\n        const STATUS = { SUCCESSFULL: 200 };\r\n        const userID = userServices.readUserID();\r\n        if (userID) {\r\n            const { data, status } = await userServices.getPlayer(userID);\r\n            if (status === STATUS.SUCCESSFULL) return data.player;\r\n        }\r\n        return null;\r\n    })()\r\n        .then((result) => {\r\n            setPlayer(result);\r\n        })\r\n        .catch((err) => {\r\n            // handle error\r\n            setPlayer(null);\r\n        });\r\n\r\n    let pageLeftSideBars = <NewsSideBar />;\r\n    let pageRightSideBar = player ? <PlayerInfoSideBar /> : <SignInSideBar />; // in case login hassnt been made\r\n\r\n    if (pathname === \"t3d/signUp\") {\r\n        // || pathname === '/competitions'){ // this condition MUST change later\r\n        pageLeftSideBars = null; //change later\r\n        pageRightSideBar = null; // change then\r\n    }\r\n\r\n    if (pathname === \"t3d/gameDeck\") {\r\n        // left sidebar must be opponents playerInfo\r\n\r\n        if (deviceIsSmartPhone) { //this is temprory\r\n          // find a way for showing result in smartphone, without causing vertical scroll\r\n            pageLeftSideBars = null; //change later\r\n            pageRightSideBar = null; // change then\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MainContext.Provider value={{ player }}>\r\n            <ToastContainer />\r\n            {deviceIsDesktop || deviceIsTablet ? (\r\n                <NavigationBar />\r\n            ) : (\r\n                <SmartPhoneNavigationBar />\r\n            )}\r\n            {deviceIsDesktop && (\r\n                <div className=\"row mx-auto w-100\">\r\n                    <div className=\"col-3 p-3\">{pageRightSideBar}</div>\r\n                    <div\r\n                        className={\r\n                            pageLeftSideBars !== null ? \"col-6\" : \"col-12\"\r\n                        }\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                    <div className=\"col-3\">{pageLeftSideBars}</div>\r\n                </div>\r\n            )}\r\n            {deviceIsTablet && (\r\n                <div className=\"row mx-auto w-100\">\r\n                    <div\r\n                        className={\r\n                            pageLeftSideBars !== null ? \"col-8\" : \"col-12\"\r\n                        }\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                    <div className=\"col-4\">{pageLeftSideBars}</div>\r\n                </div>\r\n            )}\r\n            {deviceIsSmartPhone && (\r\n                <div className=\"container mx-auto w-100\">\r\n                    {player ? (\r\n                        <div className=\"row w-100 mx-auto\">\r\n                            {pageRightSideBar}\r\n                        </div>\r\n                    ) : null}\r\n                    <div className=\"row w-100 mx-auto\">{pageLeftSideBars}</div>\r\n                    <div className=\"row w-100 mx-auto\">{props.children}</div>\r\n                </div>\r\n            )}\r\n            {/* {findHorizontalOverflow()} */}\r\n        </MainContext.Provider>\r\n    );\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","const Player = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","import { Card } from \"react-bootstrap\";\r\nimport Player from \"./Player\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        \r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"15px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n                <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                    <thead className=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">نام بازیکن</th>\r\n                            <th scope=\"col\">امتیاز</th>\r\n                            <th scope=\"col\">تعداد برد</th>\r\n                            <th scope=\"col\">تعداد باخت</th>\r\n                            <th scope=\"col\">تعداد تساوی</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {players.map((player) => (\r\n                            <Player\r\n                                key={player.userID}\r\n                                rowNumber={players.findIndex(p => p.userID === player.userID) + 1}\r\n                                name={player.fullname}\r\n                                points={player.records.points}\r\n                                wins={player.records.wins}\r\n                                loses={player.records.loses}\r\n                                draws={player.records.draws}\r\n                            ></Player>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"./../services/userServices\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass Ranking extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const STATUS = { SUCCESSFULL: 200 };\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === STATUS.SUCCESSFULL) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort(\r\n                        (p1, p2) => p2.records.points - p1.records.points\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <div className=\"row mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <div className=\"col-12\">\r\n                    <AllPlayers players={players} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ranking;\r\n","import { Component } from \"react\";\r\n\r\nclass ControlPanel extends Component {\r\n    onSignOutClick = () => {\r\n        sessionStorage.clear();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card border-success mb-3 signUpCard\">\r\n                <div className=\"card-header bg-transparent text-center border-success\">\r\n                    کنترل پنل\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger btn-block mt-4\"\r\n                        onClick={this.onSignOutClick} //temprory\r\n                    >\r\n                        خروج از حساب کاربری\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { Component } from \"react\";\r\nimport \"./games.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport MainContext from \"../common/MainContext\";\r\nimport config from \"../services/config.json\";\r\n\r\nclass GamePlay extends Component {\r\n    static contextType = MainContext;\r\n    // **** noticed: gameplay needs a seperate layout\r\n    //**** game resets on device change. fix it */\r\n    // note: sidebars must change to ==> right-side: my-profile / left-side: opponent profile\r\n    state = {\r\n        rowMarginRatio: 0,\r\n        players: [\r\n            {\r\n                shape: \"X\",\r\n                color: \"cyan\",\r\n                lineColor: \"btn btn-primary\",\r\n                score: 0,\r\n            },\r\n            {\r\n                shape: \"O\",\r\n                color: \"darkred\",\r\n                lineColor: \"btn btn-danger\",\r\n                score: 0,\r\n            },\r\n        ], // maybe use player actual user name and change this item to an object of objects?\r\n        turn: 0, // start turn is decided by throwning dices\r\n        tableDimension: 4,\r\n        table: [],\r\n        yourTurn: undefined, // change this\r\n        gameStarted: false,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.cellButtons = [];\r\n        this.socketConnection = this.connectToWS();\r\n    }\r\n\r\n    createSocketRequest = (request, roomName, playerID, msg) =>\r\n        JSON.stringify({\r\n            request,\r\n            roomName,\r\n            playerID,\r\n            msg,\r\n        });\r\n\r\n    connectToWS = () => {\r\n        let socketConnection = new WebSocket(config.webSocketRoot);\r\n        socketConnection.onopen = () => {\r\n            const { roomName } = this.props;\r\n            const { player } = this.context;\r\n            // socketConnection.send(\"Client connected to WebSocket\");\r\n            socketConnection.send(\r\n                this.createSocketRequest(\r\n                    \"join\",\r\n                    roomName,\r\n                    player.userID,\r\n                    \"test\"\r\n                )\r\n            );\r\n        };\r\n\r\n        socketConnection.onerror = (error) => {\r\n            console.log(`WebSocket error: ${error}`);\r\n        };\r\n\r\n        socketConnection.onmessage = (response) => {\r\n            const { data } = response;\r\n            const { command, msg } = JSON.parse(data);\r\n            if (command === \"SET_TURN\") {\r\n                // console.log(turn);\r\n                this.setState({ yourTurn: Number(msg) });\r\n                // console.log(this.state.yourTurn);\r\n            } else if (command === \"START\") {\r\n                this.setState({ gameStarted: true });\r\n                toast.info(\"هر دو بازیکن متصل شدند\");\r\n                if (this.state.yourTurn === this.state.turn)\r\n                    toast.warn(\"شروع حرکت با شما\");\r\n                // edit this part, code is temp\r\n            } else if (command === \"MOVE\") {\r\n                const { tableDimension } = this.state;\r\n                //******** */ catch exceptions\r\n                const cellID = Number(msg);\r\n                const cell = this.getCellCoordinates(cellID, tableDimension);\r\n                this.verifyAndApplyTheMove(cell, this.cellButtons[cellID]);\r\n            }\r\n        };\r\n\r\n        socketConnection.onclose = () => {\r\n            // this peace of code is for when a player leaves or game ends ( probably neddnt be here )\r\n            // socketConnection.send(JSON.stringify(\r\n            //     {\r\n            //         request: \"leave\",\r\n            //         roomName: \"currecttest\",\r\n            //         playerID: \"whatever\",\r\n            //         msg: \"test\"\r\n            //     }\r\n            // ));\r\n\r\n            socketConnection = null;\r\n        };\r\n        return socketConnection;\r\n    };\r\n\r\n    updateMarginParameters = (divTableBlock) => {\r\n        //const {deviceIsDesktop, deviceIsTablet, deviceIsSmartPhone} = this.context;\r\n        const rowMarginDevideOn = 12.4; // deviceIsDesktop ? 22 : (deviceIsTablet ? 14 : 6);\r\n        this.setState({\r\n            rowMarginRatio: divTableBlock.offsetWidth / rowMarginDevideOn,\r\n        });\r\n        //*** for now this method remain still but if the main container is in fixed pixels width, the hell is this needed? */\r\n    };\r\n\r\n    onTableBlockResize = (event) => {\r\n        this.updateMarginParameters(event.target);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.cellButtons = document.getElementsByClassName(\"gameTableCells\"); // pay attension to searched className! may cause an error\r\n        // init this.state.table array\r\n        const { tableDimension } = this.state;\r\n        let dimens = [];\r\n        for (let i = 0; i < tableDimension; i++) dimens.push(i);\r\n        let tempTable = dimens.map((floor) =>\r\n            dimens.map((row) => dimens.map((column) => null))\r\n        );\r\n        this.setState({ table: tempTable });\r\n\r\n        let divTableBlock = document.getElementById(\"divTableBlock\");\r\n        this.updateMarginParameters(divTableBlock);\r\n        divTableBlock.addEventListener(\"resize\", (event) =>\r\n            this.onTableBlockResize(event)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"divTableBlock\" className=\"card border-dark gameBorderCard\">\r\n                {this.drawGameTable()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getCellCoordinates = (cellID, dimen) => {\r\n        const cellFloor = Math.floor(cellID / (dimen * dimen));\r\n        const onFloorId = cellID % (dimen * dimen);\r\n        const cellRow = Math.floor(onFloorId / dimen);\r\n        const cellColumn = onFloorId % dimen;\r\n        // just test a random id to see how above formula works!\r\n        return { floor: cellFloor, row: cellRow, column: cellColumn };\r\n    };\r\n    onEachCellClick = (event) => {\r\n        const { gameStarted, tableDimension } = this.state;\r\n        const { roomName } = this.props;\r\n        const { player } = this.context;\r\n        if (gameStarted) {\r\n            const selectedCellButton = event.target;\r\n\r\n            if (this.state.turn !== this.state.yourTurn) return;\r\n\r\n            const cell = this.getCellCoordinates(\r\n                selectedCellButton.id,\r\n                tableDimension\r\n            );\r\n\r\n            if (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n                //send move to WebSocket Server\r\n                this.socketConnection.send(\r\n                    this.createSocketRequest(\r\n                        \"move\",\r\n                        roomName,\r\n                        player.userID,\r\n                        selectedCellButton.id\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    verifyAndApplyTheMove = (cell, cellButton) => {\r\n        const { players, turn } = this.state;\r\n        let tempTable = [...this.state.table];\r\n        if (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n            tempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n            cellButton.innerHTML = players[turn].shape;\r\n            cellButton.style.color = players[turn].color;\r\n\r\n            this.setState({\r\n                turn: (turn + 1) % 2,\r\n                table: tempTable,\r\n            });\r\n            // time to inspect the new cell:\r\n            this.inspectTableAroundTheCell(cell.floor, cell.row, cell.column);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    inspectTableAroundTheCell = (floor, row, column) => {\r\n        // inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n        // is it needed to write a inspectAll method ?\r\n        const { players, table, tableDimension } = this.state;\r\n        const playerInTheCell = table[floor][row][column];\r\n        let rowCount = 0,\r\n            columnCount = 0,\r\n            floorMainDiagCount = 0,\r\n            floorSideDiagCount = 0;\r\n        let tableMainDiagCount = 0,\r\n            tableSideDiagCount = 0,\r\n            tableAltitudeCount = 0;\r\n        for (let i = 0; i < tableDimension; i++) {\r\n            if (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n            if (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n            if (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n            if (row === column) {\r\n                if (table[floor][i][i] === playerInTheCell)\r\n                    floorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n                if (row === floor && table[i][i][i] === playerInTheCell)\r\n                    tableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n            }\r\n            if (row + column + 1 === tableDimension) {\r\n                if (table[floor][i][tableDimension - i - 1] === playerInTheCell)\r\n                    floorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n                if (\r\n                    row === floor &&\r\n                    table[i][i][tableDimension - i - 1] === playerInTheCell\r\n                )\r\n                    tableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n            }\r\n        }\r\n\r\n        // now inspect wether a line has been made and take action for it\r\n        let wholePoint =\r\n            this.connectTheScoreLines(\r\n                rowCount,\r\n                floor * tableDimension * tableDimension + row * tableDimension,\r\n                1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                columnCount,\r\n                floor * tableDimension * tableDimension + column,\r\n                tableDimension,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                floorMainDiagCount,\r\n                floor * tableDimension * tableDimension,\r\n                tableDimension + 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                floorSideDiagCount,\r\n                floor * tableDimension * tableDimension + (tableDimension - 1),\r\n                tableDimension - 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                tableMainDiagCount,\r\n                0,\r\n                tableDimension * (tableDimension + 1) + 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                tableSideDiagCount,\r\n                tableDimension - 1,\r\n                tableDimension * (tableDimension + 1) - 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                tableAltitudeCount,\r\n                row * tableDimension + column,\r\n                tableDimension * tableDimension,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            );\r\n        if (wholePoint) {\r\n            let tempPlayers = [...players];\r\n            tempPlayers[playerInTheCell].score += wholePoint;\r\n            this.setState({ players: tempPlayers });\r\n            //temp result show:\r\n\r\n            if (playerInTheCell === 0)\r\n                toast.info(\r\n                    players[playerInTheCell].shape +\r\n                        \" : \" +\r\n                        players[playerInTheCell].score,\r\n                    { position: \"top-right\" }\r\n                );\r\n            else\r\n                toast.error(\r\n                    players[playerInTheCell].shape +\r\n                        \" : \" +\r\n                        players[playerInTheCell].score,\r\n                    { position: \"bottom-left\" }\r\n                );\r\n        }\r\n    };\r\n\r\n    // method below: checks each possible line(according to the condition that user gives it),\r\n    // if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n    connectTheScoreLines = (count, firstCell, step, player, dimension) => {\r\n        if (count === dimension) {\r\n            for (let i = 0; i < dimension; i++) {\r\n                this.cellButtons[firstCell + i * step].className =\r\n                    \"gameTableCells \" + player.lineColor;\r\n            }\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    drawGameTable = () => {\r\n        // *****************note: when window size changes: table's selected cells are cleared\r\n        // use this.state.table to load again*****************\r\n        const { rowMarginRatio, tableDimension } = this.state;\r\n        // initialize rows columns floors\r\n\r\n        let dimens = [];\r\n        for (let i = 0; i < tableDimension; i++) dimens.push(i);\r\n\r\n        // drawing the table and setting id s and click events\r\n        return dimens.map((floor) => (\r\n            <div>\r\n                {dimens.map((row) => (\r\n                    <div style={{ marginLeft: `${row * rowMarginRatio}px` }}>\r\n                        {dimens.map((column) => (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"gameTableCells btn btn-outline-dark\"\r\n                                id={\r\n                                    floor * tableDimension * tableDimension +\r\n                                    row * tableDimension +\r\n                                    column\r\n                                }\r\n                                onClick={(event) => this.onEachCellClick(event)}\r\n                            >\r\n                                {\" \"}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n                <br />\r\n            </div>\r\n        ));\r\n    };\r\n}\r\n\r\nexport default GamePlay;\r\n","import { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport MainContext from \"./../common/MainContext\";\r\nimport GamePlay from './GamePlay';\r\n\r\nclass GameDeck extends Component {\r\n    static contextType = MainContext;\r\n    state = {\r\n        roomName: \"\",\r\n        startGame: false,\r\n    };\r\n\r\n    onStartGameClick = (event) => {\r\n        event.preventDefault();\r\n        const { player } = this.context;\r\n        const { roomName } = this.state;\r\n        if (player) {\r\n            if (roomName) this.setState({ startGame: true });\r\n        } else {\r\n            toast.error(\"ابتدا وارد حساب کاربری خود شوید\");\r\n        }\r\n    };\r\n    render() {\r\n        const { roomName, startGame } = this.state;\r\n\r\n        return (\r\n            <div className=\"w-100\">\r\n                {!startGame && (\r\n                    <div className=\"card border-warning mb-3 singleCard\">\r\n                        <div className=\"card-header text-center border-warning\">\r\n                            اتصال بازیکنان\r\n                        </div>\r\n                        <div className=\"card-body text-right\">\r\n                            <form\r\n                                onSubmit={(event) =>\r\n                                    this.onStartGameClick(event)\r\n                                }\r\n                            >\r\n                                <div className=\"form-inline\">\r\n                                    <label className=\"w-25\">نام روم</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-75\"\r\n                                        placeholder=\"Room Name\"\r\n                                        value={roomName}\r\n                                        required=\"required\"\r\n                                        onChange={(event) =>\r\n                                            this.setState({\r\n                                                roomName: event.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </div>\r\n\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-success btn-block mt-4\"\r\n                                >\r\n                                    شروع بازی\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {startGame && <GamePlay roomName={roomName} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameDeck;\r\n","import { Component } from \"react\";\r\nimport ScoresTable from \"./tables/ScoresTable\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport GameRules from \"./informations/GameRules\";\r\nimport ContactInfo from \"./informations/ContactInfo\";\r\nimport SignUp from \"./users/SignUp\";\r\nimport MainLayout from \"./common/MainLayout\";\r\nimport Ranking from \"./tables/Ranking\";\r\nimport ControlPanel from './users/ControlPanel';\r\nimport GameDeck from './games/GameDeck';\r\n\r\nclass App extends Component {\r\n    // 1. use uuid to produce ids\r\n    // state = {  }\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <Switch>\r\n                    <Route path=\"/signUp\" component={SignUp} />\r\n                    <Route path=\"/gameDeck\" component={GameDeck} />\r\n                    <Route path=\"/ranking\" component={Ranking} />\r\n                    <Route path=\"/gameRules\" component={GameRules} />\r\n                    <Route path=\"/contactInfo\" component={ContactInfo} />\r\n                    <Route path=\"/controlPanel\" component={ControlPanel} />\r\n                    <Route path=\"/\" exact component={ScoresTable} />\r\n                    \r\n                </Switch>\r\n            </MainLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import {render} from 'react-dom';\r\nimport App from './App.js';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nrender(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter> , document.getElementById('root'));"],"sourceRoot":""}