{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","services/configs/gamesetting.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","globals/redux/actions/game.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","commons/LoadingBar.jsx","layouts/ProfilePanelLayout.jsx","globals/redux/actions/friends.js","services/http/gameServices.js","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/AllScores.jsx","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/admin/NoticeManager.jsx","globals/redux/actions/chats.js","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/edit/Credentials.jsx","profile/edit/PasswordChange.jsx","profile/edit/ImagePicker.jsx","profile/edit/AvatarChange.jsx","profile/edit/AcountManager.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/GamePlay.jsx","games/SingleGame.jsx","games/competitions/CompetitionSummary.jsx","games/competitions/CompetitionsMain.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTable.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SinglePlayerCard.jsx","tables/rankings/AllPlayers.jsx","tables/rankings/Rankings.jsx","commons/MainRouter.jsx","tools/NotificationCenter.jsx","globals/redux/actions/index.js","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/chats.js","globals/redux/reducers/freinds.js","globals/redux/store/index.js","index.js","services/configs/index.js"],"names":["Profile","module","exports","Root","SignUp","SignIn","GameDeck","Rankings","GameGuide","ContactUs","ChatRoom","MyGamesAndFriends","Notices","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","MyAvatar","PasswordChange","Friends","Records","Administrators","Games","Mine","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","reset","clear","TOKEN","getItem","T3D","TableRowMargings","TurnTimeOut","RandomSearchRepeatLimit","GlobalContext","createContext","device","signOut","goTo","redirectToGamePlay","NavigationBar","me","useSelector","state","context","useContext","Navbar","style","borderBottom","bg","className","Container","Nav","activeClassName","to","Routes","Client","aria-hidden","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","expectedErrors","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAvatar","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","uploadAvatar","avatar","formData","FormData","append","getMyFriends","isMyFriend","targetID","ResetOpponent","dispatch","a","ResetMyPlayer","LoadMyPlayer","data","player","payload","EnterRoom","room","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","findIndex","mode","Provider","value","push","destination","ProfilePanel","props","Row","Button","border","variant","Configs","aria-current","isAdmin","width","height","CollapsedPanel","AutoSignIn","opponent","storageToken","chatServices","getOurChat","friendID","getMyInteractions","LoadingBar","loading","whichOne","setWhichOne","Math","floor","random","useLayoutEffect","document","body","overflowY","selectedLoader","time","customLoading","ProfilePanelLayout","setLoading","myFriends","myChats","interactions","Array","Error","sort","i1","i2","Date","messages","length","date","getTime","forEach","interact","friend","ownerOf","with","map","msg","owner","Col","lg","sm","gameServices","getAllGames","getMyGames","objectify","DateObject","calendar","persian","locale","persian_fa","toHijri","format","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Card","Body","Footer","block","size","AllScores","scores","score","players","name","gameID","Text","Record","title","small","ListGroup","Item","Badge","pill","ReapeatRandomSearch","getState","previous","tools","randomSearchRepeats","GameSetting","CloseRandomSearch","EndFriendlyInvitation","friendlyGameTarget","ReloadRecords","recordReloadTrigger","reloadTrigger","FriendRecords","person","thisIsMe","gameType","setGameType","setAvatar","records","md","Image","src","alt","roundedCircle","points","wins","draws","loses","xs","InviteToFriendlyGame","setTimeout","InputGroup","Prepend","Radio","onChange","defaultChecked","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","area-hidden","Content","Pane","filter","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","UpdateMyChatList","sent","recieved","chats","find","chat","SendMessageTo","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","ourChat","setOurChat","ours","current","scrollIntoView","behavior","top","offsetTop","index","ref","onSubmit","event","preventDefault","composeMessage","myfriends","setFullname","studentID","setStudentID","email","setEmail","password","setPassword","pageUpdateTrigger","triggerPageUpdate","Group","disabled","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","checkConfirmPassword","ImagePicker","selector","preview","setPreview","rounded","imageFile","oFReader","FileReader","readAsDataURL","onload","oFREvent","result","updatePreview","files","accept","htmlFor","AvatarChange","myAvatar","selectMyAvatar","upload","AcountManager","TABS","Tabs","SignInSideBar","onSignInSubmitted","setState","Number","replace","this","autoComplete","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","piece","setPiece","opp","isFriend","onFriendRequestClick","innerHTML","friendRequestTarget","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","roomName","resolve","server","WebSocket","onopen","send","onerror","close","onclose","withReduxDashboard","component","LoadThisPlayer","ExitRoom","UpdateScoreboard","details","CleanScoreboard","BriefScoreboard","timeRemaining","timeStamp","setTimeStamp","aThird","textAlign","TableDesign","dimension","table","onEachCellClick","normalCell","dimens","i","row","direction","marginLeft","column","GamePlay","selected","lineColor","turn","myTurn","socketGamePlay","playerOnline","timerID","connectionCheckTimerID","updateGameScorebaord","oppTurn","enableTimerForMyMove","timeout","clearInterval","setInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","startTime","IDs","opponentID","cellID","nextMove","verifyAndApplyTheMove","getCellCoordinates","cellButtons","focus","endThisGame","closeThisGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","window","navigator","onLine","dimen","onFloorId","selectedCellButton","cell","cellButton","tempTable","inspectAreaAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","connectTheScoreLines","count","firstCell","step","getElementsByClassName","SingleGame","searching","setSearching","onStartGameClick","borderRadius","padding","checked","CompetitionSummary","summary","CompetitionsMain","transition","friendlyGame","href","ScoresTable","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","allGames","then","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","Modal","backdrop","show","onHide","closeButton","controlId","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SinglePlayerCard","rowNumber","scope","AllPlayers","p","tempPlayers","p1","p2","MainRouter","path","gameInvitation","pushed","NewMsg","by","inviterID","ID","acceptedGame","onClose","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","enableGlobalTimer","iamSignedIn","iamBusy","command","UpdateStatistics","answer","targetName","askerID","askerName","RecieveGameInvitation","respondToFriendshipRequest","margin","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById","ClientRoutes","require","ServerRoutes"],"mappings":"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","file":"static/js/main.ae87a6d6.chunk.js","sourcesContent":["//client routes\r\n\r\n// Partial Routes\r\nconst Profile = \"/Profile\",\r\n    ChatRoom = \"ChatRoom\",\r\n    MyGamesAndFriends = \"GamesFriends\",\r\n    Notices = \"Notices\";\r\n\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/SignUp\",\r\n    SignIn: \"/SignIn\",\r\n    GameDeck: \"/GameDeck\",\r\n    Rankings: \"/Rankings\",\r\n    GameGuide: \"/GameGuide\",\r\n    ContactUs: \"/ContacUs\",\r\n    Profile,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Profile}/${Notices}`,\r\n};\r\n","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    MyAvatar: \"avatar\",\r\n    PasswordChange: \"password\",\r\n    Friends: \"friends\",\r\n    Records: \"records\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: \"single\",\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= 400\r\n        error.response.status < 500\r\n    );\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};\r\n","//browser storage keywords\r\nconst KeyToken = \"ptk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n};\r\n","module.exports = {\r\n    T3D: {\r\n        TableRowMargings: [0, 40, 80, 120, 160],\r\n        TurnTimeOut: 45, //secs\r\n    },\r\n    RandomSearchRepeatLimit: 5,\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {},\r\n    goTo: () => {},\r\n    redirectToGamePlay: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar style={{borderBottom: '1px solid grey'}}  bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`درخواست بازی ${by.type}*${by.type}*${by.type} از ${by.name}\\n برای پذیرفتن دعوت کلیک کنید`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID, by.type),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\tconst expectedErrors =\r\n\t\t\terror.response &&\r\n\t\t\terror.response.status >= Status.BadRequest && // >= 400\r\n\t\t\terror.response.status < Status.InternalServerError; // < 500\r\n\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (!expectedErrors) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tsignIn: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tgetPlayer: (userID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}/${userID}`),\r\n\tgetAvatar: (userID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.MyAvatar}/${userID}`\r\n\t\t),\r\n\tgetAllPlayers: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}`),\r\n\tgetMe: () => http.get(`${Server.Root}/${Server.Users}/${Server.Private}`),\r\n\tgetMyCredentials: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t),\r\n\teditMyCredentials: (newMe) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t),\r\n\tchangeMyPassword: (passwords) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t),\r\n\tuploadAvatar: (avatar) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"avatar\", avatar);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.MyAvatar}`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t),\r\n\tisMyFriend: (targetID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t)\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\n\r\nexport const ResetOpponent = () =>{\r\n    return async (dispatch) => {\r\n        await dispatch({type: \"RESET_OPPONENT\"})\r\n    }\r\n}\r\n\r\nexport const ResetMyPlayer = () => {\r\n    return async (dispatch) => {\r\n        await dispatch({ type: \"RESET_MINE\" });\r\n    };\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","export const EnterRoom = (room) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"ENTER_ROOM\",\r\n\t\t\tpayload: room,\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"EXIT_ROOM\",\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n\t};\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_SCOREBOARD\",\r\n\t\t\tpayload: details,\r\n\t\t});\r\n\t};\r\n};\r\n\r\n/*export const SetGameID = (gameID) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"SET_GAME_ID\",\r\n\t\t\tpayload: gameID,\r\n\t\t});\r\n\t};\r\n};*/\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { ResetMyPlayer } from './../redux/actions/player';\r\nimport { EnterRoom } from './../redux/actions/game';\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(\"GlobalStates rendered\"); //s\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t}\r\n\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t}  \r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={{ device, signOut, redirectToGamePlay, goTo }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = (props) => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button>\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to=\"/controlPanel/admin/whatever\">\r\n                                    <svg\r\n                                        className=\"bi me-2\"\r\n                                        width=\"16\"\r\n                                        height=\"16\"></svg>\r\n                                    امکانات ادمین\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Navbar} from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = () => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n    return (\r\n        <Navbar bg=\"transparent\"  className=\"justify-content-center pt-2 p-0 nav-pills text-right w-100\">\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                exact\r\n                to={Configs.Routes.Client.Profile}\r\n                className=\"nav-link mx-1\"\r\n                aria-current=\"page\">\r\n                <i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link mx-1\"\r\n                to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link mx-1\"\r\n                to={Configs.Routes.Client.ChatRoom}>\r\n                <i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n\r\n            {me && me.isAdmin && (\r\n                <Fragment>\r\n                    {/* admin tools */}\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link mx-1 border-top\"\r\n                        to={Configs.Routes.Client.Notices}>\r\n                        <i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n                    </NavLink>\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link mx-1\"\r\n                        to=\"/controlPanel/admin/whatever\">\r\n                        <svg className=\"bi me-2\" width=\"16\" height=\"16\"></svg>\r\n                    </NavLink>\r\n                </Fragment>\r\n            )}\r\n\r\n            <Button\r\n                variant=\"outline-danger\"\r\n                className=\"mx-3\"\r\n                onClick={context.signOut}>\r\n                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n            </Button>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from './../globals/redux/actions/player';\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\tif (storageToken) {\r\n\t\t\tconsole.log(`auth called then `);\r\n\t\t\tdispatch(LoadMyPlayer());\r\n\t\t} else {\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport {\r\n\tLoadMyFriendsChats,\r\n\tResetMyFriendsChats,\r\n} from \"../globals/redux/actions/friends\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait dispatch(LoadMyPlayer());\r\n\t\t\t\tawait dispatch(LoadMyFriendsChats());\r\n\t\t\t\t// profile unmounted\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ResetMyFriendsChats());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device === Devices.Desktop ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col lg={3}>\r\n\t\t\t\t\t\t<ProfilePanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={9}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col className=\"mx-auto\" sm={12}>\r\n\t\t\t\t\t\t<CollapsedPanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"./../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadMyFriendsChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myFriends = [],\r\n\t\t\t\tmyChats = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (!(interactions instanceof Array))\r\n\t\t\t\t\tthrow new Error(\"server response is not an array!\");\r\n\t\t\t\tinteractions\r\n\t\t\t\t\t.sort(\r\n\t\t\t\t\t\t(i1, i2) =>\r\n\t\t\t\t\t\t\tnew Date(i2.messages[i2.messages.length - 1].date).getTime() -\r\n\t\t\t\t\t\t\tnew Date(i1.messages[i1.messages.length - 1].date).getTime()\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.forEach((interact) => {\r\n\t\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\t\tmyFriends.push(friend);\r\n\t\t\t\t\t\tmyChats.push({\r\n\t\t\t\t\t\t\twith: friend.userID,\r\n\t\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\tme: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: null,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\tme: null,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"LOAD_FRIENDS\",\r\n\t\t\t\t\tpayload: myFriends,\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: myChats });\r\n\t\t\t\t// dispatch friends here\r\n\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetMyFriendsChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t};\r\n};\r\n","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n\tgetAllGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}`);\r\n\t},\r\n\tgetMyGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`);\r\n\t}\r\n};\r\n\r\nexport default gameServices;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState } from 'react';\r\nimport { toHijri } from \"../../tools/format\";\r\n\r\nconst SingleScoreCard = ({\r\n    Type,\r\n    date,\r\n    playerXName,\r\n    playerOName,\r\n    xScore,\r\n    oScore,\r\n}) => {\r\n    // format score text:\r\n    const [xBadge, setXBadge] = useState(null);\r\n    const [oBadge, setOBadge] = useState(null);\r\n    const [hijriDate, setHijriDate] = useState(null);\r\n    useEffect(() => {\r\n        setHijriDate(toHijri(date)[0]);//toHijri = [date, time]\r\n        if (xScore > oScore) {\r\n            // x won\r\n            setXBadge(\"badge-success\");\r\n            setOBadge(\"badge-danger\");\r\n        } else if (xScore === oScore) {\r\n            //draw\r\n            setXBadge(\"badge-warning\");\r\n            setOBadge(\"badge-warning\");\r\n        } else {\r\n            // o won\r\n            setOBadge(\"badge-success\");\r\n            setXBadge(\"badge-danger\");\r\n        }\r\n    }, [date, xScore, oScore]);\r\n    // make this card 'bg-transparent' too?\r\n    return (\r\n        <Card border=\"dark\" className=\"single-score-card\">\r\n            {/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n            <Card.Body>\r\n                <Row className=\"text-center mx-auto\">\r\n                    <span className=\"col-5\">{playerXName}</span>\r\n                    <span\r\n                        className={`badge badge-pill ${xBadge} single-score-badge col-1`}>\r\n                        {xScore}\r\n                    </span>\r\n\r\n                    <span\r\n                        className={`badge badge-pill ${oBadge} single-score-badge col-1`}>\r\n                        {oScore}\r\n                    </span>\r\n                    <span className=\"col-5\">{playerOName}</span>\r\n                </Row>\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-0\">\r\n                <Button\r\n                    variant=\"outline-dark\"\r\n                    block\r\n                    size=\"lg\"\r\n                    className=\"replay-game-button\">\r\n                        {hijriDate} \r\n                        <i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n                </Button>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <Fragment>\r\n            { scores.length ? scores.map(score => (\r\n                <SingleScoreCard key={score.gameID}\r\n                    Type={score.Type}\r\n                    date={score.date}\r\n                    playerXName={score.players[0].name}\r\n                    playerOName={score.players[1].name}\r\n                    xScore={score.players[0].score}\r\n                    oScore={score.players[1].score}\r\n                ></SingleScoreCard>\r\n            )) :\r\n            <Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n                <Card.Body className=\"text-center\">\r\n                    <Card.Text>\r\n                        هیچ بازی ای انجام نگرفته است\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                </Card>}\r\n        </Fragment>\r\n     );\r\n};\r\n \r\nexport default AllScores;","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-center\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","import { GameSetting } from \"../../../services/configs\";\r\n\r\nexport const ReapeatRandomSearch = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.randomSearchRepeats = (previous.randomSearchRepeats + 1) % GameSetting.RandomSearchRepeatLimit;\r\n\t\t// randomSearchRepeats === 0 => means nor search is not happening or its happening and has reached to maximum allowed retries\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const CloseRandomSearch = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.randomSearchRepeats = 0;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.friendRequestTarget = targetID;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.friendRequestTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.friendlyGameTarget = { targetID, type: gameType };\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.friendlyGameTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.gameInvitation = { ID, name, type: gameType };\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RejectGameInvitation = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const AcceptInvitation = (inviterID, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.acceptedGame = { inviterID, type: gameType };\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const ReloadRecords = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...(getState().tools) };\r\n\t\tprevious.recordReloadTrigger = !previous.reloadTrigger;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n","import {\r\n\tButton,\r\n\tCard,\r\n\tCol,\r\n\tListGroup,\r\n\tRow,\r\n\tInputGroup,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport Record from \"./Record\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { useState, useEffect } from \"react\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\nimport { Status } from \"../../services/configs\";\r\nconst FriendRecords = ({ person, thisIsMe }) => {\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst [avatar, setAvatar] = useState(null);//s\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (person) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data, status } = await userServices.getAvatar(\r\n\t\t\t\t\t\tperson.userID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Status.Successful) setAvatar(data.avatar);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی در بارگذاری آواتار این شخص پیش آمد ... لطفا اتصال اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// use- no-avatar.png here too?\r\n\t\t\t\t\t// in case server return wrong?\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [person]);\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && !thisIsMe) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(person.userID, gameType));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\tconst { records } = person;\r\n\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\t\talt=\"خطا\"\r\n\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{!thisIsMe && person && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={3}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={4}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={5}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport AllScores from \"../../tables/scores/AllScores\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst myFriends = useSelector((state) => state.friends);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames(serverResponse.data.myGames.reverse());\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? myFriends.findIndex((friend) => friend.userID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, myFriends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link eventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t{me && <FriendRecords person={me} thisIsMe={true}/>}\r\n\t\t\t\t\t\t\t\t\t<AllScores scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? myFriends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: me\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={\r\n\t\t\t\t\t\t\t\t\t\t\t\tme.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AllScores\r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../../services/configs\";\r\nimport \"../profile.css\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices(data.notices.reverse());\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","export const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n    // one time u load from server, then new messages are simply pushed to previous data\r\n    return async(dispatch, getState) => {\r\n        try {\r\n            const previous = [...getState().chats];\r\n            // is it ok to use by refrence ?\r\n            // const friendIndex = previous.findIndex(chat => chat.with === friendID);\r\n            previous.find(chat => chat.with === friendID).messages.push({\r\n                name: name, //is name needed?\r\n                me: sent ? text : null,\r\n                friend: recieved ? text : null,\r\n                date: new Date(),\r\n            });\r\n\r\n            await dispatch({\r\n                type: \"LOAD_CHATS\",\r\n                payload: previous,\r\n            });\r\n\r\n            // const friendList = [...getState().friends];\r\n            // const friendIndex = friendList.findIndex(friend => friend.userID === friendID);\r\n            // const recentInteractedFriend = {...friendList[friendIndex]};\r\n            // delete friendList[friendIndex];\r\n            // friendList.unshift(recentInteractedFriend);\r\n            // await dispatch({\r\n            // \ttype: \"LOAD_FRIENDS\",\r\n            // \tpayload: friendList,\r\n            // });\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            //..propeer message\r\n            // ...reset?\r\n        }\r\n    };\r\n};\r\n\r\nexport const ResetMyChats = () => {\r\n        return async(dispatch) => {\r\n            await dispatch({ type: \"RESET_CHATS\" });\r\n        }\r\n    }\r\n    /*\r\n    // load all chats\r\n    export const LoadMyChats = () => {\r\n    \treturn async (dispatch) => {\r\n    \t\ttry {\r\n    \t\t\tconst { status, data } = await chatServices.getMyChats();\r\n    \t\t\tif (status === Status.Successful) {\r\n    \t\t\t\tconst {myChats} = data;\r\n    \t\t\t\tconsole.log(myChats);\r\n    \t\t\t\tconst chats = myChats.map((chat) => {\r\n    \t\t\t\t\tconst { ownerOf, friendID, messages } = chat;\r\n    \t\t\t\t\treturn {\r\n    \t\t\t\t\t\twith: friendID,\r\n    \t\t\t\t\t\tmessages: messages.map((msg) =>\r\n    \t\t\t\t\t\t\townerOf === msg.owner\r\n    \t\t\t\t\t\t\t\t? { me: msg.text, friend: null, date: msg.date }\r\n    \t\t\t\t\t\t\t\t: { me: null, friend: msg.text, date: msg.date }\r\n    \t\t\t\t\t\t),\r\n    \t\t\t\t\t};\r\n    \t\t\t\t});\r\n\r\n    \t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: chats });\r\n    \t\t\t\t// dispatch friends here\r\n    \t\t\t\t// chats key-value array: its keys are friendID that is relative to a special chat\r\n    \t\t\t\tawait dispatch({ type: \"LOAD_FRIENDS\", payload: chats });\r\n    \t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n    \t\t} catch (err) {\r\n    \t\t\tconsole.log(\r\n    \t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n    \t\t\t);\r\n    \t\t\t//show proper message\r\n    \t\t\tSorry(\r\n    \t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n    \t\t\t);\r\n    \t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n    \t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n    \t\t}\r\n    \t};\r\n    };*/","import { UpdateMyChatList } from \"./chats\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\tconst chats = useSelector((state) => state.chats);\r\n\tconst [ourChat, setOurChat] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet ours = chats.find((chat) => chat.with === friendID);\r\n\t\tsetOurChat(ours && ours.messages ? ours.messages : []);\r\n\t}, [chats, friendID]);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { recieved } = message;\r\n\t\tif (!message.sent && recieved && recieved.friendID === friendID) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t}, [message, ourChat, friendID, dispatch]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friendID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"big-single-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{ourChat &&\r\n\t\t\t\t\t\t\t\tourChat instanceof Array &&\r\n\t\t\t\t\t\t\t\tourChat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tourChat[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex - 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tconst myfriends = useSelector((state) => state.friends);\r\n\t\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t// id=\"left-tabs-example\"\r\n\t\t\t\t// defaultActiveKey={filterID}\r\n\t\t\t\t// onSelect={(key) => setFilterID(key)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3} md={3} sm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.userID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{friend.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\t// key={uuidv1()}\r\n\t\t\t\t\t\t\t\t\t\tfriendID={friend.userID}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport Configs from \"../../services/configs\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst Credentials = () => {\r\n\tconst [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n\r\n\tconst reloadPage = () => {\r\n\t\tsetLoading(false);\r\n\t\ttriggerPageUpdate(!pageUpdateTrigger);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } = await userServices.getMyCredentials();\r\n\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\tconst { me } = data;\r\n\t\t\t\t\tsetFullname(me.fullname);\r\n\t\t\t\t\tsetStudentID(me.studentID);\r\n\t\t\t\t\tsetEmail(me.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [pageUpdateTrigger]);\r\n\r\n\tconst saveChanges = async (event) => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\t// check all inputs plz\r\n        event.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.editMyCredentials({\r\n\t\t\t\tstudentID,\r\n\t\t\t\tfullname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(`تغییرات با موفقیت اعمال شد`);\r\n\t\t\t\t// dispatch(TriggerRecordUpdate());\r\n\t\t\t\t// find another way to update\r\n\r\n\t\t\t\treloadPage();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"Full Name\"\r\n\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">ایمیل</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-2\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n                            required\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Credentials;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst PasswordChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst checkConfirmPassword = (event) => {\r\n\t\tsetConfirmNewPassword(event.target.value);\r\n\t\tif (newPassword !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\r\n\r\n\tconst changeMyPassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n        setLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.changeMyPassword({\r\n\t\t\t\tpassword,\r\n\t\t\t\tnewPassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"رمز شما با موفقیت تغییر داده شد\");\r\n\t\t\t\tcontext.signOut();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={e => changeMyPassword(e)}>\r\n            <LoadingBar loading={loading} />\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tرمز عبور جدید\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tتایید رمز عبور جدید\r\n\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Confirm New Password\"\r\n\t\t\t\t\tvalue={confirmNewPassword}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={(event) => checkConfirmPassword(event)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-2\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-key px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر رمز عبور\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordChange;\r\n","import { Col, Form, Image, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Notify } from \"./../../tools/notification\";\r\nimport './avatar.css';\r\nconst ImagePicker = ({ selector }) => {\r\n\tconst [preview, setPreview] = useState(null);\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst { avatar } = me ? me : { avatar: null };\r\n\tuseEffect(() => {\r\n\t\tsetPreview(avatar);\r\n\t}, [avatar]);\r\n\tconst updatePreview = (imageFile) => {\r\n\t\ttry {\r\n\t\t\tselector(imageFile);\r\n\t\t\tconst oFReader = new FileReader();\r\n\t\t\toFReader.readAsDataURL(imageFile);\r\n\r\n\t\t\toFReader.onload = (oFREvent) => {\r\n\t\t\t\tsetPreview(oFREvent.target.result);\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tNotify(\"پیش نمایش فایل انتخابی با مشکل رو به رو شد.\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form.Group>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"text-center\" sm={4} xs={4} md={3} lg={2}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\tsrc={preview}\r\n\t\t\t\t\t\trounded\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tclassName=\"dropbox-rectangle\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"btn-outline-primary file-picker-control\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tid=\"filepicker\"\r\n\t\t\t\t\t\tonChange={(e) => updatePreview(e.target.files[0])}\r\n\t\t\t\t\t\taccept=\".jpg,.jpeg,.png\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"ابتدا عکس مورد نظر را از اینجا انتخاب کنید\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Form.Label\r\n\t\t\t\t\thtmlFor=\"filepicker\"\r\n\t\t\t\t\tclassName=\"btn-outline-primary file-picker-label\">\r\n\t\t\t\t\tبا کلیک روی اینجا عکس خود را انتخاب کنید و یا فایل آن را\r\n\t\t\t\t\tبکشید و در وسط کادر سبز رنگ رها کنید ...\r\n\t\t\t\t</Form.Label>\r\n\t\t\t</Row>\r\n\t\t</Form.Group>\r\n\t);\r\n};\r\n\r\nexport default ImagePicker;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { OK } from \"../../tools/notification\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport ImagePicker from \"./ImagePicker\";\r\n\r\nconst AvatarChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [myAvatar, selectMyAvatar] = useState(null);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst upload = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.uploadAvatar(myAvatar);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"آواتار شما با موفقیت تغییر داده شد\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\tsetPassword(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => upload(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<ImagePicker selector={selectMyAvatar} />\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-2\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-upload px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر آواتار\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default AvatarChange;\r\n","import { Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport Credentials from \"./Credentials\";\r\nimport PasswordChange from \"./PasswordChange\";\r\nimport AvatarChange from \"./AvatarChange\";\r\n\r\nconst AcountManager = () => {\r\n\t//states\r\n\r\n\tconst TABS = { CREDENTIALS: 0, AVATAR: 1, PASSWORD: 2 };\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tdefaultActiveKey={TABS.CREDENTIALS}\r\n\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t<Tab eventKey={TABS.CREDENTIALS} title=\"ویرایش مشخصات\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Credentials />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.AVATAR} title=\"آواتار\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<AvatarChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.PASSWORD} title=\"تغییر رمزعبور\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<PasswordChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default AcountManager;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card border=\"primary\" className=\"sign-in-sidebar\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices(data.notices.reverse());\r\n                    //if all is empty\r\n                    if(data.notices.length === 0) {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {notices.length && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های فعال\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col lg={2} md={3} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg={10} md={9} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import { Card, Col, Alert, ListGroup, Button, Image } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst { fullname, userID, records, avatar } = props.person\r\n\t\t? props.person\r\n\t\t: me;\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\tconst thisIsMe = me && userID === me.userID;\r\n\tuseEffect(() => {\r\n\t\tsetPiece(!thisIsMe ? scoreboard.opp : scoreboard.me);\r\n\t}, [thisIsMe, scoreboard]);\r\n\r\n\tconst { recordReloadTrigger } = tools;\r\n\tuseEffect(() => {\r\n\t\tif (!thisIsMe) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [userID, thisIsMe, recordReloadTrigger]);\r\n\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(userID));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">{fullname}</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"player-avatar\"\r\n\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باختها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{thisIsMe ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\tif (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\telse setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t{rightSideBar && <Col md={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tmd={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col md={context.device !== Devices.Tablet ? 3 : 4}>\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (roomName, gameType) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", roomName, gameType)); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, CleanScoreboard } from \"./actions/game\";\r\nimport { LoadThisPlayer, ResetOpponent } from \"./actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./actions/game\";\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n\tconst mapStateToProps = (state) => ({\r\n\t\tme: state.me,\r\n\t\topponent: state.opponent,\r\n\t\troom: state.room,\r\n\t\tscoreboard: state.scoreboard,\r\n\t\ttools: state.tools,\r\n\t});\r\n\r\n\tconst mapDispatchToProps = (dispatch) => ({\r\n\t\tLoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n\t\tResetOpponent: () => dispatch(ResetOpponent()),\r\n\t\tEnterRoom: (room) => dispatch(EnterRoom(room)),\r\n\t\tExitRoom: () => dispatch(ExitRoom()),\r\n\t\t// SetGameID: (gameID) => dispatch(SetGameID(gameID)),\r\n\t\tUpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n\t\tCleanScoreboard: () => dispatch(CleanScoreboard()),\r\n\t});\r\n\treturn connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { GameSetting } from \"../../services/configs\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = GameSetting.T3D.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-start px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-half px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>;\r\n        }\r\n        setTimeStamp(<div className={color}>{icon}{timeRemaining}</div>);\r\n    }, [timeRemaining, aThird]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}>\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}>\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({ timeRemaining, dimension, players, table, onEachCellClick,normalCell }) => {\r\n    let dimens = [];\r\n    for (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n    //prop drilling in BriefScoreBoard\r\n    return (\r\n        <Card\r\n            bg=\"transparent\"\r\n            border=\"dark\"\r\n            className=\"w-100 mx-auto\">\r\n            <BriefScoreboard timeRemaining={timeRemaining} players={players} />\r\n            <Card.Body className=\"game-border-card\">\r\n                {table ? (\r\n                    dimens.map((floor) => (\r\n                        <Fragment>\r\n                            {dimens.map((row) => (\r\n                                <Row\r\n                                    style={{\r\n                                        direction: \"ltr\",\r\n                                        marginLeft: `${GameSetting.T3D.TableRowMargings[row]}px`,\r\n                                    }}>\r\n                                    {dimens.map((column) => (\r\n                                        <Button\r\n                                            key={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            variant={normalCell}\r\n                                            className=\"game-table-cells\"\r\n                                            style={\r\n                                                table[floor][row][column] !==\r\n                                                null\r\n                                                    ? {\r\n                                                          color: players[\r\n                                                              table[floor][row][\r\n                                                                  column\r\n                                                              ]\r\n                                                          ].color,\r\n                                                      }\r\n                                                    : null\r\n                                            }\r\n                                            id={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            onClick={(event) =>\r\n                                                onEachCellClick(event)\r\n                                            }>\r\n                                            {table[floor][row][column] !==\r\n                                                null &&\r\n                                                players[\r\n                                                    table[floor][row][column]\r\n                                                ].shape}\r\n                                        </Button>\r\n                                    ))}\r\n                                </Row>\r\n                            ))}\r\n                            <br />\r\n                        </Fragment>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"text-center\"> در حال اتصال... </p>\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n\tconnect,\r\n\tcreateSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport { Attention, Notify, Sorry } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\n\r\nclass GamePlay extends Component {\r\n\t//**** game resets on device change. fix it */\r\n\tstate = {\r\n\t\tnormalCell: \"outline-dark\",\r\n\t\tplayers: [\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"blue\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"primary\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"darkred\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"danger\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t], // maybe use player actual user name and change this item to an object of objects?\r\n\t\tturn: 0, // start turn is decided by throwning dices\r\n\t\tdimension: 3,\r\n\t\ttable: null,\r\n\t\tmyTurn: undefined, // change this\r\n\t\tgameID: null,\r\n\t\tsocketGamePlay: undefined,\r\n\t\tplayerOnline: true,\r\n\t\ttimeRemaining: 0, //create a config\r\n\t\ttimerID: null,\r\n\t\tconnectionCheckTimerID: null,\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.cellButtons = [];\r\n\t}\r\n\r\n\tupdateGameScorebaord = () => {\r\n\t\tconst { myTurn, players } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\r\n\t\tthis.props.UpdateScoreboard({\r\n\t\t\tme: {\r\n\t\t\t\tindex: myTurn,\r\n\t\t\t\tshape: players[myTurn].shape,\r\n\t\t\t\tscore: players[myTurn].score,\r\n\t\t\t},\r\n\t\t\topp: {\r\n\t\t\t\tindex: oppTurn,\r\n\t\t\t\tshape: players[oppTurn].shape,\r\n\t\t\t\tscore: players[oppTurn].score,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tenableTimerForMyMove = (timeout = GameSetting.T3D.TurnTimeOut) => {\r\n\t\tthis.setState({ timeRemaining: timeout });\r\n\t\t//is it needed to declare timerID as state?\r\n\t\tclearInterval(this.state.timerID);\r\n\t\tconst timerID = setInterval(() => {\r\n\t\t\tconst { timeRemaining, timerID } = this.state;\r\n\t\t\tif (timeRemaining <= 0) {\r\n\t\t\t\tclearInterval(timerID);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({ timeRemaining: this.state.timeRemaining - 1 });\r\n\t\t}, 1000);\r\n\t\tthis.setState({ timerID });\r\n\t};\r\n\r\n\tupdatePlayerStates = ({ turn, xScore, oScore }) => {\r\n\t\tconst players = [...this.state.players];\r\n\t\tplayers[0].score = xScore;\r\n\t\tplayers[1].score = oScore;\r\n\t\tthis.setState({\r\n\t\t\tplayers,\r\n\t\t\tturn,\r\n\t\t});\r\n\t\tthis.updateGameScorebaord();\r\n\t};\r\n\r\n\tdisableAllTimers = () => {\r\n\t\tconst { connectionCheckTimerID, timerID } = this.state;\r\n\t\tclearTimeout(connectionCheckTimerID);\r\n\t\tclearTimeout(timerID); //move time out timer\r\n\t};\r\n\r\n\tsocketOnMessage = (response) => {\r\n\t\tconst { data } = response;\r\n\t\tconst { cmd, msg } = JSON.parse(data);\r\n\t\tif (cmd === \"START\") {\r\n\t\t\tconst startTime = toTimeShort(msg);\r\n\t\t\tAttention(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n\t\t} else if (cmd === \"GAME\") {\r\n\t\t\tconst { IDs, dimension, myTurn } = msg;\r\n\t\t\tthis.setState({ dimension, myTurn });\r\n\t\t\tconst opponentID = IDs[Number(!myTurn)];\r\n\t\t\tconst { opponent, LoadThisPlayer } = this.props;\r\n\t\t\tif (!opponent && opponentID)\r\n\t\t\t\t//if opponent is not null -> means this was called before and there's no need to run again\r\n\t\t\t\tLoadThisPlayer(opponentID);\r\n\t\t} else if (cmd === \"LOAD\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tconst { table } = msg;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttable,\r\n\t\t\t});\r\n\t\t\tthis.updateGameScorebaord();\r\n\t\t} else if (cmd === \"TIMER\") {\r\n\t\t\t//you can calculate request respone time -> then minimize it from tiem sent by server -> to gain acurate time\r\n\t\t\t//but its real neccessary, Math.floor on the server side does this nearly\r\n\t\t\t//but for accurate approach remember: remove Math.floor from server side\r\n\t\t\tconsole.log(\"time updated: \", msg);\r\n\t\t\tthis.setState({ timeRemaining: msg });\r\n\t\t\tclearTimeout(this.state.timerID); //clear move time out timers, though their disabled before, this is for assurance\r\n\t\t\tthis.enableTimerForMyMove(msg);\r\n\t\t} else if (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n\t\telse if (cmd === \"UPDATE\") {\r\n\t\t\tconst { room } = this.props;\r\n\t\t\tconst { dimension } = this.state;\r\n\t\t\tconst cellID = Number(msg.nextMove);\r\n\r\n\t\t\t//*************** */\r\n\t\t\t//is this needed to check the move in client? considering that complete check has been made in client\r\n\t\t\t//and consder that: checking move in client may cause some bugs\r\n\t\t\t//for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n\t\t\t//turn is not updated and this player can not make new moves to recieve server's table!!!\r\n\t\t\tthis.verifyAndApplyTheMove(\r\n\t\t\t\tthis.getCellCoordinates(cellID, dimension),\r\n\t\t\t\tthis.cellButtons[cellID]\r\n\t\t\t);\r\n\t\t\t//wrap it up this part of UPDATE and LOAD in a method\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\r\n\t\t\tthis.cellButtons[cellID].focus();\r\n\t\t\tthis.updateGameScorebaord();\r\n\r\n\t\t\t// now inform the server that the move is recieved\r\n\t\t\t//force connect it?\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"move_recieved\", room.name, true)\r\n\t\t\t);\r\n\t\t\t// server time out is set and now setInterval for this client to show how much time left\r\n\t\t\tthis.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"MOVE_MISSED\") {\r\n\t\t\tconst { myTurn } = this.state;\r\n\t\t\t//msg --> forced set turn\r\n\t\t\tthis.setState({ turn: msg });\r\n\t\t\tif (msg === myTurn) this.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"NOT_AUTHORIZED\") {\r\n\t\t\tSorry(\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\");\r\n\t\t\t// signOut();\r\n\t\t} else if (cmd === \"END\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tthis.endThisGame();\r\n\t\t\tthis.disableAllTimers();\r\n\t\t} else if (cmd === \"CLOSE\") {\r\n\t\t\tAttention(\r\n\t\t\t\t\"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n\t\t\t);\r\n\t\t\tthis.closeThisGame();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"wrong socket request\");\r\n\t\t}\r\n\t};\r\n\r\n\tforceConnectWS = async (nextJob) => {\r\n\t\tconst { room } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tlet socket = await connect(room.name, room.type);\r\n\t\t\tsocket.onmessage = this.socketOnMessage;\r\n\t\t\tthis.setState({ socketGamePlay: socket });\r\n\t\t\tif (nextJob) nextJob();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// **********************\r\n\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\tsetTimeout(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconsole.log(\"rconnecting from GamePlay\");\r\n\t\t\t\t\tthis.forceConnectWS(nextJob);\r\n\t\t\t\t},\r\n\t\t\t\tnextJob ? 1000 : 3000\r\n\t\t\t);\r\n\t\t\t//if there is a next job --> then player is sending a move or something important and\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in serimport { LoadPlayer } from './../../globals/redux/actions/player';\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in server for sending moves\r\n\t\t}\r\n\t};\r\n\r\n\tenableConnectionCheckTimer = () => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (window.navigator.onLine) {\r\n\t\t\t\tif (!this.state.playerOnline) {\r\n\t\t\t\t\t//player JUST became online\r\n\t\t\t\t\tthis.setState({ playerOnline: true }); // toggle online status\r\n\t\t\t\t\tthis.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n\t\t\t\t}\r\n\t\t\t} else if (this.state.playerOnline) {\r\n\t\t\t\t//player JUST became offline\r\n\t\t\t\tthis.setState({ playerOnline: false });\r\n\t\t\t}\r\n\t\t}, 2500); //2.5 sec is it ok?\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n\t\tconst { room } = this.props;\r\n\t\tconst { myTurn } = this.state;\r\n\t\tthis.setState({ dimension: room.type });\r\n\r\n\t\tthis.forceConnectWS(() => {\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"load\", room.name, null)\r\n\t\t\t);\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"mytimer\", room.name, myTurn)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tconnectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.disableAllTimers();\r\n\t}\r\n\tgetCellCoordinates = (cellID, dimen) => {\r\n\t\tconst cellFloor = Math.floor(cellID / (dimen * dimen));\r\n\t\tconst onFloorId = cellID % (dimen * dimen);\r\n\t\tconst cellRow = Math.floor(onFloorId / dimen);\r\n\t\tconst cellColumn = onFloorId % dimen;\r\n\t\t// just test a random id to see how above formula works!\r\n\t\treturn { floor: cellFloor, row: cellRow, column: cellColumn };\r\n\t};\r\n\tonEachCellClick = (event) => {\r\n\t\tconst { dimension, turn, timerID } = this.state;\r\n\t\tconst {opponent, room } = this.props;\r\n\t\tif (opponent) {\r\n\t\t\ttry {\r\n\t\t\t\tconst selectedCellButton = event.target;\r\n\r\n\t\t\t\t//this is just for when the connection is not automatically came back, so the user via clicking cells can initiate connection\r\n\t\t\t\tif (this.state.turn !== this.state.myTurn) {\r\n\t\t\t\t\t//is this needed really?\r\n\t\t\t\t\tthis.forceConnectWS(null);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst cell = this.getCellCoordinates(\r\n\t\t\t\t\tselectedCellButton.id,\r\n\t\t\t\t\tdimension\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n\t\t\t\t\t//send move to WebSocket Server\r\n\r\n\t\t\t\t\tthis.setState({ turn: (turn + 1) % 2 });\r\n\t\t\t\t\tthis.forceConnectWS(() => {\r\n\t\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\t\tcreateSocketRequest(\r\n\t\t\t\t\t\t\t\t\"move\",\r\n\t\t\t\t\t\t\t\troom.name,\r\n\t\t\t\t\t\t\t\tselectedCellButton.id\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclearInterval(timerID);\r\n\t\t\t\t\tthis.setState({ timeRemaining: 0 });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t//load again here?\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tverifyAndApplyTheMove = (cell, cellButton) => {\r\n\t\tconst { players, turn, normalCell } = this.state;\r\n\t\tlet tempTable = [...this.state.table];\r\n\t\tif (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n\t\t\ttempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n\t\t\tthis.setState({ table: tempTable });\r\n\t\t\t// cellButton.value = players[turn].shape;\r\n\t\t\t// cellButton.style.color = players[turn].color;\r\n\t\t\tcellButton.className = `game-table-cells btn btn-${players[turn].selected}`;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcellButton.className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t}, 1000);\r\n\t\t\t// time to inspect the new cell:\r\n\t\t\tthis.inspectAreaAroundTheCell(cell.floor, cell.row, cell.column);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tinspectAreaAroundTheCell = (floor, row, column) => {\r\n\t\t// inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n\t\t// is it needed to write a inspectAll method ?\r\n\t\tconst { players, table, dimension } = this.state;\r\n\t\tconst playerInTheCell = table[floor][row][column];\r\n\t\tlet rowCount = 0,\r\n\t\t\tcolumnCount = 0,\r\n\t\t\tfloorMainDiagCount = 0,\r\n\t\t\tfloorSideDiagCount = 0;\r\n\t\tlet tableMainDiagCount = 0,\r\n\t\t\ttableSideDiagCount = 0,\r\n\t\t\ttableAltitudeCount = 0;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tif (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n\t\t\tif (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n\t\t\tif (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n\t\t\tif (row === column) {\r\n\t\t\t\tif (table[floor][i][i] === playerInTheCell)\r\n\t\t\t\t\tfloorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n\t\t\t\tif (row === floor && table[i][i][i] === playerInTheCell)\r\n\t\t\t\t\ttableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (row + column + 1 === dimension) {\r\n\t\t\t\tif (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n\t\t\t\t\tfloorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n\t\t\t\tif (\r\n\t\t\t\t\trow === floor &&\r\n\t\t\t\t\ttable[i][i][dimension - i - 1] === playerInTheCell\r\n\t\t\t\t)\r\n\t\t\t\t\ttableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// now inspect wether a line has been made and take action for it\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\trowCount,\r\n\t\t\tfloor * dimension * dimension + row * dimension,\r\n\t\t\t1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tcolumnCount,\r\n\t\t\tfloor * dimension * dimension + column,\r\n\t\t\tdimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorMainDiagCount,\r\n\t\t\tfloor * dimension * dimension,\r\n\t\t\tdimension + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorSideDiagCount,\r\n\t\t\tfloor * dimension * dimension + (dimension - 1),\r\n\t\t\tdimension - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableMainDiagCount,\r\n\t\t\t0,\r\n\t\t\tdimension * (dimension + 1) + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableSideDiagCount,\r\n\t\t\tdimension - 1,\r\n\t\t\tdimension * (dimension + 1) - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableAltitudeCount,\r\n\t\t\trow * dimension + column,\r\n\t\t\tdimension * dimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t};\r\n\r\n\t// method below: checks each possible line(according to the condition that user gives it),\r\n\t// if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n\tconnectTheScoreLines = (count, firstCell, step, player, dimension) => {\r\n\t\tconst { normalCell } = this.state;\r\n\t\tif (count === dimension) {\r\n\t\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t].className = `game-table-cells btn btn-${player.lineColor}`;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t\t].className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t\t}, 1000 + i * 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tcloseThisGame = () => {\r\n\t\tthis.state.socketGamePlay.close();\r\n\t\tthis.setState({ socketGamePlay: null });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.CleanScoreboard();\r\n\t\t\tthis.props.ResetOpponent();\r\n\t\t\tthis.props.ExitRoom();\r\n\t\t\tthis.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tendThisGame = () => {\r\n\t\tconst { players, myTurn } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\t\t//NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n\t\tif (players[myTurn].score > players[oppTurn].score)\r\n\t\t\tNotify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n\t\telse if (players[myTurn].score === players[oppTurn].score)\r\n\t\t\tNotify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n\t\telse Notify(\"شما باختید\");\r\n\t\t//reset everything:\r\n\t\tthis.closeThisGame();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<TableDesign\r\n\t\t\t\tdimension={this.state.dimension}\r\n\t\t\t\tplayers={this.state.players}\r\n\t\t\t\ttable={this.state.table}\r\n\t\t\t\ttimeRemaining={this.state.timeRemaining}\r\n\t\t\t\tonEachCellClick={this.onEachCellClick}\r\n\t\t\t\tnormalCell={this.state.normalCell}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(GamePlay));\r\n\r\n//another way to check online / offline status :\r\n// initiateGameTimer = () => {\r\n//     setInterval(() => {\r\n//         if (window.navigator.onLine) {\r\n//             if (this.connectionLost) {\r\n//                 console.log(\"connected\");\r\n//                 this.connectionLost = false;\r\n//                 this.forceConnectWS(null);\r\n//             }\r\n//         } else {\r\n//             console.log(\"dissconnected\");\r\n//             this.connectionLost = true;\r\n//         }\r\n//         /*this.isOnline(\r\n//             () => {\r\n//                 if (this.connectionLost) {\r\n//                     console.log(\"connected\");\r\n//                     this.connectionLost = false;\r\n//                     this.forceConnectWS(null);\r\n//                 }\r\n//             },\r\n//             () => {\r\n//                 console.log(\"dissconnected\");\r\n//                 this.connectionLost = true;\r\n//             }\r\n//         );*/\r\n//     }, 1000);\r\n// };\r\n\r\n// /*    isOnline = (success, failure) => {\r\n//     var xhr = XMLHttpRequest\r\n//         ? new XMLHttpRequest()\r\n//         : new window.ActiveXObject(\"Microsoft.XMLHttp\");\r\n//     xhr.onload = function () {\r\n//         if (success instanceof Function) {\r\n//             success();\r\n//         }\r\n//     };\r\n//     xhr.onerror = function () {\r\n//         if (failure instanceof Function) {\r\n//             failure();\r\n//         }\r\n//     };\r\n//      xhr.open(\"GET\", \"https://t3dweb.herokuapp.com/users\", true);//edit this ******************************\r\n//      xhr.send();\r\n// }; */\r\n","import { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport { Attention, Notify } from \"../tools/notification\";\r\nimport {\r\n\tCloseRandomSearch,\r\n\tReapeatRandomSearch,\r\n} from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Routes } from \"../services/configs\";\r\nconst SingleGame = () => {\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [searching, setSearching] = useState(false);\r\n    const context = useContext(GlobalContext);\r\n\tconst dispatch = useDispatch();\r\n\tconst tools = useSelector((state) => state.tools);\r\n\r\n\tconst onStartGameClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (me) {\r\n\t\t\tdispatch(EnterRoom({ name: null, type: gameType }));\r\n\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\tsetSearching(true);\r\n\t\t}\r\n\t\t// random game:\r\n\t\telse {\r\n\t\t\tAttention(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n            context.goTo(Routes.Client.SignUp);\r\n\t\t}\r\n\t};\r\n\tconst { randomSearchRepeats } = tools;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (searching && !randomSearchRepeats) {\r\n\t\t\t//means no one has been found after a specific amount of time\r\n\t\t\tNotify(\"حریفی پیدا نشد ... لحظاتی دیگر مجددا تلاش کنید\");\r\n\t\t\tsetSearching(false);\r\n\t\t}\r\n\t}, [searching, randomSearchRepeats]);\r\n\t//on destroy\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tsetSearching(false); //make sure preloader turns off\r\n\t\t\tdispatch(CloseRandomSearch());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={searching} />\r\n\t\t\t<hr />\r\n\t\t\t<Form onSubmit={(event) => onStartGameClick(event)}>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={gameType === 3}\r\n\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={gameType === 4}\r\n\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={gameType === 5}\r\n\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Button type=\"submit\" className=\"mt-4\" block variant=\"success\">\r\n\t\t\t\t\t<i className=\"fa fa-search px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tجستجو\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default SingleGame;\r\n","import { Alert, Badge, Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst CompetitionSummary = ({ title, summary }) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" variant=\"info\">\r\n                    <Alert.Heading className=\"text-center\">\r\n                        <Badge variant=\"success p-2\" >\r\n                            {title}\r\n                        </Badge>\r\n                    </Alert.Heading>\r\n\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" pill=\"true\" variant=\"info\">\r\n                    <p>تعداد شرکت کنندگان : 00000000</p>\r\n                    <p>نکات دیگر</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col>\r\n                    <Button block variant=\"outline-success\">شرکت در مسابقه</Button>\r\n                </Col>\r\n                <Col>\r\n                <Button block variant=\"outline-secondary\">بازیکنان حاضر</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionSummary;\r\n","import { Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport \"./competitions.css\";\r\nimport CompetitionSummary from \"./CompetitionSummary\";\r\n\r\nconst CompetitionsMain = () => {\r\n    return (\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <hr />\r\n\r\n            <Row>\r\n                <Col className=\"competition-menu-body\" sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"first\">\r\n                                جام حذفی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"second\">\r\n                                لیگ امتیازی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"third\">\r\n                                بازی شرطی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"forth\">\r\n                                جدول رندوم\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"fifth\">\r\n                                و غیره\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Col>\r\n                {/* <div style={{borderLeft: '1px solid gray', height:'500px'}}></div> */}\r\n                <Col sm={9}>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"first\">\r\n                            <CompetitionSummary\r\n                                title=\"جام حذفی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"second\">\r\n                            <CompetitionSummary\r\n                                title=\"لیگ امتیازی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"third\">\r\n                            <CompetitionSummary\r\n                                title=\"بازی شرطی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"forth\">\r\n                            <CompetitionSummary\r\n                                title=\"جدول رندوم\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"fifth\">\r\n                            <CompetitionSummary\r\n                                title=\"و غیره\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Col>\r\n            </Row>\r\n        </Tab.Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionsMain;\r\n","import GamePlay from \"./gameplay/GamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleGame from \"./SingleGame\";\r\nimport { Tab, Tabs, Card, Fade } from \"react-bootstrap\";\r\nimport { Fragment } from \"react\";\r\nimport CompetitionsMain from \"./competitions/CompetitionsMain\";\r\n\r\nconst GameDeck = () => {\r\n    const room = useSelector((state) => state.room);\r\n\r\n    return (\r\n        <Fragment>\r\n            {room.name ? (\r\n                <GamePlay />\r\n            ) : (\r\n                <Card\r\n                    border=\"secondary\"\r\n                    bg=\"transparent\"\r\n                    className=\"game-deck-card\">\r\n                    <Card.Body>\r\n                        <Tabs\r\n                            defaultActiveKey=\"randomGame\"\r\n                            transition={false}\r\n                            variant=\"pills\"\r\n                            // transition={Fade}\r\n                            className=\"mb-3\">\r\n                            \r\n                            <Tab eventKey=\"randomGame\" title=\"بازی تصادفی\">\r\n                                <SingleGame friendlyGame={false} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"competitions\" title=\"مسابقات\">\r\n                                <CompetitionsMain />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport AllScores from \"./AllScores\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nclass ScoresTable extends Component {\r\n    state = {\r\n        liveScores: [],\r\n        finalScores: [],\r\n        showLiveOnes: false,\r\n        loading: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get all game results , live or final, handling promises\r\n        // client and server side for this Module seriously need to be edited\r\n        (async () => {\r\n            this.setState({ loading: true }); // use preloader here?\r\n            const { data, status } = await gameServices.getAllGames();\r\n            if (status === Configs.Status.Successful) return data.allGames;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                result = result.reverse();\r\n                this.setState({\r\n                    liveScores: result.filter((game) => game.isLive),\r\n                    finalScores: result.filter((game) => !game.isLive),\r\n                    loading: false,\r\n                });\r\n                //EDIT EDIT EDIT\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ finalScores: [], loading: false });\r\n            });\r\n    }\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({ showLiveOnes: true });\r\n    };\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({ showLiveOnes: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n       \r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n        // DESIGN : USE <Tabs> ???\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowLiveScores}>\r\n                            نتایج زنده\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                !showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowFinalScores}>\r\n                            نتایج نهایی\r\n                            <i\r\n                                className=\"fa fa-check-circle-o px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* this single column is to make mode select buttons and Allscores same width */}\r\n                        <AllScores\r\n                            scores={showLiveOnes ? liveScores : finalScores}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScoresTable;\r\n","import { Button, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3 form-inline\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\tclassName=\"mb-3 form-inline\"\r\n\t\t\t\t\t\t\t\tcontrolId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tرمز عبور\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">نام</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tنام خانوادگی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tتایید رمز عبور\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","const SinglePlayerCard = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SinglePlayerCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SinglePlayerCard from \"./SinglePlayerCard\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n            <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                <thead className=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">نام بازیکن</th>\r\n                        <th scope=\"col\">امتیاز</th>\r\n                        <th scope=\"col\">تعداد برد</th>\r\n                        <th scope=\"col\">تعداد باخت</th>\r\n                        <th scope=\"col\">تعداد تساوی</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <SinglePlayerCard\r\n                            key={player.userID}\r\n                            rowNumber={\r\n                                players.findIndex(\r\n                                    (p) => p.userID === player.userID\r\n                                ) + 1\r\n                            }\r\n                            name={player.fullname}\r\n                            points={player.records.points}\r\n                            wins={player.records.wins}\r\n                            loses={player.records.loses}\r\n                            draws={player.records.draws}></SinglePlayerCard>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from '../../services/configs';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nclass Rankings extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === Configs.Status.Successful) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort( //sort priorities: 1. more points 2. more wins 3. less loses\r\n                        (p1, p2) =>\r\n                            p2.records.points - p1.records.points ||\r\n                            p2.records.wins - p1.records.wins ||\r\n                            p1.records.loses - p2.records.loses\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <Row className=\"mx-auto mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <AllPlayers players={players} />\r\n                </Row>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rankings;\r\n","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/admin/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AcountManager from './../profile/edit/AcountManager';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTable from './../tables/scores/ScoresTable';\r\nimport SignUp from '../users/SignUp';\r\nimport Rankings from './../tables/rankings/Rankings';\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AcountManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<Rankings />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst { goTo } = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () =>\r\n\t\t\t\t\t\tgoTo(Routes.Client.ChatRoom)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID, gameInvitation.type));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tReloadRecords,\r\n\tReapeatRandomSearch,\r\n\tCloseRandomSearch,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst enableGlobalTimer = useCallback(() => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (socketGlobal) socketGlobal.send(pack(\"online\"));\r\n\t\t}, 300000); // every 5 MINUTES request number of online members to update the site\r\n\t}, [pack, socketGlobal]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"global timer enabled\");\r\n\t\tconst timerID = enableGlobalTimer();\r\n\t\treturn () => {\r\n\t\t\tconsole.log(\"global timer disabled\");\r\n\t\t\tclearInterval(timerID);\r\n\t\t};\r\n\t}, [enableGlobalTimer]);\r\n\r\n\tconst { signOut, redirectToGamePlay } = context;\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(() => {\r\n\t\tconsole.log(\"global websocket connect called -> new socket returned\");\r\n\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t);\r\n\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tsignOut();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\tif (msg) {\r\n\t\t\t\t\t\t\t\tdispatch(EnterRoom(msg));\r\n\t\t\t\t\t\t\t\tsocket.send(pack(\"online\"));\r\n\t\t\t\t\t\t\t\tdispatch(CloseRandomSearch());\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tif (!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\tif (answer) {\r\n\t\t\t\t\t\t\t\tOK(`${targetName} درخواست دوستی شما را پذیرفت`);\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t//reload for changing friendship status in the game => delay is set for restin assure that database is updated\r\n\t\t\t\t\t\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\tconst { askerID, askerName, gameType } = msg;\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tRecieveGameInvitation(\r\n\t\t\t\t\t\t\t\t\taskerID,\r\n\t\t\t\t\t\t\t\t\taskerName,\r\n\t\t\t\t\t\t\t\t\tgameType\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tredirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\tsocket.close();\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\tconsole.log(\"Reconnecting in  5 seconds\");\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t? await connect()\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t};\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(`global websocket errpr: ${err}`);\r\n\t\t\t}\r\n\t\t});\r\n\t}, [dispatch, signOut, redirectToGamePlay, pack, iamSignedIn, iamBusy]);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchRepeats,\r\n\t\tacceptedGame,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (randomSearchRepeats) {\r\n\t\t\tif (room.type) {\r\n\t\t\t\t//is it necessary?\r\n\t\t\t\t//completely making sure we're on right stage\r\n\t\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\t\tsocketGlobal.send(pack(\"find\", room.type));\r\n\t\t\t} else if (!room.name) {\r\n\t\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchRepeats, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedGame) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedGame.inviterID,\r\n\t\t\t\t\t\tgameType: acceptedGame.type,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget.targetID,\r\n\t\t\t\t\t\tgameType: friendlyGameTarget.type,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedGame,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\tif (answer)\r\n\t\t\t// if request accepted => reload friendship status after some seconds, delay is set to make sure friends are linked in database\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t}, 5000);\r\n\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { chatsReducer } from './chats';\r\nimport { friendsReducer } from './freinds';\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    chats: chatsReducer,\r\n    friends: friendsReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return action.payload;\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return action.payload;\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchRepeats: 0,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null,\r\n\t\tacceptedGame: null,\r\n\t\trecordReloadTrigger: false,\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const chatsReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"LOAD_CHATS\":\r\n\t\t\t// use a copy of?\r\n\t\t\treturn [...action.payload];\r\n\t\tcase \"RESET_CHATS\":\r\n\t\t\t//... what to do?\r\n\t\t\treturn [];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const friendsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_FRIENDS\":\r\n            return [...action.payload];\r\n        case \"RESET_FRIENDS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n//dispatch\r\n// store.subscribe(() => console.log(store.getState()));","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices: { SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}"],"sourceRoot":""}