{"version":3,"sources":["tables/Score.jsx","tables/AllScores.jsx","tables/ScoresTable.jsx","site-info/GameRules.jsx","site-info/ContactInfo.jsx","common/MainContext.jsx","thegame/GamePlay.jsx","services/httpService.js","services/userServices.js","common/LoadingBar.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","common/NavigationBar.jsx","sidebars/SignInSideBar.jsx","sidebars/NewsSideBar.jsx","common/SmartPhoneNavigationBar.jsx","sidebars/no-avatar.png","sidebars/PlayerInfoSideBar.jsx","common/MainLayout.jsx","tables/Player.jsx","tables/AllPlayers.jsx","tables/Ranking.jsx","users/ControlPanel.jsx","App.js","index.js"],"names":["Score","playerXName","playerOName","xScore","oScore","xBorderStyle","oBorderStyle","xBadgeColor","oBadgeColor","border","borderRadius","paddingLeft","paddingRight","className","style","id","AllScores","scores","map","score","ScoresTable","state","liveScores","finalScores","showLiveOnes","btnShowLiveScores","setState","btnShowFinalScores","this","onClick","Component","GameRules","ContactInfo","href","MainContext","createContext","player","GamePlay","rowMarginRatio","players","shape","color","lineColor","turn","tableDimension","table","yourTurn","connectToWS","wsConnection","WebSocket","config","webSocketRoot","onopen","onerror","error","console","log","onmessage","e","cellID","Number","data","cell","getCellCoordinates","verifyAndApplyTheMove","cellButtons","onclose","updateMarginParameters","divTableBlock","offsetWidth","onTableBlockResize","event","target","dimen","onFloorId","floor","Math","row","column","onEachCellClick","selectedCellButton","socketConnection","send","cellButton","tempTable","innerHTML","inspectTableAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","i","wholePoint","connectTheScoreLines","tempPlayers","toast","info","position","count","firstCell","step","dimension","drawGameTable","dimens","push","marginLeft","type","document","getElementsByClassName","getElementById","addEventListener","contextType","axios","defaults","headers","post","interceptors","response","use","STATUS","expectedErrors","status","closeOnClick","Promise","reject","http","get","put","delete","userServices","signUp","user","serverRoot","usersRoute","signupRoute","JSON","stringify","signIn","signinRoute","getPlayer","userId","getAllPlayers","saveUser","token","sessionStorage","setItem","readUserID","getItem","LoadingBar","loading","useLayoutEffect","body","overflowY","height","time","customLoading","ModalSignIn","showModal","studentID","password","onCloseClick","onShowClick","onSignInSubmitted","a","preventDefault","SUCCESSFULL","AUTHENTICATION_INVALID","userID","props","history","replace","onForgotPasswordClick","Button","variant","Modal","show","onHide","Header","closeButton","Body","Form","onSubmit","Group","Label","Control","placeholder","value","onChange","controlId","withRouter","SignUp","confirmPassword","firstname","lastname","email","checkConfirmPassword","setCustomValidity","onSignUpSubmit","trim","length","USER_CREATED","ALREADY_EXISTS","newUser","fullname","success","warn","pattern","onInput","onInvalid","required","NavigationBar","context","useContext","to","exact","activeClassName","float","SignInSideBar","NewsSideBar","SmartPhoneNavigationBar","PlayerInfoSideBar","src","noAvatar","alt","records","points","wins","loses","draws","pathname","location","deviceIsDesktop","useMediaQuery","query","deviceIsSmartPhone","deviceIsTablet","useState","setPlayer","then","result","catch","err","pageLeftSideBars","pageRightSideBar","Provider","children","Player","rowNumber","name","scope","AllPlayers","Card","width","findIndex","p","Ranking","sort","p1","p2","ControlPanel","onSignOutClick","clear","App","path","component","render"],"mappings":"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","file":"static/js/main.15a3d89c.chunk.js","sourcesContent":["import './scoresTable.css';\r\n\r\nconst Score = ({playerXName, playerOName, xScore, oScore}) => {\r\n    // format score text:\r\n    let xBorderStyle = null; \r\n    let oBorderStyle = null; // null means default text color\r\n    let xBadgeColor = null;\r\n    let oBadgeColor = null; // null means default badge color\r\n\r\n    if(xScore > oScore){ // x won\r\n        xBadgeColor = \"badge-success\";\r\n        xBorderStyle = {border:'5px solid green', borderRadius: '15px', paddingLeft: '1%',paddingRight: '1%'};\r\n        oBadgeColor = \"badge-danger\";\r\n        oBorderStyle = null; // null means default text color\r\n    }\r\n    else if(xScore === oScore){ //draw\r\n        xBadgeColor = \"badge-warning\";\r\n        oBadgeColor = \"badge-warning\";\r\n        xBorderStyle = null;\r\n        oBorderStyle = null; // null means default text color\r\n    }\r\n    else{ // o won\r\n        oBadgeColor = \"badge-success\";\r\n        oBorderStyle = {border:'5px solid green', borderRadius: '15px', paddingLeft: '1%',paddingRight: '1%'};\r\n        xBadgeColor = \"badge-danger\";\r\n        xBorderStyle = null; // null means default text color\r\n    }\r\n\r\n    // make this car 'bg-transparent' too?\r\n    return (  \r\n        <div className=\"card border-info mb-3 scoreCard\" >\r\n            <div className=\"card-header text-center border-info\">نوع بازی</div>\r\n            <div className=\"card-body\">\r\n                <p \r\n                    className=\"card-title text-center mx-auto\">\r\n                    <span style={xBorderStyle} >{playerXName}</span>\r\n                    <span className={`badge badge-pill ${xBadgeColor} scoreBadge ml-3 mr-3`}>{xScore < 10 ? `0${xScore}` : `${xScore}`}</span>\r\n                    \r\n                    <span className={`badge badge-pill ${oBadgeColor} scoreBadge ml-3 mr-3`}>{oScore < 10 ? `0${oScore}` : `${oScore}`}</span> \r\n                    <span style={oBorderStyle} >{playerOName}</span>\r\n                </p>\r\n                \r\n            </div>\r\n            <button id=\"btnReplayGame\" className=\"btn btn-outline-info btn-lg btn-block\">بازپخش بازی</button>\r\n            {/*1st method: pass key to the score.jsx and find the specific game to replay\r\n            2nd method: pass replay function from AllScores.jsx to Scores.jsx ? */}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Score;","import Score from \"./Score\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <div>\r\n            { scores.map(score => (\r\n                <Score key={score.id}\r\n                    playerXName={score.playerXName}\r\n                    playerOName={score.playerOName}\r\n                    xScore={score.xScore}\r\n                    oScore={score.oScore}\r\n                ></Score>\r\n            )) }\r\n        </div>\r\n     );\r\n};\r\n \r\nexport default AllScores;","import './scoresTable.css';\r\nimport { Component } from 'react';\r\nimport AllScores from './AllScores';\r\n\r\n\r\nclass ScoresTable extends Component {\r\n    state = { \r\n        liveScores: [ {id:0, playerXName: 'سهند علی زاده', playerOName: 'علی رضا قربانی', xScore: 10, oScore: 6},\r\n                         {id:1 ,playerXName: 'paya', playerOName: 'whatever', xScore: 15, oScore: 1},\r\n                         {id:2 ,playerXName: 'مجید نویدزاده', playerOName: 'علی یاری', xScore: 8, oScore: 8},\r\n                         {id:3 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14},\r\n                         {id:4 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14},\r\n                         {id:5 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14} ],\r\n        finalScores: [ {id:0, playerXName: 'نوید بختیاری', playerOName: 'محسن رضایی', xScore: 0, oScore: 6},\r\n                        {id:1 ,playerXName: 'پرهام کبیری', playerOName: 'سمانه سماوی', xScore: 2, oScore: 4},\r\n                        {id:2 ,playerXName: 'مجید داورخواه', playerOName: 'زهرا فنایی', xScore: 4, oScore: 12},\r\n                        {id:3 ,playerXName: 'امیر صفوی نسب', playerOName: 'paya', xScore: 3, oScore: 3} ],\r\n        showLiveOnes: true\r\n     };\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({showLiveOnes: true});\r\n\r\n    }\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({showLiveOnes: false});\r\n    }\r\n\r\n    render() {\r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let {liveScores, finalScores, showLiveOnes} = this.state;\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-6'>\r\n                       <button\r\n                        className={`scoresTypeSelectButton btn ${showLiveOnes ? `btn-outline-success` : `btn-outline-primary`}`}\r\n                        onClick={this.btnShowLiveScores}  >نتایج زنده</button>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <button \r\n                            className={`scoresTypeSelectButton btn ${showLiveOnes ? `btn-outline-primary` : `btn-outline-success`}`}\r\n                            onClick={this.btnShowFinalScores}  >نتایج نهایی</button> \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <AllScores scores={showLiveOnes? liveScores : finalScores} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ScoresTable;","import './info.css'\r\n\r\nconst GameRules = () => {\r\n    return ( \r\n        <div className=\"card border-warning mb-3 singleCard\" >\r\n            <div className=\"card-header text-center border-warning\">قوانین بازی</div>\r\n            <div className=\"card-body text-right\">\r\n                <p>سطر اول</p>\r\n                <p>سطر دوم</p>\r\n                <p>سطر سوم</p>\r\n                <p>سطر چهارم</p>\r\n                <p>سطر پنجم</p>\r\n                <p>سطر ششم</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameRules;","import './info.css'\r\n\r\nconst ContactInfo = () => {\r\n    return ( \r\n        <div className=\"card border-dark mb-3 singleCard\" >\r\n            <div className=\"card-header text-center border-dark\">اطلاعات تماس</div>\r\n            <div className=\"card-body text-center\">\r\n                <p>دانشگاه علم و صنعت ایران</p>\r\n                <p>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></p>\r\n                <p>Phone Number: 0000000000000</p>\r\n                <p>اطلاعات تماس استاد</p>\r\n                <p>instagram: ......</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ContactInfo;","import { createContext } from \"react\";\r\n// 1. write <MainContext.Provider> for MainContext in Database reader\r\n// 2. use consumer for state, in ScoresTable.jsx for gathering live and final match results\r\nconst MainContext = createContext({\r\n    player: null\r\n});\r\n\r\nexport default MainContext;","import { Component } from \"react\";\r\nimport \"./gamePlay.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport MainContext from \"../common/MainContext\";\r\nimport config from '../services/config.json';\r\n\r\nclass GamePlay extends Component {\r\n    static contextType = MainContext;\r\n    // **** noticed: gameplay needs a seperate layout\r\n    //**** game resets on device change. fix it */\r\n    // note: sidebars must change to ==> right-side: my-profile / left-side: opponent profile\r\n    state = {\r\n        rowMarginRatio: 0,\r\n        players: [\r\n            {\r\n                shape: \"X\",\r\n                color: \"cyan\",\r\n                lineColor: \"btn btn-primary\",\r\n                score: 0,\r\n            },\r\n            {\r\n                shape: \"O\",\r\n                color: \"darkred\",\r\n                lineColor: \"btn btn-danger\",\r\n                score: 0,\r\n            },\r\n        ], // maybe use player actual user name and change this item to an object of objects?\r\n        turn: 0, // start turn is decided by throwning dices\r\n        tableDimension: 4,\r\n        table: [],\r\n        yourTurn: -1\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.cellButtons = [];\r\n        this.socketConnection = this.connectToWS();\r\n    }\r\n\r\n    connectToWS = () => {\r\n        let wsConnection = new WebSocket(config.webSocketRoot);\r\n        wsConnection.onopen = () => {\r\n            // wsConnection.send(\"Client connected to WebSocket\");\r\n        };\r\n\r\n        wsConnection.onerror = (error) => {\r\n            console.log(`WebSocket error: ${error}`);\r\n        };\r\n\r\n        wsConnection.onmessage = (e) => {\r\n            const {yourTurn, tableDimension} = this.state;\r\n            // catch exceptions\r\n            if(yourTurn === -1){\r\n                this.setState({yourTurn: Number(e.data)});\r\n                return;\r\n            }\r\n            \r\n            const cellID = Number(e.data);\r\n            const cell = this.getCellCoordinates(cellID, tableDimension);\r\n            this.verifyAndApplyTheMove(cell, this.cellButtons[cellID]);\r\n        };\r\n\r\n        wsConnection.onclose = () => {\r\n            wsConnection = null;\r\n        };\r\n        return wsConnection;\r\n    };\r\n\r\n    updateMarginParameters = (divTableBlock) => {\r\n        //const {deviceIsDesktop, deviceIsTablet, deviceIsSmartPhone} = this.context;\r\n        const rowMarginDevideOn = 12.4; // deviceIsDesktop ? 22 : (deviceIsTablet ? 14 : 6);\r\n        this.setState({\r\n            rowMarginRatio: divTableBlock.offsetWidth / rowMarginDevideOn,\r\n        });\r\n        //*** for now this method remain still but if the main container is in fixed pixels width, the hell is this needed? */\r\n    };\r\n\r\n    onTableBlockResize = (event) => {\r\n        this.updateMarginParameters(event.target);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.cellButtons = document.getElementsByClassName(\"gameTableCells\"); // pay attension to searched className! may cause an error\r\n        // init this.state.table array\r\n        const { tableDimension } = this.state;\r\n        let dimens = [];\r\n        for (let i = 0; i < tableDimension; i++) dimens.push(i);\r\n        let tempTable = dimens.map((floor) =>\r\n            dimens.map((row) => dimens.map((column) => null))\r\n        );\r\n        this.setState({ table: tempTable });\r\n\r\n        let divTableBlock = document.getElementById(\"divTableBlock\");\r\n        this.updateMarginParameters(divTableBlock);\r\n        divTableBlock.addEventListener(\"resize\", (event) =>\r\n            this.onTableBlockResize(event)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"divTableBlock\" className=\"card border-dark gameBorderCard\">\r\n                {this.drawGameTable()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getCellCoordinates = (cellID, dimen) => {\r\n        const cellFloor = Math.floor(cellID / (dimen * dimen));\r\n        const onFloorId = cellID % (dimen * dimen);\r\n        const cellRow = Math.floor(onFloorId / dimen);\r\n        const cellColumn = onFloorId % dimen;\r\n        // just test a random id to see how above formula works!\r\n        return { floor: cellFloor, row: cellRow, column: cellColumn };\r\n    };\r\n    onEachCellClick = (event) => {\r\n        const { tableDimension } = this.state;\r\n        const selectedCellButton = event.target;\r\n\r\n        if(this.state.turn !== this.state.yourTurn) return;\r\n\r\n        const cell = this.getCellCoordinates(\r\n            selectedCellButton.id,\r\n            tableDimension\r\n        );\r\n\r\n        this.verifyAndApplyTheMove(cell, selectedCellButton);\r\n        //send move to WebSocket Server\r\n        this.socketConnection.send(\r\n            `${selectedCellButton.id}`\r\n        );\r\n    };\r\n\r\n    verifyAndApplyTheMove = (cell, cellButton) => {\r\n        const { players, turn } = this.state;\r\n        let tempTable = [...this.state.table];\r\n        if (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n            tempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n            cellButton.innerHTML = players[turn].shape;\r\n            cellButton.style.color = players[turn].color;\r\n\r\n            this.setState({\r\n                turn: (turn + 1) % 2,\r\n                table: tempTable,\r\n            });\r\n            // time to inspect the new cell:\r\n            this.inspectTableAroundTheCell(cell.floor, cell.row, cell.column);\r\n\r\n        }\r\n    };\r\n    inspectTableAroundTheCell = (floor, row, column) => {\r\n        // inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n        // is it needed to write a inspectAll method ?\r\n        const { players, table, tableDimension } = this.state;\r\n        const playerInTheCell = table[floor][row][column];\r\n        let rowCount = 0,\r\n            columnCount = 0,\r\n            floorMainDiagCount = 0,\r\n            floorSideDiagCount = 0;\r\n        let tableMainDiagCount = 0,\r\n            tableSideDiagCount = 0,\r\n            tableAltitudeCount = 0;\r\n        for (let i = 0; i < tableDimension; i++) {\r\n            if (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n            if (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n            if (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n            if (row === column) {\r\n                if (table[floor][i][i] === playerInTheCell)\r\n                    floorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n                if (row === floor && table[i][i][i] === playerInTheCell)\r\n                    tableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n            }\r\n            if (row + column + 1 === tableDimension) {\r\n                if (table[floor][i][tableDimension - i - 1] === playerInTheCell)\r\n                    floorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n                if (\r\n                    row === floor &&\r\n                    table[i][i][tableDimension - i - 1] === playerInTheCell\r\n                )\r\n                    tableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n            }\r\n        }\r\n\r\n        // now inspect wether a line has been made and take action for it\r\n        let wholePoint =\r\n            this.connectTheScoreLines(\r\n                rowCount,\r\n                floor * tableDimension * tableDimension + row * tableDimension,\r\n                1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                columnCount,\r\n                floor * tableDimension * tableDimension + column,\r\n                tableDimension,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                floorMainDiagCount,\r\n                floor * tableDimension * tableDimension,\r\n                tableDimension + 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                floorSideDiagCount,\r\n                floor * tableDimension * tableDimension + (tableDimension - 1),\r\n                tableDimension - 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                tableMainDiagCount,\r\n                0,\r\n                tableDimension * (tableDimension + 1) + 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                tableSideDiagCount,\r\n                tableDimension - 1,\r\n                tableDimension * (tableDimension + 1) - 1,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            ) +\r\n            this.connectTheScoreLines(\r\n                tableAltitudeCount,\r\n                row * tableDimension + column,\r\n                tableDimension * tableDimension,\r\n                players[playerInTheCell],\r\n                tableDimension\r\n            );\r\n        if (wholePoint) {\r\n            let tempPlayers = [...players];\r\n            tempPlayers[playerInTheCell].score += wholePoint;\r\n            this.setState({ players: tempPlayers });\r\n            //temp result show:\r\n\r\n            if (playerInTheCell === 0)\r\n                toast.info(\r\n                    players[playerInTheCell].shape +\r\n                        \" : \" +\r\n                        players[playerInTheCell].score,\r\n                    { position: \"top-right\" }\r\n                );\r\n            else\r\n                toast.error(\r\n                    players[playerInTheCell].shape +\r\n                        \" : \" +\r\n                        players[playerInTheCell].score,\r\n                    { position: \"bottom-left\" }\r\n                );\r\n        }\r\n    };\r\n\r\n    // method below: checks each possible line(according to the condition that user gives it),\r\n    // if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n    connectTheScoreLines = (count, firstCell, step, player, dimension) => {\r\n        if (count === dimension) {\r\n            for (let i = 0; i < dimension; i++) {\r\n                this.cellButtons[firstCell + i * step].className =\r\n                    \"gameTableCells \" + player.lineColor;\r\n            }\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    drawGameTable = () => {\r\n        // *****************note: when window size changes: table's selected cells are cleared\r\n        // use this.state.table to load again*****************\r\n        const { rowMarginRatio, tableDimension } = this.state;\r\n        // initialize rows columns floors\r\n\r\n        let dimens = [];\r\n        for (let i = 0; i < tableDimension; i++) dimens.push(i);\r\n\r\n        // drawing the table and setting id s and click events\r\n        return dimens.map((floor) => (\r\n            <div>\r\n                {dimens.map((row) => (\r\n                    <div style={{ marginLeft: `${row * rowMarginRatio}px` }}>\r\n                        {dimens.map((column) => (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"gameTableCells btn btn-outline-dark\"\r\n                                id={\r\n                                    floor * tableDimension * tableDimension +\r\n                                    row * tableDimension +\r\n                                    column\r\n                                }\r\n                                onClick={(event) => this.onEachCellClick(event)}\r\n                            >\r\n                                {\" \"}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n                <br />\r\n            </div>\r\n        ));\r\n    };\r\n}\r\n\r\nexport default GamePlay;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n    const STATUS = { AUTHENTICATION_INVALID: 401, INPUT_INVALID: 422 };\r\n    const expectedErrors =\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status < 500;\r\n\r\n    if (error.response.status === STATUS.AUTHENTICATION_INVALID) {\r\n        toast.error(\"شماره دانشجویی یا رمز عبور نادرست است\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    } else if (error.response.status === STATUS.INPUT_INVALID) {\r\n        toast.error(\"فرمت ورودی نادرست است\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    } else if (!expectedErrors) {\r\n        // console.log(error);\r\n        toast.error(\"مشکلی از سمت سرور رخ داده است.\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n};\r\n\r\nexport default http;","import http from \"./httpService\";\r\nimport config from \"./config.json\";\r\n\r\nconst userServices = {\r\n    signUp: (user) => {\r\n        return http.post(\r\n            `${config.serverRoot}/${config.usersRoute}/${config.signupRoute}`,\r\n            JSON.stringify(user)\r\n        );\r\n    },\r\n    signIn: (user) => {\r\n        return http.post(\r\n            `${config.serverRoot}/${config.usersRoute}/${config.signinRoute}`,\r\n            JSON.stringify(user)\r\n        );\r\n    },\r\n    getPlayer: (userId) => {\r\n        return http.get(`${config.serverRoot}/${config.usersRoute}/${userId}`);\r\n    },\r\n    getAllPlayers: () => {\r\n        return http.get(`${config.serverRoot}/${config.usersRoute}`);\r\n    },\r\n    saveUser: (id, token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(\"uid\", id); // localStorage or sessionStorage?\r\n        sessionStorage.setItem(\"token\", token);\r\n    },\r\n    readUserID: () => {\r\n        // consider local storage\r\n        return sessionStorage.getItem(\"uid\");\r\n    }\r\n};\r\n\r\nexport default userServices;","import { useLayoutEffect } from \"react\";\r\nimport { Planets } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading]);\r\n\r\n    return <>{loading ? <Planets time={0} customLoading={loading} /> : null}</>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { Component } from \"react\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\nclass ModalSignIn extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    state = {\r\n        showModal: false,\r\n        studentID: \"\",\r\n        password: \"\",\r\n        loading: false,\r\n    };\r\n\r\n    onCloseClick = () => this.setState({ showModal: false });\r\n    onShowClick = () => this.setState({ showModal: true });\r\n\r\n    onSignInSubmitted = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const STATUS = { SUCCESSFULL: 200, AUTHENTICATION_INVALID: 401 };\r\n        const { studentID, password } = this.state;\r\n        const user = { studentID, password: Number(password) };\r\n        try {\r\n            const { status, data } = await userServices.signIn(user);\r\n            if (status === STATUS.SUCCESSFULL) {\r\n                userServices.saveUser(data.userID, data.token);\r\n                this.props.history.replace(\"/\");\r\n            }\r\n        } catch (ex) {\r\n            // check nonserver errors\r\n            this.setState({ password: \"\" });\r\n            //toast.error('.ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.', {position: 'top-right', closeOnClick: true});\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    onForgotPasswordClick = () => {};\r\n\r\n    render() {\r\n        const { showModal, studentID, password, loading } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <LoadingBar loading={loading} />\r\n                <Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n                    ورود کاربران\r\n                </Button>\r\n\r\n                <Modal show={showModal} onHide={this.onCloseClick}>\r\n                    <Modal.Header closeButton></Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form\r\n                            className=\"m-4 text-right\"\r\n                            onSubmit={(event) => this.onSignInSubmitted(event)}\r\n                        >\r\n                            <Form.Group className=\"mb-3 form-inline\">\r\n                                <Form.Label className=\"w-25\">\r\n                                    شماره دانشجویی\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"w-75 text-left\"\r\n                                    placeholder=\"Student ID\"\r\n                                    value={studentID}\r\n                                    onChange={(e) =>\r\n                                        this.setState({\r\n                                            studentID: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                className=\"mb-3 form-inline\"\r\n                                controlId=\"formBasicPassword\"\r\n                            >\r\n                                <Form.Label className=\"w-25\">\r\n                                    رمز عبور\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    className=\"w-75 text-left\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        this.setState({\r\n                                            password: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                            <>\r\n                                <Button\r\n                                    className=\"w-50\"\r\n                                    type=\"submit\"\r\n                                    variant=\"outline-success\"\r\n                                >\r\n                                    ورود\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"w-50\"\r\n                                    variant=\"outline-info\"\r\n                                    onClick={this.onForgotPasswordClick}\r\n                                >\r\n                                    فراموشی رمز\r\n                                </Button>\r\n                            </>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass SignUp extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    // 2. first and last name must be persian text so make the direction correct and force persian chars\r\n    state = {\r\n        studentID: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        loading: false,\r\n    };\r\n\r\n    checkConfirmPassword = (event) => {\r\n        this.setState({ confirmPassword: event.target.value });\r\n        if (this.state.password !== event.target.value) {\r\n            event.target.setCustomValidity(\r\n                \"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n            );\r\n            //console.log(password, confirmPassword);\r\n        } else event.target.setCustomValidity(\"\");\r\n    };\r\n    onSignUpSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            studentID,\r\n            password,\r\n            confirmPassword,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n        } = this.state;\r\n        if (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n            toast.error(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true,\r\n            });\r\n            this.setState({\r\n                firstname: firstname.trim(),\r\n                lastname: lastname.trim(),\r\n            });\r\n            return;\r\n        }\r\n        const STATUS = { USER_CREATED: 201, ALREADY_EXISTS: 403 };\r\n        if (password === confirmPassword) {\r\n            try {\r\n                this.setState({ loading: true });\r\n                const newUser = {\r\n                    studentID: Number(studentID),\r\n                    password,\r\n                    email,\r\n                    fullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n                };\r\n\r\n                const { status, data } = await userServices.signUp(newUser);\r\n\r\n                if (status === STATUS.USER_CREATED) {\r\n                    //console.log(data);\r\n                    toast.success(`ثبت نام با موفقیت انجام شد`, {\r\n                        position: \"top-right\",\r\n                        closeOnClick: true,\r\n                    });\r\n                    userServices.saveUser(data.userID, data.token);\r\n                    this.props.history.replace(\"/\");\r\n                    // this.props.history.replace('/signIn')\r\n                    // ******* change server to return user token and auto sign in\r\n                }\r\n            } catch (ex) {\r\n                // console.log(ex);\r\n                this.setState({ loading: false });\r\n                if (ex.response.status === STATUS.ALREADY_EXISTS) {\r\n                    toast.error(\r\n                        \"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                    toast.warn(\r\n                        \"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                } else {\r\n                    toast.error(\r\n                        \"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            toast.error(\"رمز عبورها مطابقت ندارند\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true,\r\n            });\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            studentID,\r\n            password,\r\n            confirmPassword,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            loading,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"card border-success mb-3 signUpCard\">\r\n                <LoadingBar loading={loading} />\r\n                <div className=\"card-header bg-transparent text-center border-success\">\r\n                    فرم ثبت نام\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">نام</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                pattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"First Name\"\r\n                                value={firstname}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        firstname: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">نام خانوادگی</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                pattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                    )\r\n                                }\r\n                                placeholder=\"Last Name\"\r\n                                value={lastname}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        lastname: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">شماره دانشجویی</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                pattern=\"[0-9]{8}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Student ID\"\r\n                                value={studentID}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        studentID: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">ایمیل</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                pattern=\".{6,}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"E-mail\"\r\n                                value={email}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({ email: e.target.value })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">رمز عبور</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                pattern=\".{6,15}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        password: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">تایید رمز عبور</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={confirmPassword}\r\n                                required=\"required\"\r\n                                onChange={(event) =>\r\n                                    this.checkConfirmPassword(event)\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success btn-block mt-4\"\r\n                        >\r\n                            ثبت نام\r\n                        </button>\r\n                    </form>\r\n                    <p className=\"forgot-password text-right mt-5\">\r\n                        اگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !{\" \"}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MainContext from \"./MainContext\";\r\n\r\nconst NavigationBar = () => {\r\n  const context = useContext(MainContext);\r\n  return (\r\n    // 2. link items theme: make theme better\r\n\r\n    <nav className=\"navbar navbar-expand-lg nav-pills navbar-light bg-light text-right\">\r\n      <div className=\"container text-right\">\r\n        {/* <NavLink className=\"navbar-brand\" to=\"#\">نام بازیکن</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"expand\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button> */}\r\n        <div className=\"navbar-expand\" id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/\"\r\n                exact\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                صفحه اصلی\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/theGame\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                بازی ها\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/ranking\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                رنکینگ\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/gameRules\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                قوانین\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/contactInfo\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                تماس با ما\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          {/* how to float search bar to right? */}\r\n        </div>\r\n      </div>\r\n      {context.player ? (\r\n        <NavLink\r\n          style={{ float: \"left\" }}\r\n          className=\"navItems nav-link btn btn-outline-success btn-sm\"\r\n          to=\"/controlPanel\"\r\n        >\r\n          کنترل پنل\r\n        </NavLink>\r\n      ) : (\r\n        <NavLink\r\n          style={{ float: \"left\" }}\r\n          className=\"navItems nav-link btn btn-outline-success btn-sm\"\r\n          to=\"/signUp\"\r\n        >\r\n          ثبت نام\r\n        </NavLink>\r\n      )}\r\n\r\n      {/* <form class=\"searchForm form-inline\">\r\n                    <input class=\" form-control mr-sm-2 bg-dark\" type=\"search\" placeholder=\"دنبال چی می گردی؟\" aria-label=\"Search\" />\r\n                    <button class=\" btn btn-outline-warning fa fa-search\" type=\"submit\"></button>\r\n            </form> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass SignInSideBar extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    state = {\r\n        studentID: \"\",\r\n        password: \"\",\r\n        loading: false,\r\n    };\r\n    \r\n\r\n    onSignInSubmitted = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const STATUS = { SUCCESSFULL: 200 };\r\n        const { studentID, password } = this.state;\r\n        const user = { studentID, password: Number(password) };\r\n        try {\r\n            const { status, data } = await userServices.signIn(user);\r\n            if (status === STATUS.SUCCESSFULL) {\r\n                userServices.saveUser(data.userID, data.token);\r\n                this.props.history.replace(\"/\");\r\n            }\r\n        } catch (ex) {\r\n            // check nonserver errors\r\n            // console.log(ex);\r\n            this.setState({ password: \"\" });\r\n            //toast.error('.ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.', {position: 'top-left', closeOnClick: true});\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n        const { studentID, password, loading } = this.state;\r\n        return (\r\n            <div className=\"card signInSidebar border-primary mb-3\">\r\n                <div className=\"card-header text-center text-primary border-primary\">\r\n                    ورود کاربران\r\n                </div>\r\n                <LoadingBar loading={loading} />\r\n                <div className=\"card-body text-primary\">\r\n                    <form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"signInSidebarTextBox form-control text-primary\"\r\n                            placeholder=\"Student ID\"\r\n                            value={studentID}\r\n                            onChange={(e) =>\r\n                                this.setState({ studentID: e.target.value })\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"signInSidebarTextBox form-control text-primary\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) =>\r\n                                this.setState({ password: e.target.value })\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div className=\"card-footer bg-transparent border-primary\">\r\n                            <button\r\n                                id=\"btnSideBarSignIn\"\r\n                                type=\"submit\"\r\n                                className=\"btn btn-outline-success btn-lg\"\r\n                            >\r\n                                ورود\r\n                            </button>\r\n                            <button\r\n                                id=\"btnSideBarPasswordRecovery\"\r\n                                className=\"btn btn-outline-info btn-lg\"\r\n                            >\r\n                                بازیابی پسورد\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","\r\n\r\nconst NewsSideBar = () => {\r\n    return ( \r\n        <div className=\"card newsSidebar border-success  mb-3\">\r\n            <div className=\"card-header text-center text-success border-success\">اطلاعیه</div>\r\n            <div className=\"card-body text-right\">\r\n                <p>متن خبر 1</p>\r\n                <p>متن خبر 2</p>\r\n                <p>متن خبر 3</p>\r\n                <p>متن خبر 4</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NewsSideBar;","import { NavLink } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport MainContext from \"./MainContext\";\r\n\r\nconst SmartPhoneNavigationBar = () => {\r\n  const context = useContext(MainContext);\r\n\r\n  return (\r\n    // 2. link items theme: make theme better\r\n\r\n    <nav className=\"navbar navbar-expand-lg nav-pills navbar-light bg-light text-right\">\r\n      <div className=\"container text-right\">\r\n        <div className=\"navbar-expand w-100\" id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <div className=\"row\">\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/\"\r\n                  exact\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  صفحه اصلی\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/theGame\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  بازی ها\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/ranking\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  رنکینگ\r\n                </NavLink>\r\n              </li>\r\n            </div>\r\n          </ul>\r\n          <hr />\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <div className=\"row\">\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/gameRules\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  قوانین\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/contactInfo\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  تماس با ما\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                {context.player ? (\r\n                  <NavLink\r\n                    className=\"navItems nav-link btn btn-outline-success btn-block mt-1 mr-lg-5\"\r\n                    to=\"/controlPanel\"\r\n                  >\r\n                    کنترل پنل\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink\r\n                    className=\"navItems nav-link btn btn-outline-success btn-block mt-1 mr-lg-5\"\r\n                    to=\"/signUp\"\r\n                  >\r\n                    ثبت نام\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SmartPhoneNavigationBar;\r\n","export default __webpack_public_path__ + \"static/media/no-avatar.5e7c913e.png\";","import { Component } from \"react\";\r\nimport MainContext from \"../common/MainContext\";\r\nimport noAvatar from \"./no-avatar.png\"; // definitely must be changed bro!\r\n\r\nclass PlayerInfoSideBar extends Component {\r\n  static contextType = MainContext;\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    const { player } = this.context;\r\n    return (\r\n      <div className=\"card playerInfoSideBar border-info mb-3\">\r\n        <div className=\"card-header text-center text-info border-info\">\r\n          {player.fullname}\r\n        </div>\r\n        <img\r\n          className=\"card-img-top playerAvatar\"\r\n          src={noAvatar}\r\n          alt=\"No Images Found\"\r\n        />\r\n        <hr />\r\n        <div className=\"card-body\">\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">امتیاز بازیکن</p>\r\n                <p className=\"col-6 text-left\">{player.records.points}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد برد</p>\r\n                <p className=\"col-6 text-left\">{player.records.wins}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد باخت</p>\r\n                <p className=\"col-6 text-left\">{player.records.loses}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد تساوی</p>\r\n                <p className=\"col-6 text-left\">{player.records.draws}</p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerInfoSideBar;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport SignInSideBar from \"./../sidebars/SignInSideBar\";\r\nimport NewsSideBar from \"./../sidebars/NewsSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport SmartPhoneNavigationBar from \"./SmartPhoneNavigationBar\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport userServices from \"../services/userServices\";\r\nimport MainContext from \"./MainContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainLayout = (props) => {\r\n    const { pathname } = props.location;\r\n    const deviceIsDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n    const deviceIsSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n    const deviceIsTablet =\r\n        !deviceIsDesktop && !deviceIsSmartPhone ? true : false;\r\n    const [player, setPlayer] = useState(\"\");\r\n    // this method is for temporary use and for finding items that cause horizontal overflow causing horizontal scrollbar\r\n    const findHorizontalOverflow = () => {\r\n        let docWidth = document.documentElement.offsetWidth;\r\n        [].forEach.call(document.querySelectorAll(\"*\"), function (el) {\r\n            if (el.offsetWidth > docWidth) {\r\n                console.log(\"here is the sabotage: \", el);\r\n            }\r\n        });\r\n    };\r\n\r\n    // use an anonymous function to check wether a reliable sign in has been made or not\r\n    // using await causes all 'return' to return a promise. so it must be handles by .then .catch\r\n    (async () => {\r\n        const STATUS = { SUCCESSFULL: 200 };\r\n        const userID = userServices.readUserID();\r\n        if (userID) {\r\n            const { data, status } = await userServices.getPlayer(userID);\r\n            if (status === STATUS.SUCCESSFULL) return data.player;\r\n        }\r\n        return null;\r\n    })()\r\n        .then((result) => {\r\n            setPlayer(result);\r\n        })\r\n        .catch((err) => {\r\n            // handle error\r\n            setPlayer(null);\r\n        });\r\n\r\n    let pageLeftSideBars = <NewsSideBar />;\r\n    let pageRightSideBar = player ? <PlayerInfoSideBar /> : <SignInSideBar />; // in case login hassnt been made\r\n\r\n    if (pathname === \"/signUp\") {\r\n        // || pathname === '/competitions'){ // this condition MUST change later\r\n        pageLeftSideBars = null; //change later\r\n        pageRightSideBar = null; // change then\r\n    }\r\n\r\n    if (pathname === \"/theGame\") {\r\n        // left sidebar must be opponents playerInfo\r\n\r\n        if (deviceIsSmartPhone) { //this is temprory\r\n          // find a way for showing result in smartphone, without causing vertical scroll\r\n            pageLeftSideBars = null; //change later\r\n            pageRightSideBar = null; // change then\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MainContext.Provider value={{ player }}>\r\n            <ToastContainer />\r\n            {deviceIsDesktop || deviceIsTablet ? (\r\n                <NavigationBar />\r\n            ) : (\r\n                <SmartPhoneNavigationBar />\r\n            )}\r\n            {deviceIsDesktop && (\r\n                <div className=\"row mx-auto w-100\">\r\n                    <div className=\"col-3 p-3\">{pageRightSideBar}</div>\r\n                    <div\r\n                        className={\r\n                            pageLeftSideBars !== null ? \"col-6\" : \"col-12\"\r\n                        }\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                    <div className=\"col-3\">{pageLeftSideBars}</div>\r\n                </div>\r\n            )}\r\n            {deviceIsTablet && (\r\n                <div className=\"row mx-auto w-100\">\r\n                    <div\r\n                        className={\r\n                            pageLeftSideBars !== null ? \"col-8\" : \"col-12\"\r\n                        }\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                    <div className=\"col-4\">{pageLeftSideBars}</div>\r\n                </div>\r\n            )}\r\n            {deviceIsSmartPhone && (\r\n                <div className=\"container mx-auto w-100\">\r\n                    {player ? (\r\n                        <div className=\"row w-100 mx-auto\">\r\n                            {pageRightSideBar}\r\n                        </div>\r\n                    ) : null}\r\n                    <div className=\"row w-100 mx-auto\">{pageLeftSideBars}</div>\r\n                    <div className=\"row w-100 mx-auto\">{props.children}</div>\r\n                </div>\r\n            )}\r\n            {/* {findHorizontalOverflow()} */}\r\n        </MainContext.Provider>\r\n    );\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","const Player = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","import { Card } from \"react-bootstrap\";\r\nimport Player from \"./Player\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        \r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"15px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n                <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                    <thead className=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">نام بازیکن</th>\r\n                            <th scope=\"col\">امتیاز</th>\r\n                            <th scope=\"col\">تعداد برد</th>\r\n                            <th scope=\"col\">تعداد باخت</th>\r\n                            <th scope=\"col\">تعداد تساوی</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {players.map((player) => (\r\n                            <Player\r\n                                key={player.userID}\r\n                                rowNumber={players.findIndex(p => p.userID === player.userID) + 1}\r\n                                name={player.fullname}\r\n                                points={player.records.points}\r\n                                wins={player.records.wins}\r\n                                loses={player.records.loses}\r\n                                draws={player.records.draws}\r\n                            ></Player>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"./../services/userServices\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass Ranking extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const STATUS = { SUCCESSFULL: 200 };\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === STATUS.SUCCESSFULL) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort(\r\n                        (p1, p2) => p2.records.points - p1.records.points\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <div className=\"row mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <div className=\"col-12\">\r\n                    <AllPlayers players={players} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ranking;\r\n","import { Component } from \"react\";\r\n\r\nclass ControlPanel extends Component {\r\n    onSignOutClick = () => {\r\n        sessionStorage.clear();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card border-success mb-3 signUpCard\">\r\n                <div className=\"card-header bg-transparent text-center border-success\">\r\n                    کنترل پنل\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger btn-block mt-4\"\r\n                        onClick={this.onSignOutClick} //temprory\r\n                    >\r\n                        خروج از حساب کاربری\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { Component } from \"react\";\r\nimport ScoresTable from \"./tables/ScoresTable\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport GameRules from \"./site-info/GameRules\";\r\nimport ContactInfo from \"./site-info/ContactInfo\";\r\nimport GamePlay from \"./thegame/GamePlay\";\r\nimport SignUp from \"./users/SignUp\";\r\nimport MainLayout from \"./common/MainLayout\";\r\nimport Ranking from \"./tables/Ranking\";\r\nimport ControlPanel from './users/ControlPanel';\r\n\r\nclass App extends Component {\r\n    // 1. use uuid to produce ids\r\n    // state = {  }\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <Switch>\r\n                    <Route path=\"/signUp\" component={SignUp} />\r\n                    <Route path=\"/theGame\" component={GamePlay} />\r\n                    <Route path=\"/ranking\" component={Ranking} />\r\n                    <Route path=\"/gameRules\" component={GameRules} />\r\n                    <Route path=\"/contactInfo\" component={ContactInfo} />\r\n                    <Route path=\"/\" exact component={ScoresTable} />\r\n                    <Route path=\"/controlPanel\" exact component={ControlPanel} />\r\n                </Switch>\r\n            </MainLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import {render} from 'react-dom';\r\nimport App from './App.js';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nrender(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter> , document.getElementById('root'));"],"sourceRoot":""}