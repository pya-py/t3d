{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","services/configs/gamesetting.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","games/gameplay/GameLogics.js","globals/redux/actions/game.js","services/http/gameServices.js","globals/redux/actions/league.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","globals/redux/actions/interactions.js","commons/LoadingBar.jsx","layouts/ProfilePanelLayout.jsx","commons/NoItems.jsx","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/ScoresTable.jsx","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/admin/NoticeManager.jsx","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/edit/Credentials.jsx","profile/edit/PasswordChange.jsx","profile/edit/ImagePicker.jsx","profile/edit/AvatarChange.jsx","profile/edit/AcountManager.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/MultiGamePlay.jsx","games/RandomGame.jsx","leagues/ModalContesters.jsx","leagues/SingleLeagueCard.jsx","leagues/Leagues.jsx","games/gameplay/ArtificialIntelligence.js","games/SinglePlayer.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTableContainer.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SingleRankCard.jsx","tables/rankings/Rankings.jsx","tables/rankings/RankingsContainer.jsx","profile/admin/EditStudent.jsx","profile/admin/StudentsManagement.jsx","profile/admin/LeaguesManager.jsx","leagues/matches/SingleMatchCard.jsx","leagues/matches/MatchesTable.jsx","leagues/LeagueHome.jsx","layouts/LeagueLayout.jsx","games/gameplay/SingleGamePlay.jsx","commons/MainRouter.jsx","globals/redux/actions/index.js","tools/NotificationCenter.jsx","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/interactions.js","globals/redux/reducers/league.js","globals/redux/reducers/game.js","globals/redux/store/index.js","index.js","services/configs/index.js"],"names":["Profile","Admin","module","exports","Root","SignUp","SignIn","GameDeck","SingleGameplay","Rankings","GameGuide","ContactUs","League","ChatRoom","MyGamesAndFriends","Notices","StudentManagement","Documents","LeaguesManager","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","MyAvatar","PasswordChange","Friends","Records","Administrators","Games","Mine","Leagues","NewLeague","LeaguesList","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","enter_league","leagueID","reset","clear","TOKEN","getItem","LEAGUE","RandomSearchRepeatLimit","GlobalContext","createContext","device","signOut","goTo","redirectToGamePlay","cancelGame","openLeaguePage","NavigationBar","me","useSelector","state","context","useContext","Navbar","style","borderBottom","bg","className","Container","Nav","activeClassName","to","Routes","Client","aria-hidden","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAvatar","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","uploadAvatar","password","avatar","formData","FormData","append","getMyFriends","isMyFriend","targetID","ResetOpponent","dispatch","a","ResetMyPlayer","LoadThisPlayer","data","player","payload","LoadMyPlayer","T3DLogic","TurnTimeOut","dimension","indexes","i","push","empties","table","map","myTurn","Math","floor","random","dim","row","column","cellID","dimen","onFloorId","onClose","players","oppTurn","Number","score","connectScoreLines","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","tableRowFloorMainDiagCount","tableRowFloorSideDiagCount","tableColumnFloorMainDiagCount","tableColumnFloorSideDiagCount","EnterRoom","name","scoreless","getState","rivalID","split","filter","playerID","toString","CloseOngoingGame","RegisterSinglePlayer","difficulty","multy","gameServices","getAllGames","getMyGames","loadLeague","listLeagues","joinLeague","teamID","createLeague","Mode","title","capacity","prize","EnterLeague","league","matches","ongoing","length","match","playerXIndex","contesters","findIndex","cont","playerOIndex","forEach","index","progress","schedule","ExitLeague","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","mode","Provider","value","room","destination","setTimeout","ProfilePanel","Row","Configs","aria-current","isAdmin","Button","variant","CollapsedPanel","border","borderRadius","AutoSignIn","opponent","storageToken","chatServices","getOurChat","friendID","getMyInteractions","UpdateMyChatList","sent","recieved","myinteractions","interactions","find","interact","with","messages","friend","date","Date","LoadingBar","loading","whichOne","setWhichOne","useLayoutEffect","document","body","overflowY","height","selectedLoader","time","customLoading","ProfilePanelLayout","setLoading","myInteractions","Array","ownerOf","msg","owner","Error","Col","lg","sm","NoItems","Card","Body","Text","objectify","DateObject","calendar","persian","locale","persian_fa","toHijri","format","toTimeShort","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Footer","block","disabled","size","ScoresTable","scores","gameID","Record","small","ListGroup","Item","Badge","pill","ReapeatRandomSearch","tools","randomSearchRepeats","GameSetting","CloseRandomSearch","EndFriendRequest","friendRequestTarget","EndFriendlyInvitation","friendlyGameTarget","RecieveGameInvitation","ID","gameType","gameInvitation","ReloadRecords","recordReloadTrigger","reloadTrigger","FriendRecords","person","thisIsMe","setGameType","setAvatar","records","md","Image","src","alt","roundedCircle","points","wins","draws","loses","xs","InviteToFriendlyGame","InputGroup","Prepend","Radio","onChange","defaultChecked","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","setFriends","friendsCount","setFriendsCount","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","area-hidden","Content","Pane","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","SendMessageTo","RecieveMessageFrom","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","chat","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","current","scrollIntoView","behavior","top","offsetTop","ref","onSubmit","event","preventDefault","composeMessage","sort","i1","i2","getTime","setFullname","studentID","setStudentID","email","setEmail","setPassword","pageUpdateTrigger","triggerPageUpdate","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","checkConfirmPassword","ImagePicker","selector","preview","setPreview","Group","rounded","imageFile","oFReader","FileReader","readAsDataURL","onload","oFREvent","result","updatePreview","files","accept","htmlFor","AvatarChange","myAvatar","selectMyAvatar","upload","AcountManager","TABS","Tabs","SignInSideBar","onSignInSubmitted","setState","props","replace","this","autoComplete","sitekey","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","piece","setPiece","opp","isFriend","onFriendRequestClick","innerHTML","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","resolve","server","WebSocket","onopen","send","onerror","close","onclose","withReduxDashboard","component","UpdateScoreboard","details","RegisterMultiplayer","BriefScoreboard","timeRemaining","turn","timeStamp","setTimeStamp","aThird","textAlign","TableDesign","onEachCellClick","dimens","cell","setCell","cellWidths","cellHeights","deviceWidth","window","innerWidth","deviceHeight","innerHeight","width","margin","h","w","direction","marginLeft","MultiGamePlay","lineColor","socketGamePlay","playerOnline","deadlineID","connectionCheckTimerID","updateGameScorebaord","synchronizeDeadline","t0","remaining","clearInterval","setInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","surrender","startTime","IDs","opponentID","newMove","cellIndex","verifyAndApplyTheMove","cellButtons","focus","madeBy","onCloseGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","navigator","onLine","loadCurrentGame","selectedCellButton","cellButton","tempTable","opacity","firstCell","step","getElementsByClassName","RandomGame","setDimension","isScoreless","setScoreless","searching","setSearching","onStartGameClick","padding","checked","ModalContesters","show","setShow","Modal","onHide","closeButton","contester","SingleLeagueCard","reload","showMore","toggleShow","ready","setReady","join","started","Title","leagues","setLeagues","triggerReload","ArtificialIntelligence","level","LEVELS","Ordinary","dimenstion","update","moves","unshift","by","weigh","playerInIntersection","sign","weights","heaviest","maxWeight","maxPossibleWeight","pow","f","r","c","weight","abs","reaction","Noob","strike","Pro","movesToCheck","slice","move","count","empty","defend","attack","test","SinglePlayer","setDifficulty","onStartSinglePlayerClick","continueGame","setContinueGame","setSurrender","transition","href","ScoresTableContainer","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","allGames","then","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","backdrop","controlId","contextType","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SingleRankCard","rowNumber","scope","rankByProgress","p","RankingsContainer","tempPlayers","p1","p2","EditStudent","preventDefaults","StudentsManagement","lookFor","setLookFor","setMode","setCapacity","setPrize","create","Modes","SingleMatchCard","playerX","playerO","setCardOnClick","cardColor","setCardColor","MatchesTable","LeagueHome","LeagueLayout","SingleGamePlay","ai","rescheduleDeadline","react","nextMove","MainRouter","path","UpdateStatistics","pushed","NewMsg","inviterID","acceptedGame","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","reconnectingTimerID","setReconnectingTimerID","iamSignedIn","iamBusy","nextReconnectingTimeout","command","found","stats","answer","targetName","askerID","askerName","timerID","respondToFriendshipRequest","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById","ClientRoutes","require","ServerRoutes"],"mappings":"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","file":"static/js/main.275f9e84.chunk.js","sourcesContent":["//client routes\r\n// Partial Routes\r\nconst Profile = \"/profile\",\r\n    Admin = \"/admin\",\r\n    ChatRoom = \"chatroom\",\r\n    MyGamesAndFriends = \"games\",\r\n    Notices = \"notices\",\r\n    StManagement = \"students\",\r\n    Documents = \"documents\",\r\n    Leagues = \"leagues\";\r\n\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/register\",\r\n    SignIn: \"/login\",\r\n    GameDeck: \"/gamedeck\",\r\n    SingleGameplay: \"/single\",\r\n    Rankings: \"/rankings\",\r\n    GameGuide: \"/guide\",\r\n    ContactUs: \"/contactme\",\r\n    League: \"/league\",\r\n    Profile,\r\n    Admin,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Admin}/${Notices}`,\r\n    StudentManagement: `${Admin}/${StManagement}`,\r\n    Documents: `${Admin}/${Documents}`,\r\n    LeaguesManager: `${Admin}/${Leagues}`\r\n};","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    MyAvatar: \"avatar\",\r\n    PasswordChange: \"password\",\r\n    Friends: \"friends\",\r\n    Records: \"records\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Leagues: \"leagues\",\r\n    NewLeague: \"new\",\r\n    LeaguesList: \"list\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: \"single\",\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= : bad request\r\n        error.response.status <= 500 // <= 500: internal server error\r\n        );\r\n        // other errors are not expected\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    MethodNotAllowed: 405,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};\r\n","//browser storage keywords\r\nconst KeyToken = \"ptk\", KeyLeague = \"lgk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    enter_league: (leagueID) => {\r\n        sessionStorage.setItem(KeyLeague, leagueID);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n    LEAGUE: () => sessionStorage.getItem(KeyLeague)\r\n};\r\n","module.exports = {\r\n    RandomSearchRepeatLimit: 5,\r\n};","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {},\r\n    goTo: () => {},\r\n    redirectToGamePlay: () => {},\r\n    cancelGame: () => {},\r\n    openLeaguePage: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar style={{borderBottom: '1px solid grey'}}  bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`درخواست بازی ${by.type}*${by.type}*${by.type} از ${by.name}\\n برای پذیرفتن دعوت کلیک کنید`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID, by.type),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\t\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (error.response.status === Status.InternalServerError) {\r\n\t\t\tSorry(\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\");\r\n\t\t}\r\n\t\telse if (!Status.isErrorExpected(error)) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"خطای غیرمنتظره ای رخ داده است. اگر برای چندمین بار است که این پیغلم را می بینید، لطفا مشکل خود را باه ما اطلاع دهید.\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tsignIn: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tgetPlayer: (userID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}/${userID}`),\r\n\tgetAvatar: (userID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.MyAvatar}/${userID}`\r\n\t\t),\r\n\tgetAllPlayers: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}`),\r\n\tgetMe: () => http.get(`${Server.Root}/${Server.Users}/${Server.Private}`),\r\n\tgetMyCredentials: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t),\r\n\teditMyCredentials: (newMe) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t),\r\n\tchangeMyPassword: (passwords) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t),\r\n\tuploadAvatar: (password, avatar) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"avatar\", avatar);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.MyAvatar}`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t),\r\n\tisMyFriend: (targetID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t)\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\nimport { Sorry } from \"./../../../tools/notification\";\r\n\r\nexport const ResetOpponent = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_OPPONENT\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MINE\" });\r\n\t};\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی حین بارگذاری اطلاعات حریف پیش آمد. لطفا وضعیت اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\"مشکلی در بارگذاری اطلاعات کاربری شما پیش آمد. لطفا ارتباط اینترنتی خود را بررسی کنید.\")\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","import { Notify } from \"./../../tools/notification\";\r\n\r\nexport const T3DLogic = {\r\n    Rules: { TurnTimeOut: 45 }, //secs\r\n    initiate: (dimension) => {\r\n        let indexes = [];\r\n        for (let i = 0; i < dimension; i++) indexes.push(i);\r\n        return {\r\n            empties: dimension * dimension * dimension,\r\n            table: indexes.map(() =>\r\n                indexes.map(() => indexes.map(() => null))\r\n            ),\r\n            myTurn: Math.floor(Math.random() * 2),\r\n        };\r\n    },\r\n    getButtonCoordinates: (dim, { floor, row, column }) =>\r\n        floor * dim * dim + row * dim + column,\r\n    getCellCoordinates: (cellID, dimen) => {\r\n        const cellFloor = Math.floor(cellID / (dimen * dimen));\r\n        const onFloorId = cellID % (dimen * dimen);\r\n        const cellRow = Math.floor(onFloorId / dimen);\r\n        const cellColumn = onFloorId % dimen;\r\n        // just test a random id to see how above formula works!\r\n        return { floor: cellFloor, row: cellRow, column: cellColumn };\r\n    },\r\n    endThisGame: ({ players, myTurn }, onClose) => {\r\n        const oppTurn = Number(!myTurn);\r\n        //NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n        if (players[myTurn].score > players[oppTurn].score)\r\n            Notify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n        else if (players[myTurn].score === players[oppTurn].score)\r\n            Notify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n        else Notify(\"شما باختید\");\r\n        //reset everything:\r\n        onClose();\r\n    },\r\n    inspectAreaAroundTheCell: ({ floor, row, column }, { players, table, dimension },\r\n        connectScoreLines\r\n    ) => {\r\n        // inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n        // is it needed to write a inspectAll method ?\r\n        const playerInTheCell = table[floor][row][column];\r\n        let rowCount = 0,\r\n            columnCount = 0,\r\n            floorMainDiagCount = 0,\r\n            floorSideDiagCount = 0,\r\n            tableMainDiagCount = 0,\r\n            tableSideDiagCount = 0,\r\n            tableAltitudeCount = 0,\r\n            tableRowFloorMainDiagCount = 0,\r\n            tableRowFloorSideDiagCount = 0,\r\n            tableColumnFloorMainDiagCount = 0,\r\n            tableColumnFloorSideDiagCount = 0;\r\n        for (let i = 0; i < dimension; i++) {\r\n            if (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n            if (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n            if (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n            if (row === column) {\r\n                if (table[floor][i][i] === playerInTheCell)\r\n                    floorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n                if (row === floor && table[i][i][i] === playerInTheCell)\r\n                    tableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n            }\r\n            if (row + column + 1 === dimension) {\r\n                if (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n                    floorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n                if (\r\n                    row === floor &&\r\n                    table[i][i][dimension - i - 1] === playerInTheCell\r\n                )\r\n                    tableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n            }\r\n            if (floor === column && table[i][row][i] === playerInTheCell)\r\n                tableRowFloorMainDiagCount++;\r\n            if (\r\n                floor + column + 1 === dimension &&\r\n                table[i][row][dimension - i - 1] === playerInTheCell\r\n            )\r\n                tableRowFloorSideDiagCount++;\r\n            if (floor === row && table[i][i][column] === playerInTheCell)\r\n                tableColumnFloorMainDiagCount++;\r\n            if (\r\n                floor + row + 1 === dimension &&\r\n                table[i][dimension - i - 1][column] === playerInTheCell\r\n            )\r\n                tableColumnFloorSideDiagCount++;\r\n        }\r\n\r\n        // now inspect whether a line has been made and take action for it\r\n        // the actual purpose of lines below, is to convert cell:{floor, row, format} format to ButtonID format;\r\n        // ButtonID (or cellID) format is an integer between 0 and (dimension^3)\r\n        rowCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension + row * dimension,\r\n                1,\r\n                playerInTheCell - 1\r\n            );\r\n        columnCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension + column,\r\n                dimension,\r\n                playerInTheCell - 1\r\n            );\r\n        floorMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension,\r\n                dimension + 1,\r\n                playerInTheCell - 1\r\n            );\r\n        floorSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                floor * dimension * dimension + (dimension - 1),\r\n                dimension - 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                0,\r\n                dimension * (dimension + 1) + 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                dimension - 1,\r\n                dimension * (dimension + 1) - 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableAltitudeCount === dimension &&\r\n            connectScoreLines(\r\n                row * dimension + column,\r\n                dimension * dimension,\r\n                playerInTheCell - 1\r\n            );\r\n        tableRowFloorMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                row * dimension,\r\n                dimension * dimension + 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableRowFloorSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                (row + 1) * dimension - 1,\r\n                dimension * dimension - 1,\r\n                playerInTheCell - 1\r\n            );\r\n        tableColumnFloorMainDiagCount === dimension &&\r\n            connectScoreLines(\r\n                column,\r\n                dimension * (dimension + 1),\r\n                playerInTheCell - 1\r\n            );\r\n        tableColumnFloorSideDiagCount === dimension &&\r\n            connectScoreLines(\r\n                dimension * (dimension - 1) + column,\r\n                dimension * (dimension - 1),\r\n                playerInTheCell - 1\r\n            );\r\n    },\r\n};","import { LoadThisPlayer } from \"./player\";\r\nimport { Sorry, Notify } from \"./../../../tools/notification\";\r\nimport { T3DLogic } from './../../../games/gameplay/GameLogics';\r\nexport const EnterRoom = ({ name, type, scoreless }) => {\r\n    return async(dispatch, getState) => {\r\n        const me = getState().me;\r\n        try {\r\n            await dispatch({\r\n                type: \"ENTER_ROOM\",\r\n                payload: { name, type, scoreless },\r\n            });\r\n            // now dispatch opponent\r\n            if (name) {\r\n                const rivalID = name\r\n                    .split(\"_\")\r\n                    .filter(\r\n                        (playerID) =>\r\n                        playerID.toString() !== me.userID.toString()\r\n                    );\r\n                await dispatch(LoadThisPlayer(rivalID));\r\n            }\r\n        } catch (err) {\r\n            Sorry(\r\n                \"مشکلی حین بارکذاری داده های بازی پیش آمد. ممکن است اطلاعاتی که برای شما نمایش داده شده است، اشتباه باشد\"\r\n            );\r\n            console.log(\"sth went wrong while entering the room 'cause: \", err);\r\n        }\r\n    };\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n    return async(dispatch) => {\r\n        await dispatch({\r\n            type: \"EXIT_ROOM\",\r\n        });\r\n        await dispatch({ type: \"RESET_OPPONENT\" });\r\n    };\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n    return async(dispatch) => { await dispatch({ type: \"CLEAN_SCOREBOARD\" }); };\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n    return async(dispatch) => {\r\n        await dispatch({\r\n            type: \"UPDATE_SCOREBOARD\",\r\n            payload: details,\r\n        });\r\n    };\r\n};\r\n\r\nexport const RegisterMultiplayer = (gameID) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            if (gameID)\r\n                await dispatch({\r\n                    type: \"REGISTER_GAME\",\r\n                    payload: { multy: true, gameID },\r\n                });\r\n        } catch (err) {\r\n            console.log(err);\r\n            await dispatch({ type: \"RESET_GAME\" });\r\n        }\r\n    };\r\n};\r\n\r\nexport const CloseOngoingGame = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n\r\n            await dispatch({ type: \"RESET_GAME\" });\r\n            await dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n            await dispatch({ type: \"EXIT_ROOM\" });\r\n            await dispatch({ type: \"RESET_OPPONENT\" });\r\n        } catch (err) {\r\n            console.log(\"closing the ongoing game failed completing cause: \", err);\r\n            Notify(\"مشکلی حین بستن بازی کنونی پیش آمد.\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const RegisterSinglePlayer = (dimension, scoreless, difficulty) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const { myTurn, table, empties } = T3DLogic.initiate(dimension);\r\n            await dispatch({\r\n                type: \"REGISTER_GAME\",\r\n                payload: { multy: false, dimension, scoreless, difficulty, myTurn, table, empties },\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            Sorry(\"مشکلی در اجرای بازی تک نفره پیش آمد. لطفا مجددا تلاش کنید.\")\r\n        }\r\n    }\r\n}","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n\tgetAllGames: () => http.get(`${Server.Root}/${Server.Games}`),\r\n\tgetMyGames: () => http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`),\r\n\tloadLeague: (leagueID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Games}/${Server.Leagues}/${Server.LeaguesList}/${leagueID}`),\r\n\tlistLeagues: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Games}/${Server.Leagues}`),\r\n\tjoinLeague: (leagueID, teamID = null) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Games}/${Server.Leagues}/${Server.LeaguesList}/${leagueID}`,\r\n\t\t\tJSON.stringify({ teamID })\r\n\t\t),\r\n\tcreateLeague: (password, Mode, scoreless, dimension, title, capacity, prize) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Games}/${Server.Leagues}/${Server.NewLeague}`,\r\n\t\t\tJSON.stringify({ password, title, Mode, dimension, scoreless, capacity, prize })\r\n\t\t),\r\n};\r\n\r\nexport default gameServices;\r\n","import { Sorry } from \"./../../../tools/notification\";\r\nimport gameServices from \"./../../../services/http/gameServices\";\r\nimport { Status } from \"../../../services/configs\";\r\n\r\nexport const EnterLeague = (leagueID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (leagueID) {\r\n\t\t\ttry {\r\n\t\t\t\t// check laugue object for validty(?)\r\n\t\t\t\tconst { data, status } = await gameServices.loadLeague(\r\n\t\t\t\t\tleagueID\r\n\t\t\t\t);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { league } = data;\r\n\t\t\t\t\tif (league && league.matches) {\r\n\t\t\t\t\t\t// league.ongoing is a shortcut like field that translates current round of the league with sufficient data\r\n\t\t\t\t\t\t// this code just returns ongoing round:(last index on the league.matches list)\r\n\t\t\t\t\t\tleague.ongoing = league.matches[\r\n\t\t\t\t\t\t\tleague.matches.length - 1\r\n\t\t\t\t\t\t].map((match) => {\r\n\t\t\t\t\t\t\tconst playerXIndex = league.contesters.findIndex(\r\n\t\t\t\t\t\t\t\t(cont) => cont.userID === match.players[0]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst playerOIndex = league.contesters.findIndex(\r\n\t\t\t\t\t\t\t\t(cont) => cont.userID === match.players[1]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tconst players = [];\r\n\t\t\t\t\t\t\t[playerXIndex, playerOIndex].forEach((index) => {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tindex >= 0 &&\r\n\t\t\t\t\t\t\t\t\tindex <= league.contesters.length\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t//index and is found and has a valid value\r\n\t\t\t\t\t\t\t\t\tconst { fullname, userID, progress } =\r\n\t\t\t\t\t\t\t\t\t\tleague.contesters[index];\r\n\t\t\t\t\t\t\t\t\tplayers.push({ fullname, userID, progress }); //put contesters .progress into .records for ranking table\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tplayers.push({\r\n\t\t\t\t\t\t\t\t\t\tfullname: \"ناشناس\",\r\n\t\t\t\t\t\t\t\t\t\tuserID: null,\r\n\t\t\t\t\t\t\t\t\t\tprogress: null\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\treturn { players, schedule: match.schedule };\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tawait dispatch({\r\n\t\t\t\t\t\ttype: \"ENTER_LEAGUE\",\r\n\t\t\t\t\t\tpayload: data.league,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"مشکلی حین ورود به لیگ پیش آمد. لطفا وضعیت اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ExitLeague());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ExitLeague());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ExitLeague = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"EXIT_LEAGUE\" });\r\n\t};\r\n};\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ResetMyPlayer } from \"./../redux/actions/player\";\r\nimport { CloseOngoingGame, EnterRoom } from \"./../redux/actions/game\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { EnterLeague } from './../redux/actions/league';\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(\"GlobalStates rendered\"); //s\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t};\r\n\r\n\tconst cancelGame = () => {\r\n\t\tdispatch(CloseOngoingGame());\r\n\t\thistory.push(Routes.Client.Root);\r\n\t\tSorry(\"بازی از سوی یکی از بازیکنان لغو شد.\");\r\n\t\tsetTimeout(() => {\r\n\t\t\thistory.push(Routes.Client.GameDeck);\r\n\t\t}, 500);\r\n\t};\r\n\r\n\tconst openLeaguePage = (leagueID) => {\r\n\t\tbrowserStorage.enter_league(leagueID);\r\n\t\tdispatch(EnterLeague(leagueID));\r\n\t\thistory.push(Routes.Client.League);\r\n\r\n\t}\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{ device, signOut, redirectToGamePlay, goTo, cancelGame, openLeaguePage }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = () => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                {/* <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button> */}\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item animated-button\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li className=\"animated-button\" > \r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.StudentManagement}>\r\n                                    مدیریت دانشجویان\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.LeaguesManager}>\r\n                                    لیگ منیجر\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.Documents}>\r\n                                    توضیحات سایت\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" className=\"animated-button\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\treturn (\r\n\t\t<Navbar\r\n\t\t\tbg=\"transparent\"\r\n\t\t\tstyle={{ border: \"1px solid grey\", borderRadius: \"5px\" }}\r\n\t\t\tclassName=\"justify-content-center p-2 mt-2 nav-pills text-right w-100\">\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\texact\r\n\t\t\t\tto={Configs.Routes.Client.Profile}\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\taria-current=\"page\">\r\n\t\t\t\t<i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t<i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.ChatRoom}>\r\n\t\t\t\t<i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t{me && me.isAdmin && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{/* admin tools */}\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\t\t\tclassName=\"nav-link mx-1 border-top\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Notices}>\r\n\t\t\t\t\t\t<i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.StudentManagement}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.LeaguesManager}>\r\n\t\t\t\t\t\tلیگ منیجر\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Documents}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outline-danger\"\r\n\t\t\t\tclassName=\"mx-3\"\r\n\t\t\t\tonClick={context.signOut}>\r\n\t\t\t\t<i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n\t\t\t</Button>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from \"./../globals/redux/actions/player\";\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\t(async () => {\r\n\t\t\t\tif (storageToken) {\r\n\t\t\t\t\tawait dispatch(LoadMyPlayer());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myInteractions = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (interactions instanceof Array) {\r\n\t\t\t\t\t//interactions catched from server side, but it requires modification: sorting, formatting messages\r\n\t\t\t\t\tinteractions.forEach((interact) => {\r\n\t\t\t\t\t\t// reformat clients chats in his/her own viewpoint\r\n\t\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\t\tmyInteractions.push({\r\n\t\t\t\t\t\t\twith: friend,\r\n\t\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\tme: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: null,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\tme: null,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait dispatch({\r\n\t\t\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\t\t\tpayload: myInteractions,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// dispatch friends here\r\n\t\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t\t} else\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\"null interaction response! means sth went wrong\"\r\n\t\t\t\t\t);\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\n// export const ExtractFriends = () => {\r\n// \treturn async (dispatch, getState) => {\r\n// \t\tconst interactions = getState().interactions;\r\n// \t\tconst friends = Interactions\r\n// \t}\r\n// }\r\nexport const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n\t// one time u load from server, then new messages are simply pushed to previous data\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst myinteractions = getState().interactions;\r\n\t\t\tmyinteractions\r\n\t\t\t\t.find((interact) => interact.with.userID === friendID)\r\n\t\t\t\t.messages.push({\r\n\t\t\t\t\tname: name, //is name needed?\r\n\t\t\t\t\tme: sent ? text : null,\r\n\t\t\t\t\tfriend: recieved ? text : null,\r\n\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t});\r\n\r\n\t\t\tawait dispatch({\r\n\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\tpayload: myinteractions,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t//..propeer message\r\n\t\t\t// ...reset?\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t};\r\n};\r\n","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport {\r\n\tLoadInteractions,\r\n\tResetInteractions,\r\n} from \"../globals/redux/actions/interactions\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t// this form of dispatching is used to support preloaders\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait dispatch(LoadMyPlayer());\r\n\t\t\t\tawait dispatch(LoadInteractions());\r\n\t\t\t\t// profile unmounted\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ResetInteractions());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device === Devices.Desktop ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col lg={3}>\r\n\t\t\t\t\t\t<ProfilePanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={9}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col className=\"mx-auto\" sm={12}>\r\n\t\t\t\t\t\t<CollapsedPanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import { Card } from 'react-bootstrap';\r\nconst NoItems = ({children}) => {\r\n\treturn (\r\n\t\t<Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n\t\t\t<Card.Body className=\"text-center\">\r\n\t\t\t\t<Card.Text>{children}.</Card.Text>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default NoItems;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Container, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { toHijri } from \"../../tools/format\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport { Devices } from \"../../services/configs\";\r\n\r\nconst SingleScoreCard = ({\r\n\tType,\r\n\tdate,\r\n\tplayerXName,\r\n\tplayerOName,\r\n\txScore,\r\n\toScore,\r\n}) => {\r\n\t// format score text:\r\n\tconst [xBadge, setXBadge] = useState(null);\r\n\tconst [oBadge, setOBadge] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHijriDate(toHijri(date)[0]); //toHijri = [date, time]\r\n\t\tif (xScore > oScore) {\r\n\t\t\t// x won\r\n\t\t\tsetXBadge(\"badge-success\");\r\n\t\t\tsetOBadge(\"badge-danger\");\r\n\t\t} else if (xScore === oScore) {\r\n\t\t\t//draw\r\n\t\t\tsetXBadge(\"badge-warning\");\r\n\t\t\tsetOBadge(\"badge-warning\");\r\n\t\t} else {\r\n\t\t\t// o won\r\n\t\t\tsetOBadge(\"badge-success\");\r\n\t\t\tsetXBadge(\"badge-danger\");\r\n\t\t}\r\n\t}, [date, xScore, oScore]);\r\n\t// make this card 'bg-transparent' too?\r\n\treturn (\r\n\t\t<Card border=\"dark\" className=\"single-score-card\">\r\n\t\t\t{/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"text-center mx-auto\">\r\n\t\t\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerXName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">{playerXName}</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n                            <hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">\r\n\t\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer className=\"p-0\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outline-dark\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tclassName=\"replay-game-button\">\r\n\t\t\t\t\t{hijriDate}\r\n\t\t\t\t\t<i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</Button>\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport NoItems from \"../../commons/NoItems\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst ScoresTable = ({ scores }) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{scores.length ? (\r\n\t\t\t\tscores.map((score) => (\r\n\t\t\t\t\t<SingleScoreCard\r\n\t\t\t\t\t\tkey={score.gameID}\r\n\t\t\t\t\t\tType={score.Type}\r\n\t\t\t\t\t\tdate={score.date}\r\n\t\t\t\t\t\tplayerXName={score.players[0].name}\r\n\t\t\t\t\t\tplayerOName={score.players[1].name}\r\n\t\t\t\t\t\txScore={score.players[0].score}\r\n\t\t\t\t\t\toScore={score.players[1].score}></SingleScoreCard>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<NoItems>هیچ بازی ای انجام نگرفته است</NoItems>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ScoresTable;\r\n","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-center\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","import { GameSetting } from \"../../../services/configs\";\r\n\r\nexport const ReapeatRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = (tools.randomSearchRepeats + 1) % GameSetting.RandomSearchRepeatLimit;\r\n        // randomSearchRepeats === 0 => means nor search is not happening or its happening and has reached to maximum allowed retries\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const CloseRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = 0;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = targetID;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = { targetID, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = { ID, name, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RejectGameInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const AcceptInvitation = (inviterID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.acceptedGame = { inviterID, type: gameType };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EmptyGameInvitations = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        tools.acceptedGame = null;\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n}\r\nexport const ReloadRecords = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.recordReloadTrigger = !tools.reloadTrigger;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};","import {\r\n\tButton,\r\n\tCard,\r\n\tCol,\r\n\tListGroup,\r\n\tRow,\r\n\tInputGroup,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport Record from \"./Record\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { useState, useEffect } from \"react\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\nimport { Status } from \"../../services/configs\";\r\nconst FriendRecords = ({ person, thisIsMe }) => {\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst [avatar, setAvatar] = useState(null); //s\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (person) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data, status } = await userServices.getAvatar(\r\n\t\t\t\t\t\tperson.userID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Status.Successful) setAvatar(data.avatar);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\"مشکلی در بارگذاری آواتار این شخص پیش آمد ... لطفا اتصال اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t// use- no-avatar.png here too?\r\n\t\t\t\t\t// in case server return wrong?\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [person]);\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && !thisIsMe) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(person.userID, gameType));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\tconst { records } = person;\r\n\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\t\talt=\"خطا\"\r\n\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{!thisIsMe && person && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={3}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={4}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={5}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport ScoresTable from \"../../tables/scores/ScoresTable\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst [friends, setFriends] = useState([]);\r\n\tconst [friendsCount, setFriendsCount] = useState(0);\r\n\tconst interactions = useSelector((state) => state.interactions); //.map((interact) => interact.with)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendsCount !== interactions.length) {\r\n\t\t\t//thsi if checks whether change made in interaction is friend/unfriend operation or not\r\n\t\t\t//otherwise, every new message sent or recieved cause a new .map calling!\r\n\r\n\t\t\t// const temp = interactions;\r\n\t\t\t// const sorted = temp.sort((f1, f2) => f2.name - f1.name);\r\n\t\t\tsetFriends(interactions.map((interact) => interact.with));\r\n\t\t\tsetFriendsCount(interactions.length);\r\n\t\t}\r\n\t}, [interactions, friendsCount]);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames([...serverResponse.data.myGames.reverse()]);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی حین بارگذاری لیست بازی ها پیش آمد. ارتباط اینترنتی خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? friends.findIndex((friend) => friend.userID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, friends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\teventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\teventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={me}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<ScoresTable scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? friends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: me\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={\r\n\t\t\t\t\t\t\t\t\t\t\t\tme.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<ScoresTable\r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../../services/configs\";\r\nimport \"../profile.css\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices([...data.notices.reverse()]);\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t//put error message in notice side bar?\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto animated-textbox\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 animated-textbox h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","import { UpdateMyChatList } from \"./interactions\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friend, chat }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friend.userID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\t//how to scroll to last recent message in the start?\r\n\t// useEffect(() => {\r\n\t// \tsetTimeout(() => {\r\n\t// \t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t// \t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t// \t\t\t\tbehavior: \"smooth\",\r\n\t// \t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t// \t\t\t});\r\n\t// \t}, 1000);\r\n\t// }, [])\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t});\r\n\t\t}, 100);\r\n\t}, [message]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"chat-main-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{chat &&\r\n\t\t\t\t\t\t\t\tchat instanceof Array &&\r\n\t\t\t\t\t\t\t\tchat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchat[index - 1].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-3 bg-transparent chat-room-message-box animated-textbox text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst interactions = useSelector((state) => state.interactions).sort(\r\n\t\t//first sort all by last recieved message => this makes chat list contacts sorted properly\r\n\t\t(i1, i2) =>\r\n\t\t\tnew Date(i2.messages[i2.messages.length - 1].date).getTime() -\r\n\t\t\tnew Date(i1.messages[i1.messages.length - 1].date).getTime()\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends \"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={3}\r\n\t\t\t\t\t\t\tsm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link className=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.userID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={interact.with.userID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{interact.with.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\tfriend={interact.with}\r\n\t\t\t\t\t\t\t\t\t\tchat={interact.messages}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport Configs from \"../../services/configs\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst Credentials = () => {\r\n\tconst [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n\r\n\tconst reloadPage = () => {\r\n\t\tsetLoading(false);\r\n\t\ttriggerPageUpdate(!pageUpdateTrigger);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } = await userServices.getMyCredentials();\r\n\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\tconst { me } = data;\r\n\t\t\t\t\tsetFullname(me.fullname);\r\n\t\t\t\t\tsetStudentID(me.studentID);\r\n\t\t\t\t\tsetEmail(me.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [pageUpdateTrigger]);\r\n\r\n\tconst saveChanges = async (event) => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\t// check all inputs plz\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.editMyCredentials({\r\n\t\t\t\tstudentID,\r\n\t\t\t\tfullname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(`تغییرات با موفقیت اعمال شد`);\r\n\t\t\t\t// dispatch(TriggerRecordUpdate());\r\n\t\t\t\t// find another way to update\r\n\r\n\t\t\t\treloadPage();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplaceholder=\"نام و نام خانوادگی\"\r\n\t\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">ایمیل</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0 mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Credentials;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst PasswordChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst checkConfirmPassword = (event) => {\r\n\t\tsetConfirmNewPassword(event.target.value);\r\n\t\tif (newPassword !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\r\n\tconst changeMyPassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.changeMyPassword({\r\n\t\t\t\tpassword,\r\n\t\t\t\tnewPassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"رمز شما با موفقیت تغییر داده شد\");\r\n\t\t\t\tcontext.signOut();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => changeMyPassword(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tرمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tتایید رمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm New Password\"\r\n\t\t\t\t\t\tvalue={confirmNewPassword}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(event) => checkConfirmPassword(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-key px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر رمز عبور\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordChange;\r\n","import { Col, Form, Image, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Notify } from \"./../../tools/notification\";\r\nimport './avatar.css';\r\nconst ImagePicker = ({ selector }) => {\r\n\tconst [preview, setPreview] = useState(null);\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst { avatar } = me ? me : { avatar: null };\r\n\tuseEffect(() => {\r\n\t\tsetPreview(avatar);\r\n\t}, [avatar]);\r\n\tconst updatePreview = (imageFile) => {\r\n\t\ttry {\r\n\t\t\tselector(imageFile);\r\n\t\t\tconst oFReader = new FileReader();\r\n\t\t\toFReader.readAsDataURL(imageFile);\r\n\r\n\t\t\toFReader.onload = (oFREvent) => {\r\n\t\t\t\tsetPreview(oFREvent.target.result);\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tNotify(\"پیش نمایش فایل انتخابی با مشکل رو به رو شد.\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form.Group>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"text-center\" sm={4} xs={4} md={3} lg={2}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\tsrc={preview}\r\n\t\t\t\t\t\trounded\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tclassName=\"dropbox-rectangle\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"btn-outline-primary file-picker-control\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tid=\"filepicker\"\r\n\t\t\t\t\t\tonChange={(e) => updatePreview(e.target.files[0])}\r\n\t\t\t\t\t\taccept=\".jpg,.jpeg,.png\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"ابتدا عکس مورد نظر را از اینجا انتخاب کنید\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Form.Label\r\n\t\t\t\t\thtmlFor=\"filepicker\"\r\n\t\t\t\t\tclassName=\"btn-outline-primary file-picker-label animated-button\">\r\n\t\t\t\t\tبا کلیک روی اینجا عکس خود را انتخاب کنید و یا فایل آن را\r\n\t\t\t\t\tبکشید و در وسط کادر سبز رنگ رها کنید ...\r\n\t\t\t\t</Form.Label>\r\n\t\t\t</Row>\r\n\t\t</Form.Group>\r\n\t);\r\n};\r\n\r\nexport default ImagePicker;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { OK } from \"../../tools/notification\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport ImagePicker from \"./ImagePicker\";\r\n\r\nconst AvatarChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [myAvatar, selectMyAvatar] = useState(null);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst upload = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.uploadAvatar(password, myAvatar);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"آواتار شما با موفقیت تغییر داده شد\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\tsetPassword(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => upload(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<ImagePicker selector={selectMyAvatar} />\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-upload px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر آواتار\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default AvatarChange;\r\n","import { Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport Credentials from \"./Credentials\";\r\nimport PasswordChange from \"./PasswordChange\";\r\nimport AvatarChange from \"./AvatarChange\";\r\n\r\nconst AcountManager = () => {\r\n\t//states\r\n\r\n\tconst TABS = { CREDENTIALS: 0, AVATAR: 1, PASSWORD: 2 };\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tdefaultActiveKey={TABS.CREDENTIALS}\r\n\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t<Tab eventKey={TABS.CREDENTIALS} title=\"ویرایش مشخصات\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Credentials />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.AVATAR} title=\"آواتار\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<AvatarChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.PASSWORD} title=\"تغییر رمزعبور\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<PasswordChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default AcountManager;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tborder=\"primary\"\r\n\t\t\t\tclassName=\"sign-in-sidebar animated-sidebar-intense\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Row className=\"justify-content-center my-3\">\r\n\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"Your client site key\" />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col className=\"text-right\" lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices([...data.notices.reverse()]);\r\n                    //if all is empty\r\n                    if(data.notices.length === 0) {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                // show error message within \r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar animated-form\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {Boolean(notices.length) && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"info\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های فعال\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"info\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col lg={2} md={3} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg={10} md={9} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import { Card, Col, Alert, ListGroup, Button, Image } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs, { Status } from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst { fullname, userID, records, avatar } = props.person\r\n\t\t? props.person\r\n\t\t: me;\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\tconst thisIsMe = me && userID === me.userID;\r\n\tuseEffect(() => {\r\n\t\tsetPiece(!thisIsMe ? scoreboard.opp : scoreboard.me);\r\n\t}, [thisIsMe, scoreboard]);\r\n\r\n\tconst { recordReloadTrigger } = tools;\r\n\tuseEffect(() => {\r\n\t\tif (!thisIsMe) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\"برقراری ارتباط با سرور موفقیت امیز نبود.لطفا از ارتباط اینترنتی خود اطمینان حاصل کنید.\");\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [userID, thisIsMe, recordReloadTrigger]);\r\n\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(userID));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar animated-form\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">{fullname}</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"player-avatar\"\r\n\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باختها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{thisIsMe ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\tif (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\telse setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto p-0\">\r\n\t\t\t\t\t{rightSideBar && <Col lg={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tlg={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col className=\"p-0 pl-2\" lg={3} md={4}>\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (room) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", room.name, {gameType: room.type, scoreless: room.scoreless})); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, EnterRoom, CloseOngoingGame, RegisterMultiplayer } from \"./actions/game\";\r\nimport { LoadThisPlayer } from \"./actions/player\";\r\nimport { RegisterSinglePlayer } from './actions/game';\r\n\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n    const mapStateToProps = (state) => ({\r\n        me: state.me,\r\n        opponent: state.opponent,\r\n        room: state.room,\r\n        scoreboard: state.scoreboard,\r\n        tools: state.tools,\r\n        game: state.game\r\n    });\r\n\r\n    const mapDispatchToProps = (dispatch) => ({\r\n        LoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n        EnterRoom: (room) => dispatch(EnterRoom(room)),\r\n        UpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n        RegisterMultiplayer: (gameID) => dispatch(RegisterMultiplayer(gameID)),\r\n        CloseOngoingGame: () => dispatch(CloseOngoingGame()),\r\n        RegisterSinglePlayer: (dimension, scoreless, difficulty) => dispatch(RegisterSinglePlayer(dimension, scoreless, difficulty))\r\n    });\r\n    return connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { T3DLogic } from \"./GameLogics\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players, turn }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = T3DLogic.Rules.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i\r\n                        className=\"fa fa-hourglass-start px-2\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i\r\n                        className=\"fa fa-hourglass-half px-2\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = (\r\n                <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>\r\n            );\r\n        }\r\n        setTimeStamp(\r\n            <div className={color}>\r\n                {icon}\r\n                {timeRemaining} : {players[turn].shape}\r\n            </div>\r\n        );\r\n    }, [timeRemaining, aThird, players, turn]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}\r\n                >\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}\r\n                >\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({\r\n    timeRemaining,\r\n    dimension,\r\n    players,\r\n    table,\r\n    turn,\r\n    onEachCellClick,\r\n}) => {\r\n    let dimens = [];\r\n    const [cell, setCell] = useState(null);\r\n    for (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n    useEffect(() => {\r\n        const cellWidths = [70, 65, 60, 55, 50, 45, 40, 35, 30, 25];\r\n        const cellHeights = [45, 40, 35, 30, 29, 28];\r\n        const deviceWidth = window.innerWidth,\r\n            deviceHeight = window.innerHeight;\r\n        /* first decide cell height, margin nearly equals to height */\r\n        let width = cellWidths[cellWidths.length - 1],\r\n            height = cellHeights[cellHeights.length - 1],\r\n            margin = cellHeights[cellHeights.length - 1],\r\n            fontSize = 25;\r\n        for (const h of cellHeights) {\r\n            if (h * dimension * dimension <= deviceHeight * 0.75) {\r\n                margin = height = h;\r\n                break;\r\n            }\r\n        }\r\n        for (const w of cellWidths) {\r\n            if ((w + margin) * (dimension + 1) <= deviceWidth) {\r\n                width = w;\r\n                break;\r\n            }\r\n        }\r\n\r\n        //find better scaling for font size?\r\n        if (height < 30 || width < 40) fontSize = 15;\r\n        else if (height < 40 || width < 60) fontSize = 20;\r\n        else fontSize = 25;\r\n        setCell({ width, height, margin, fontSize });\r\n    }, [dimension]);\r\n    //prop drilling in BriefScoreBoard\r\n    return (\r\n        <Card bg=\"transparent\" border=\"dark\" className=\"w-100 mt-2 mx-auto\">\r\n            <BriefScoreboard\r\n                timeRemaining={timeRemaining}\r\n                turn={turn}\r\n                players={players}\r\n            />\r\n            <Card.Body className=\"game-border-card\">\r\n                {table && cell ? (\r\n                    dimens.map((floor) => (\r\n                        <Fragment>\r\n                            {dimens.map((row) => (\r\n                                <Row\r\n                                    style={{\r\n                                        direction: \"ltr\",\r\n                                        marginLeft: `${cell.margin * row}px`,\r\n                                    }}\r\n                                >\r\n                                    {dimens.map((column) => (\r\n                                        <Button\r\n                                            key={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            variant=\"border-dark\"\r\n                                            className=\"game-table-cells\"\r\n                                            style={{\r\n                                                width: `${cell.width}px`,\r\n                                                height: `${cell.height}px`,\r\n                                                fontSize: `${cell.fontSize}px`,\r\n                                                color: table[floor][row][column]\r\n                                                    ? players[\r\n                                                          table[floor][row][\r\n                                                              column\r\n                                                          ] - 1\r\n                                                      ].color\r\n                                                    : null,\r\n                                            }}\r\n                                            id={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            onClick={(event) =>\r\n                                                onEachCellClick(event)\r\n                                            }\r\n                                        >\r\n                                            {table[floor][row][column] &&\r\n                                                players[\r\n                                                    table[floor][row][column] -\r\n                                                        1\r\n                                                ].shape}\r\n                                        </Button>\r\n                                    ))}\r\n                                </Row>\r\n                            ))}\r\n                            <br />\r\n                        </Fragment>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"text-center\"> در حال اتصال... </p>\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n    connect,\r\n    createSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { Routes } from \"../../services/configs\";\r\nimport { Attention, Notify } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\nimport { T3DLogic } from \"./GameLogics\";\r\nclass MultiGamePlay extends Component {\r\n    state = {\r\n        players: [\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n                text: \"X\",\r\n                color: \"blue\",\r\n                lineColor: \"primary\",\r\n                score: 0,\r\n            },\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n                text: \"O\",\r\n                color: \"darkred\",\r\n                lineColor: \"danger\",\r\n                score: 0,\r\n            },\r\n        ], // maybe use player actual user name and change this item to an object of objects?\r\n        turn: 0, // start turn is decided by throwning dices\r\n        dimension: 3,\r\n        table: null,\r\n        myTurn: undefined, // change this\r\n        socketGamePlay: undefined,\r\n        playerOnline: true,\r\n        timeRemaining: 0, //create a config\r\n        deadlineID: null,\r\n        connectionCheckTimerID: null,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.cellButtons = [];\r\n    }\r\n\r\n    updateGameScorebaord = () => {\r\n        const { myTurn, players } = this.state;\r\n        const oppTurn = Number(!myTurn);\r\n\r\n        this.props.UpdateScoreboard({\r\n            me: {\r\n                index: myTurn,\r\n                shape: players[myTurn].shape,\r\n                score: players[myTurn].score,\r\n            },\r\n            opp: {\r\n                index: oppTurn,\r\n                shape: players[oppTurn].shape,\r\n                score: players[oppTurn].score,\r\n            },\r\n        });\r\n    };\r\n\r\n    synchronizeDeadline = (t0) => {\r\n        const remaining = T3DLogic.Rules.TurnTimeOut - (Date.now() - t0) / 1000;\r\n        this.setState({ timeRemaining: Math.floor(remaining) });\r\n        //is it needed to declare deadlineID as state?\r\n        if (this.state.deadlineID) clearInterval(this.state.deadlineID);\r\n        const deadlineID = setInterval(() => {\r\n            const { timeRemaining, deadlineID } = this.state;\r\n            if (timeRemaining > 0)\r\n                this.setState({ timeRemaining: timeRemaining - 1 });\r\n            else {\r\n                const { socketGamePlay } = this.state;\r\n                const { room } = this.props;\r\n                clearInterval(deadlineID);\r\n                this.setState({ deadlineID: null });\r\n                socketGamePlay.send(\r\n                    createSocketRequest(\"ban_move\", room.name, null)\r\n                );\r\n            }\r\n        }, 1000);\r\n        this.setState({ deadlineID });\r\n    };\r\n\r\n    updatePlayerStates = ({ turn, xScore, oScore }) => {\r\n        const players = [...this.state.players];\r\n        players[0].score = xScore;\r\n        players[1].score = oScore;\r\n        this.setState({\r\n            players,\r\n            turn,\r\n        });\r\n        this.updateGameScorebaord();\r\n    };\r\n\r\n    disableAllTimers = () => {\r\n        const { connectionCheckTimerID, deadlineID } = this.state;\r\n        clearTimeout(connectionCheckTimerID);\r\n        clearTimeout(deadlineID); //move time out timer\r\n    };\r\n\r\n    socketOnMessage = (response) => {\r\n        const { data } = response;\r\n        const { cmd, msg } = JSON.parse(data);\r\n        const { surrender } = this.props;\r\n        if (this.props.location.pathname === Routes.Client.GameDeck) {\r\n            if (cmd === \"START\") {\r\n                const startTime = toTimeShort(msg);\r\n                //edit !surrender part\r\n                const { players, myTurn } = this.state;\r\n                if (!surrender) {\r\n                    Notify(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n                    Attention(`مهره ی شما: ${players[myTurn].text}`);\r\n                }\r\n            } else if (cmd === \"REMEMBER\") {\r\n                const { IDs, dimension, myTurn, gameID } = msg;\r\n                this.setState({ dimension, myTurn });\r\n\r\n                const { opponent, LoadThisPlayer, game, RegisterMultiplayer } =\r\n                    this.props;\r\n                const opponentID = IDs[Number(!myTurn)];\r\n                if (!surrender) {\r\n                    //ithink !surrender must be removed\r\n                    //if opponent is not null -> means this was called before and there's no need to run again\r\n                    !opponent && opponentID && LoadThisPlayer(opponentID);\r\n                    !game && gameID && RegisterMultiplayer(gameID);\r\n                }\r\n            } else if (cmd === \"LOAD\") {\r\n                this.updatePlayerStates(msg);\r\n                const { table, t0 } = msg;\r\n                this.setState({ table });\r\n                this.updatePlayerStates(msg);\r\n                this.updateGameScorebaord();\r\n                this.synchronizeDeadline(t0);\r\n            } else if (this.state.table) {\r\n                if (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n                else if (cmd === \"UPDATE\") {\r\n                    const { room, me } = this.props;\r\n                    const { dimension } = this.state;\r\n                    const { newMove, t0 } = msg;\r\n                    const cellID = Number(newMove.cellIndex);\r\n\r\n                    //*************** */\r\n                    //is this needed to check the move in client? considering that complete check has been made in client\r\n                    //and consder that: checking move in client may cause some bugs\r\n                    //for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n                    //turn is not updated and this player can not make new moves to recieve server's table!!!\r\n                    this.verifyAndApplyTheMove(\r\n                        T3DLogic.getCellCoordinates(cellID, dimension),\r\n                        this.cellButtons[cellID]\r\n                    );\r\n                    //wrap it up this part of UPDATE and LOAD in a method\r\n                    this.updatePlayerStates(newMove);\r\n\r\n                    this.cellButtons[cellID].focus();\r\n                    this.updateGameScorebaord();\r\n\r\n                    // now inform the server that the move is recieved\r\n                    //force connect it?\r\n                    if (newMove.madeBy !== me.userID)\r\n                        this.state.socketGamePlay.send(\r\n                            createSocketRequest(\r\n                                \"move_recieved\",\r\n                                room.name,\r\n                                true\r\n                            )\r\n                        );\r\n                    // server time out is set and now setInterval for this client to show how much time left\r\n                    this.synchronizeDeadline(t0);\r\n                } else if (cmd === \"MOVE_MISSED\") {\r\n                    const { turn, t0 } = msg;\r\n                    //msg --> forced set turn\r\n                    this.setState({ turn });\r\n                    this.synchronizeDeadline(t0);\r\n                } else if (cmd === \"NOT_AUTHORIZED\") {\r\n                    Attention(\"لطفا وارد حساب کاربری خود شوید\");\r\n                    // signOut();\r\n                } else if (cmd === \"END\") {\r\n                    this.updatePlayerStates(msg);\r\n                    T3DLogic.endThisGame(this.state, this.onCloseGame);\r\n                    this.disableAllTimers();\r\n                } else if (cmd === \"CLOSE\") {\r\n                    Attention(\r\n                        \"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n                    );\r\n                    this.onCloseGame();\r\n                } else if (cmd === \"REGISTER_GAME\") {\r\n                    const { gameID } = msg;\r\n                    gameID && this.props.RegisterMultiplayer(gameID);\r\n                } else {\r\n                    console.log(\"wrong socket request\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    forceConnectWS = async (nextJob) => {\r\n        const { room } = this.props;\r\n\r\n        try {\r\n            let socket = await connect(room);\r\n            socket.onmessage = this.socketOnMessage;\r\n            this.setState({ socketGamePlay: socket });\r\n            if (nextJob) nextJob();\r\n        } catch (err) {\r\n            console.log(err);\r\n            // **********************\r\n            //time out must be set with rising time out time to prevent server getting fucked up\r\n            setTimeout(() => {\r\n                console.log(\"rconnecting from GamePlay\");\r\n                this.forceConnectWS(nextJob);\r\n            }, 3000);\r\n        }\r\n    };\r\n\r\n    enableConnectionCheckTimer = () => {\r\n        return setInterval(() => {\r\n            if (window.navigator.onLine) {\r\n                if (!this.state.playerOnline) {\r\n                    // user comming bacvk online just now\r\n                    //player JUST became online\r\n                    this.setState({ playerOnline: true }); // toggle online status\r\n                    this.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n                }\r\n            } else if (this.state.playerOnline) {\r\n                //player JUST became offline\r\n                this.setState({ playerOnline: false });\r\n            }\r\n        }, 2500); //2.5 sec is it ok?\r\n    };\r\n\r\n    loadCurrentGame = () => {\r\n        const { room, surrender } = this.props;\r\n        console.log(room);\r\n        this.forceConnectWS(() => {\r\n            this.state.socketGamePlay.send(\r\n                createSocketRequest(\"load\", room.name, null)\r\n            );\r\n            if (surrender) {\r\n                this.state.socketGamePlay.send(\r\n                    createSocketRequest(\"surrender\", room.name, true)\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n        const { room } = this.props;\r\n        this.setState({ dimension: room.type });\r\n        this.loadCurrentGame();\r\n\r\n        this.setState({\r\n            connectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disableAllTimers();\r\n    }\r\n\r\n    onEachCellClick = (event) => {\r\n        const { dimension, turn, myTurn } = this.state;\r\n        const { opponent, room } = this.props;\r\n        if (opponent && turn === myTurn) {\r\n            try {\r\n                const selectedCellButton = event.target;\r\n\r\n                const cell = T3DLogic.getCellCoordinates(\r\n                    selectedCellButton.id,\r\n                    dimension\r\n                );\r\n                console.log(selectedCellButton.id, cell);\r\n                if (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n                    //this.forceConnectWS(() => {\r\n                    this.state.socketGamePlay.send(\r\n                        createSocketRequest(\r\n                            \"move\",\r\n                            room.name,\r\n                            selectedCellButton.id\r\n                        )\r\n                    );\r\n                    //});\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                //load again here?\r\n            }\r\n        }\r\n    };\r\n\r\n    verifyAndApplyTheMove = (cell, cellButton) => {\r\n        const { turn } = this.state;\r\n        console.log(this.state.table);\r\n        let tempTable = [...this.state.table];\r\n        if (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n            tempTable[cell.floor][cell.row][cell.column] = turn + 1; //maybe its better to use players actual Id huh?\r\n            this.setState({ table: tempTable });\r\n            // cellButton.value = players[turn].shape;\r\n            // cellButton.style.color = players[turn].color;\r\n            cellButton.style.opacity = 0.0;\r\n            setTimeout(() => {\r\n                cellButton.className = `game-table-cells player-${\r\n                    turn ? \"o\" : \"x\"\r\n                }-cell animate-new-move`;\r\n                cellButton.style.opacity = 1.0;\r\n            }, 100);\r\n\r\n            T3DLogic.inspectAreaAroundTheCell(\r\n                cell,\r\n                this.state,\r\n                this.connectScoreLines\r\n            );\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // method below: checks each possible line(according to the condition that user gives it),\r\n    // if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n    connectScoreLines = (firstCell, step, index) => {\r\n        const { dimension, turn, players } = this.state;\r\n        const { room } = this.props;\r\n        for (let i = 0; i < dimension; i++) {\r\n            this.cellButtons[\r\n                firstCell + i * step\r\n            ].className = `game-table-cells btn btn-${players[index].lineColor}`;\r\n            !room.scoreless &&\r\n                setTimeout(() => {\r\n                    this.cellButtons[\r\n                        firstCell + i * step\r\n                    ].className = `game-table-cells player-${\r\n                        turn ? \"o\" : \"x\"\r\n                    }-cell`;\r\n                }, 1000 + i * 100);\r\n        }\r\n    };\r\n\r\n    onCloseGame = () => {\r\n        this.state.socketGamePlay.close();\r\n        this.setState({ socketGamePlay: null });\r\n        setTimeout(() => {\r\n            this.props.CloseOngoingGame();\r\n            this.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n        }, 3000);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <TableDesign\r\n                dimension={this.state.dimension}\r\n                players={this.state.players}\r\n                table={this.state.table}\r\n                turn={this.state.turn}\r\n                timeRemaining={this.state.timeRemaining}\r\n                onEachCellClick={this.onEachCellClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(MultiGamePlay));\r\n","import { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport { Attention, Notify, OK } from \"../tools/notification\";\r\nimport {\r\n\tCloseRandomSearch,\r\n\tReapeatRandomSearch,\r\n} from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Routes } from \"../services/configs\";\r\nconst RandomGame = () => {\r\n\tconst [dimension, setDimension] = useState(4);\r\n\tconst [isScoreless, setScoreless] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [searching, setSearching] = useState(false);\r\n\tconst context = useContext(GlobalContext);\r\n\tconst dispatch = useDispatch();\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\r\n\tconst onStartGameClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (me) {\r\n\t\t\tdispatch(\r\n\t\t\t\tEnterRoom({\r\n\t\t\t\t\tname: null,\r\n\t\t\t\t\ttype: dimension,\r\n\t\t\t\t\tscoreless: isScoreless,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\tsetSearching(true);\r\n\t\t}\r\n\t\t// random game:\r\n\t\telse {\r\n\t\t\tAttention(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n\t\t\tcontext.goTo(Routes.Client.SignUp);\r\n\t\t}\r\n\t};\r\n\tconst { randomSearchRepeats } = tools;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (searching) {\r\n\t\t\tif (room.name) {\r\n\t\t\t\tOK(\r\n\t\t\t\t\t\"یک حریف تصادفی پیدا شد ... در صورت تایید هر دو طرف بازی آغاز خواهد شد.\"\r\n\t\t\t\t);\r\n\t\t\t\tsetSearching(false);\r\n\t\t\t} else if (!randomSearchRepeats) {\r\n\t\t\t\t//means no one has been found after a specific amount of time\r\n\t\t\t\tNotify(\"حریفی پیدا نشد ... لحظاتی دیگر مجددا تلاش کنید\");\r\n\t\t\t\tsetSearching(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [searching, room.name, randomSearchRepeats]);\r\n\t//on destroy\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tsetSearching(false); //make sure preloader turns off\r\n\t\t\tdispatch(CloseRandomSearch());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={searching} />\r\n\t\t\t<hr />\r\n\t\t\t<Form onSubmit={(event) => onStartGameClick(event)}>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">نوع بازی</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"0\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={!isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text className=\"ml-5\">\r\n\t\t\t\t\t\t\tامتیازی\r\n\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text>سرعتی</InputGroup.Text>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 3}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(3)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 4}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 5}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(5)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tvariant=\"success\">\r\n\t\t\t\t\t<i className=\"fa fa-search px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tجستجو\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default RandomGame;\r\n","import { Button, Container, Modal, Row, Alert } from \"react-bootstrap\";\r\nimport { useState, Fragment } from \"react\";\r\n\r\nconst ModalContesters = ({ contesters }) => {\r\n\tconst [show, setShow] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Button\r\n\t\t\t\tblock\r\n\t\t\t\tonClick={() => setShow(true)}\r\n\t\t\t\tvariant=\"outline-secondary\">\r\n\t\t\t\tبازیکنان حاضر\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Modal show={show} onHide={() => setShow(false)}>\r\n\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t{contesters &&\r\n\t\t\t\t\t\t\tcontesters.map((contester) => (\r\n\t\t\t\t\t\t\t\t<Row className=\" mx-auto text-center animated-button\">\r\n\t\t\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t{contester.fullname}\r\n\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tclassName=\"text-center animated-button\"\r\n\t\t\t\t\t\t\t\tonClick={() => setShow(false)}\r\n\t\t\t\t\t\t\t\tvariant=\"outline-danger\">\r\n\t\t\t\t\t\t\t\tبستن\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ModalContesters;\r\n","import { Card, Alert, Badge, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Status } from \"../services/configs\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nimport gameServices from \"../services/http/gameServices\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport ModalContesters from \"./ModalContesters\";\r\nimport GlobalContext from \"./../globals/state/GlobalContext\";\r\n\r\nconst SingleLeagueCard = ({ league, reload }) => {\r\n\tconst Summaries = [\r\n\t\t\"بصورت تصادفی تمامی بازیکنان با هم مسابقه می دهند و بازنده ی هر بازی از جام حذف شده و برنده به مرحله ی بعد صعود می کند. قهرمان این جام فردی است که تمامی حریفانش را شکست دهد.\",\r\n\t\t\"هر بازیکن، با تمامی بازیکنان دیگر، بازی مستقل کرده و بسته به نتیجه ای که کسب می کنند امتیازاتی کسب می کنند. قهرمان این کسابقات، بازیکنی است که در جدول رده بندی نفر اول باشد.\",\r\n\t\t\"این مسابقه، ترکیبی از جام حذفی و لیگ اصلی است. در دور مقدماتی، بازیکنان در گروه بندی اختصاص یافته ی خود، رقابت می کنند. نفر اول و دوم هر گروه به دور دوم این مسابقات که ماهیت حذفی دارد صعود می کنند.\",\r\n\t];\r\n\tconst Colors = [\"dark\", \"primary\", \"success\", \"warning\"];\r\n\tconst [showMore, toggleShow] = useState(false); //show showMore or not?\r\n\tconst [ready, setReady] = useState(false); // if league is ready to play\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tconst join = async () => {\r\n\t\ttry {\r\n\t\t\tconst { status } = await gameServices.joinLeague(league.leagueID);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(` شما با موفقیت به لیگ ${league.title} ملحق شدید.`);\r\n\t\t\t\treload();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (err.response.status === Status.MethodNotAllowed)\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"پیوستن به این لیگ مجاز نیست. ظرفیت این لیگ تکمیل شده است.\"\r\n\t\t\t\t);\r\n\t\t\telse if (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst enter = () => {\r\n\t\t// ask server whether the client is really a contester or not\r\n\t\t// re route the client to league route\r\n\t\t// dispatch a redux contaning leagueID of the league is currntly openning\r\n\t\tcontext.openLeaguePage(league.leagueID);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tleague &&\r\n\t\t\tleague.contesters &&\r\n\t\t\tleague.contesters.length === league.capacity &&\r\n\t\t\tleague.started\r\n\t\t\t// && !league.finished\r\n\t\t) {\r\n\t\t\t// if capacity is full,\r\n\t\t\t// check if player is in the league => if so then add an option for opening league room\r\n\t\t\tsetReady(true);\r\n\t\t}\r\n\t}, [league]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`bg-transparent single-league-card border-${\r\n\t\t\t\tColors[league.Mode]\r\n\t\t\t}`}>\r\n\t\t\t<Card.Body\r\n\t\t\t\tonClick={(e) => toggleShow(!showMore)}\r\n\t\t\t\tclassName=\"expand-opacity-animation\">\r\n\t\t\t\t<Card.Title className=\"text-center\">{league.title}</Card.Title>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{!showMore && (\r\n\t\t\t\t\t<Card.Text className=\"league-description-text text-right\">\r\n\t\t\t\t\t\t{Summaries[league.Mode]}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t)}\r\n\t\t\t\t{showMore && (\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tclassName=\"text-right w-100\"\r\n\t\t\t\t\t\tpill=\"true\"\r\n\t\t\t\t\t\tvariant=\"info\">\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tظرفیت :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.capacity}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tنفر\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tجایزه نفر اول :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.prize}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tامتیاز\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<span className=\"text-center\">\r\n\t\t\t\t\t\t\tتعداد شرکت کنندگان :\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"16px\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"mx-2 p-2\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tpill>\r\n\t\t\t\t\t\t\t\t{league.contesters.length}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\tنفر\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Body>\r\n\t\t\t{showMore && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t{!ready ? (\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\"\r\n\t\t\t\t\t\t\t\t\tonClick={join}>\r\n\t\t\t\t\t\t\t\t\tپیوستن\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<ModalContesters\r\n\t\t\t\t\t\t\t\t\tcontesters={league.contesters}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tclassName=\"animated-button\"\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={enter}>\r\n\t\t\t\t\t\t\t\tوزود به لیگ\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SingleLeagueCard;\r\n","import { Col, Row, Container } from \"react-bootstrap\";\r\nimport \"./leagues.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport gameServices from \"../services/http/gameServices\";\r\nimport { Status } from \"../services/configs\";\r\nimport { Sorry } from \"../tools/notification\";\r\nimport SingleLeagueCard from \"./SingleLeagueCard\";\r\nimport NoItems from \"../commons/NoItems\";\r\nconst Leagues = () => {\r\n\tconst [leagues, setLeagues] = useState([]);\r\n\tconst [reload, triggerReload] = useState(false); //a trigger for run reload competition and leagues when needed\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await gameServices.listLeagues();\r\n\t\t\t\tif (status === Status.Successful) setLeagues([...data.leagues]);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t})();\r\n\t}, [reload]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<hr />\r\n\t\t\t{leagues.length ? (\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{leagues.map((league) => (\r\n\t\t\t\t\t\t<Col className=\"mb-5\" lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t<SingleLeagueCard\r\n\t\t\t\t\t\t\t\treload={() => triggerReload(!reload)}\r\n\t\t\t\t\t\t\t\tleague={league}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<NoItems>در حال حاضر لیگی برگزار نمی گردد</NoItems>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Leagues;\r\n","import { T3DLogic } from \"./GameLogics\";\r\nclass ArtificialIntelligence {\r\n    static LEVELS = { Noob: 0, Ordinary: 1, Pro: 2 };\r\n\r\n    constructor(turn, table, level = this.LEVELS.Ordinary, dimenstion = 4) {\r\n        // check level value\r\n        this.level = level;\r\n        this.dimension = dimenstion;\r\n        // this.weights = [...table]; // non-zero cell weights are determined in this list\r\n        // this.table = [...table];\r\n        this.weights = T3DLogic.initiate(dimenstion).table; // non-zero cell weights are determined in this list\r\n        this.table = [...table];\r\n        this.turn = turn;\r\n        this.moves = [];\r\n\r\n        // put a random cell in weights as the ai's first move\r\n    }\r\n\r\n    update = (cell, player) => {\r\n        // save new moves and update ai state\r\n        this.moves.unshift({ ...cell, by: player }); // add new move to the beginning of the array moves\r\n        this.table[cell.floor][cell.row][cell.column] = player + 1;\r\n        this.weigh(cell);\r\n    };\r\n\r\n    weigh = ({ floor, row, column }) => {\r\n        /* update weights of each cell that has intersection with this cell\r\n            note: weight meaning:\r\n                if this cell is full => weight = +-(dimension+1)^3 \r\n                if it has no intersection (or equal intersections with both ai and players cell)=> weight = 0\r\n                if it has intersections => weight = (number of all rival's intersections) - (number of all ai intersections)\r\n                this is beacause we want to put more importance on defending rather than attacking\r\n        */\r\n        const playerInIntersection = this.table[floor][row][column]; // remember: turn is always one less\r\n        const sign = this.turn + 1 === playerInIntersection ? -1 : +1; // connection with ai => sign is negative\r\n        // connection with human player => sign is positive\r\n        // this is just to put more importance on defence than attacking\r\n\r\n        this.weights[floor][row][column] =\r\n            sign *\r\n            ((this.dimension + 1) *\r\n                (this.dimension + 1) *\r\n                (this.dimension + 1));\r\n        // ***NOTE: YOU CAN SKIP THIS UNTIL EMPTIES HAS REACHED TO A CERTAIN VALUE***\r\n        for (let i = 0; i < this.dimension; i++) {\r\n            const value = this.turn + 1 === playerInIntersection ? 0 : +1; // connection with ai => sign is negative\r\n\r\n            if (!this.table[floor][row][i])\r\n                this.weights[floor][row][i] += value;\r\n            if (!this.table[floor][i][column])\r\n                this.weights[floor][i][column] += value;\r\n            if (!this.table[i][row][column])\r\n                this.weights[i][row][column] += value;\r\n            if (row === column) {\r\n                if (!this.table[floor][i][i])\r\n                    this.weights[floor][i][i] += value;\r\n                if (row === floor && !this.table[i][i][i])\r\n                    this.weights[i][i][i] += value;\r\n            }\r\n            if (row + column + 1 === this.dimension) {\r\n                if (!this.table[floor][i][this.dimension - i - 1])\r\n                    this.weights[floor][i][this.dimension - i - 1] += value;\r\n                if (row === floor && !this.table[i][i][this.dimension - i - 1])\r\n                    this.weights[i][i][this.dimension - i - 1] += value;\r\n            }\r\n            if (floor === column && !this.table[i][row][i])\r\n                this.weights[i][row][i] += value;\r\n            if (\r\n                floor + column + 1 === this.dimension &&\r\n                !this.table[i][row][this.dimension - i - 1]\r\n            )\r\n                this.weights[i][row][this.dimension - i - 1] += value;\r\n            if (floor === row && !this.table[i][i][column])\r\n                this.weights[i][i][column] += value;\r\n            if (\r\n                floor + row + 1 === this.dimension &&\r\n                !this.table[i][this.dimension - i - 1][column]\r\n            )\r\n                this.weights[i][this.dimension - i - 1][column] += value;\r\n        }\r\n    };\r\n\r\n    heaviest = () => {\r\n        let floor = -1,\r\n            row = -1,\r\n            column = -1;\r\n        let maxWeight = 0;\r\n        // find the heaviest cell (cell with greatest weight)\r\n        // if there are multi => returns the last heaviest one\r\n        const maxPossibleWeight = Math.pow(this.dimension, 3);\r\n        for (let f = 0; f < this.dimension; f++) {\r\n            for (let r = 0; r < this.dimension; r++) {\r\n                for (let c = 0; c < this.dimension; c++) {\r\n                    const weight = Math.abs(this.weights[f][r][c]);\r\n                    if (\r\n                        weight <= maxPossibleWeight && // this condistion means that the cell is empty\r\n                        weight >= maxWeight\r\n                    ) {\r\n                        floor = f;\r\n                        row = r;\r\n                        column = c;\r\n                        maxWeight = Math.abs(this.weights[floor][row][column]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { floor, row, column };\r\n    };\r\n    reaction = () => {\r\n        switch (this.level) {\r\n            case ArtificialIntelligence.LEVELS.Noob:\r\n                // a noob ai just checks 2 last moves\r\n                // last move is made by player\r\n                // do .strike on player moves => defencing\r\n                // the one to last move is made by ai\r\n                // do .strike on ai move means => attacking\r\n                return this.strike() || this.random(); // if there is no strike to do, then do a random move\r\n\r\n            case ArtificialIntelligence.LEVELS.Ordinary:\r\n                // when no strike:=>  weigh all empty cells\r\n                // select a nonzero :\r\n                return this.strike() || this.heaviest() || this.random(); // if there is no strike to do, then do a random move\r\n\r\n            case ArtificialIntelligence.LEVELS.Pro: {\r\n                // :todo\r\n                return null;\r\n            }\r\n            default:\r\n                // todo\r\n                break;\r\n        }\r\n    };\r\n\r\n    strike = () => {\r\n        // depends on whose moves you send this method does defence or attack\r\n        const movesToCheck =\r\n            this.level !== ArtificialIntelligence.LEVELS.Noob\r\n                ? this.moves\r\n                : this.moves.slice(0, 2);\r\n        for (const move of movesToCheck) {\r\n            const { floor, row, column } = move;\r\n            const playerInTheCell = this.table[floor][row][column];\r\n            let count = 0,\r\n                empty = -1; // index of the empty cell in a specific line (floor, row, column line)\r\n\r\n            for (var i = 0; i < this.dimension; i++) {\r\n                if (this.table[floor][row][i] === playerInTheCell) count++;\r\n                // inspect in a row\r\n                else if (!this.table[floor][row][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor, row, column: empty };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (this.table[floor][i][column] === playerInTheCell) count++;\r\n                // inspect in a column\r\n                else if (!this.table[floor][i][column]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor, row: empty, column };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (this.table[i][row][column] === playerInTheCell) count++;\r\n                // inspect in a altitude line\r\n                else if (!this.table[i][row][column]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor: empty, row, column };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row === column &&\r\n                    this.table[floor][i][i] === playerInTheCell\r\n                )\r\n                    count++;\r\n                // inspect in a 2D main diagonal line through the cell's floor\r\n                else if (!this.table[floor][i][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return { floor, row: empty, column: empty };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row === floor &&\r\n                    row === column &&\r\n                    this.table[i][i][i] === playerInTheCell\r\n                )\r\n                    count++;\r\n                // inspect in a 3D main diagonal line through the whole this.table\r\n                else if (!this.table[i][i][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: empty,\r\n                    column: empty,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row + column + 1 === this.dimension &&\r\n                    this.table[floor][i][this.dimension - i - 1] ===\r\n                        playerInTheCell\r\n                )\r\n                    count++;\r\n                // inpect in a 2D side Diagonal line through the cell's floor\r\n                else if (!this.table[floor][i][this.dimension - i - 1])\r\n                    empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor,\r\n                    row: empty,\r\n                    column: this.dimension - empty - 1,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    row + column + 1 === this.dimension &&\r\n                    row === floor &&\r\n                    this.table[i][i][this.dimension - i - 1] === playerInTheCell\r\n                )\r\n                    count++;\r\n                // inspect in a 3D side diagonal line through the whole this.table\r\n                else if (!this.table[i][i][this.dimension - i - 1]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: empty,\r\n                    column: this.dimension - empty - 1,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor === column &&\r\n                    this.table[i][row][i] === playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][row][i]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row,\r\n                    column: empty,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor + column + 1 === this.dimension &&\r\n                    this.table[i][row][this.dimension - i - 1] ===\r\n                        playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][row][this.dimension - i - 1]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row,\r\n                    column: this.dimension - empty - 1,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor === row &&\r\n                    this.table[i][i][column] === playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][i][column]) empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: empty,\r\n                    column,\r\n                };\r\n\r\n            for (i = 0, count = 0, empty = -1; i < this.dimension; i++) {\r\n                if (\r\n                    floor + row + 1 === this.dimension &&\r\n                    this.table[i][this.dimension - i - 1][column] ===\r\n                        playerInTheCell\r\n                )\r\n                    count++;\r\n                else if (!this.table[i][this.dimension - i - 1][column])\r\n                    empty = i;\r\n            }\r\n            if (empty >= 0 && count === this.dimension - 1)\r\n                return {\r\n                    floor: empty,\r\n                    row: this.dimension - empty - 1,\r\n                    column,\r\n                };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    defend = () => {};\r\n\r\n    attack = () => {};\r\n\r\n    random = (dimension) => {\r\n        let floor = 0,\r\n            row = 0,\r\n            column = 0;\r\n        do {\r\n            [floor, row, column] = [1, 2, 3].map((test) =>\r\n                Math.floor(Math.random() * this.dimension)\r\n            );\r\n        } while (this.table[floor][row][column]);\r\n        return { floor, row, column };\r\n    };\r\n}\r\n\r\nexport default ArtificialIntelligence;\r\n","import { Form } from \"react-bootstrap\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { RegisterSinglePlayer } from \"./../globals/redux/actions/game\";\r\nimport GlobalContext from \"./../globals/state/GlobalContext\";\r\nimport { Routes } from \"../services/configs\";\r\nimport ArtificialIntelligence from \"./gameplay/ArtificialIntelligence\";\r\nconst SinglePlayer = () => {\r\n    // This game is a game between a player and the artificial intelligense\r\n    const [dimension, setDimension] = useState(4);\r\n    const [isScoreless, setScoreless] = useState(false);\r\n    const [difficulty, setDifficulty] = useState(1);\r\n    const dispatch = useDispatch();\r\n    const context = useContext(GlobalContext);\r\n\r\n    const onStartSinglePlayerClick = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await dispatch(\r\n                RegisterSinglePlayer(dimension, isScoreless, difficulty)\r\n            );\r\n            context.goTo(Routes.Client.SingleGameplay);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <hr />\r\n            <Form onSubmit={(event) => onStartSinglePlayerClick(event)}>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">نوع بازی</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Radio\r\n                            value=\"0\"\r\n                            name=\"scoreless\"\r\n                            checked={!isScoreless}\r\n                            onChange={() => setScoreless(false)}\r\n                        />\r\n                        <InputGroup.Text className=\"ml-5\">\r\n                            امتیازی\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Radio\r\n                            value=\"1\"\r\n                            name=\"scoreless\"\r\n                            checked={isScoreless}\r\n                            onChange={() => setScoreless(true)}\r\n                        />\r\n                        <InputGroup.Text>سرعتی</InputGroup.Text>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"3\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 3}\r\n                                onChange={() => setDimension(3)}\r\n                            />\r\n                            <InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"4\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 4}\r\n                                onChange={() => setDimension(4)}\r\n                            />\r\n                            <InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-3\">\r\n                            <InputGroup.Radio\r\n                                value=\"5\"\r\n                                name=\"tableDimension\"\r\n                                checked={dimension === 5}\r\n                                onChange={() => setDimension(5)}\r\n                            />\r\n                            <InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"pb-2 w-25\">درجه سختی</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2%\",\r\n                        }}\r\n                    >\r\n                        <InputGroup.Radio\r\n                            value=\"0\"\r\n                            name=\"difficulty\"\r\n                            checked={\r\n                                difficulty ===\r\n                                ArtificialIntelligence.LEVELS.Noob\r\n                            }\r\n                            onChange={() =>\r\n                                setDifficulty(\r\n                                    ArtificialIntelligence.LEVELS.Noob\r\n                                )\r\n                            }\r\n                        />\r\n                        <InputGroup.Text className=\"ml-5\">راحت</InputGroup.Text>\r\n                        <InputGroup.Radio\r\n                            value=\"1\"\r\n                            name=\"difficulty\"\r\n                            checked={\r\n                                difficulty ===\r\n                                ArtificialIntelligence.LEVELS.Ordinary\r\n                            }\r\n                            onChange={() =>\r\n                                setDifficulty(\r\n                                    ArtificialIntelligence.LEVELS.Ordinary\r\n                                )\r\n                            }\r\n                        />\r\n                        <InputGroup.Text className=\"ml-5\">\r\n                            متوسط\r\n                        </InputGroup.Text>\r\n                        <InputGroup.Radio\r\n                            value=\"1\"\r\n                            name=\"difficulty\"\r\n                            checked={\r\n                                difficulty === ArtificialIntelligence.LEVELS.Pro\r\n                            }\r\n                            onChange={() =>\r\n                                setDifficulty(ArtificialIntelligence.LEVELS.Pro)\r\n                            }\r\n                        />\r\n                        <InputGroup.Text>سخت</InputGroup.Text>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                <Button\r\n                    type=\"submit\"\r\n                    className=\"mt-4 animated-button\"\r\n                    block\r\n                    variant=\"success\"\r\n                >\r\n                    <i\r\n                        className=\"fa fa-street-view px-2\"\r\n                        aria-hidden=\"true\"\r\n                    ></i>\r\n                    شروع بازی\r\n                </Button>\r\n            </Form>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default SinglePlayer;\r\n","import MultiGamePlay from \"./gameplay/MultiGamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RandomGame from \"./RandomGame\";\r\nimport {\r\n  Tab,\r\n  Tabs,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { Fragment, useState } from \"react\";\r\nimport Leagues from \"../leagues/Leagues\";\r\nimport SinglePlayer from \"./SinglePlayer\";\r\n\r\nconst GameDeck = () => {\r\n  const room = useSelector((state) => state.room);\r\n  const game = useSelector((state) => state.game);\r\n  const [continueGame, setContinueGame] = useState(false);\r\n  const [surrender, setSurrender] = useState(false);\r\n\r\n  const onSurrenderClick = () => {\r\n    setSurrender(true);\r\n    setContinueGame(true);\r\n  };\r\n\r\n  //***** */ show opponent record before game start choice\r\n  return (\r\n    <Fragment>\r\n      {continueGame && room.name ? (\r\n        <MultiGamePlay surrender={surrender} />\r\n      ) : (\r\n        <Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n          <Card.Body>\r\n            <Tabs\r\n              transition={false}\r\n              variant=\"pills\"\r\n              // transition={Fade}\r\n              className=\"mb-3\"\r\n            >\r\n              {Boolean(room.name) && (\r\n                <Tab eventKey=\"currentGame\" title=\"بازی کنونی\">\r\n                  <Container>\r\n                    <hr />\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col>\r\n                        <Alert\r\n                          className=\"text-center\"\r\n                          variant=\"primary\"\r\n                        >{`نوع بازی: ${\r\n                          room.scoreless ? \"سرعتی\" : \"امتیازی\"\r\n                        }`}</Alert>\r\n                      </Col>\r\n                      <Col>\r\n                        <Alert\r\n                          className=\"text-center\"\r\n                          variant=\"primary\"\r\n                        >{`ابعاد بازی: ${room.type} * ${room.type} * ${room.type}`}</Alert>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                      <Col>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"mt-4 animated-button\"\r\n                          block\r\n                          variant=\"primary\"\r\n                          onClick={() => setContinueGame(true)}\r\n                        >\r\n                          <i\r\n                            className=\"fa fa-gamepad-o px-2\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                          {game ? \"ادامه\" : \"شروع\"}\r\n                        </Button>\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"mt-4 animated-button\"\r\n                          block\r\n                          variant=\"danger\"\r\n                          onClick={onSurrenderClick}\r\n                        >\r\n                          <i\r\n                            className=\"fa fa-gamepad-o px-2\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                          {game ? \"تسلیم\" : \"لغو\"}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Tab>\r\n              )}\r\n              <Tab\r\n                eventKey=\"randomGame\"\r\n                disabled={Boolean(room.name)}\r\n                title=\"بازی تصادفی\"\r\n              >\r\n                <RandomGame />\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"leagues\"\r\n                disabled={Boolean(room.name)}\r\n                title=\"لیگ ها\"\r\n              >\r\n                <Leagues />\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"singleplayer\"\r\n                disabled={Boolean(room.name)}\r\n                title=\"تک نفره\"\r\n              >\r\n                <SinglePlayer />\r\n              </Tab>\r\n            </Tabs>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport ScoresTable from \"./ScoresTable\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nclass ScoresTableContainer extends Component {\r\n\tstate = {\r\n\t\tliveScores: [],\r\n\t\tfinalScores: [],\r\n\t\tshowLiveOnes: false,\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t// get all game results , live or final, handling promises\r\n\t\t// client and server side for this Module seriously need to be edited\r\n\t\t(async () => {\r\n\t\t\tthis.setState({ loading: true }); // use preloader here?\r\n\t\t\tconst { data, status } = await gameServices.getAllGames();\r\n\t\t\tif (status === Configs.Status.Successful) return data.allGames;\r\n\t\t\treturn [];\r\n\t\t})()\r\n\t\t\t.then((result) => {\r\n\t\t\t\tresult = [...result.reverse()];\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tliveScores: result.filter((game) => game.isLive),\r\n\t\t\t\t\tfinalScores: result.filter((game) => !game.isLive),\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\t//EDIT EDIT EDIT\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//******* handle errors */\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"بارگذاری لیست بازی ها موفقیت آمیز نبود. لطفا لحظاتی بعد مجددا تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.setState({ finalScores: [], loading: false });\r\n\t\t\t});\r\n\t}\r\n\r\n\tbtnShowLiveScores = () => {\r\n\t\tthis.setState({ showLiveOnes: true });\r\n\t};\r\n\r\n\tbtnShowFinalScores = () => {\r\n\t\tthis.setState({ showLiveOnes: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\t// game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n\t\t/* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n\t\tlet { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n\t\t// DESIGN : USE <Tabs> ???\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row className=\"scores-mode-select-layout m-0 p-0\">\r\n\t\t\t\t\t<Col className=\"w-100 m-0 p-0 pl-1\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\tshowLiveOnes\r\n\t\t\t\t\t\t\t\t\t? \"outline-success\"\r\n\t\t\t\t\t\t\t\t\t: \"outline-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"scores-mode-select-button\"\r\n\t\t\t\t\t\t\tonClick={this.btnShowLiveScores}>\r\n\t\t\t\t\t\t\tنتایج زنده\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-play-circle px-3\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"w-100 m-0 p-0 \">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t!showLiveOnes\r\n\t\t\t\t\t\t\t\t\t? \"outline-success\"\r\n\t\t\t\t\t\t\t\t\t: \"outline-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"scores-mode-select-button\"\r\n\t\t\t\t\t\t\tonClick={this.btnShowFinalScores}>\r\n\t\t\t\t\t\t\tنتایج نهایی\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-check-circle-o px-3\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<hr />\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{/* this single column is to make mode select buttons and ScoresTable same width */}\r\n\t\t\t\t\t\t<ScoresTable\r\n\t\t\t\t\t\t\tscores={showLiveOnes ? liveScores : finalScores}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ScoresTableContainer;\r\n","import { Button, Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage, Routes } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\nimport GlobalContext from './../globals/state/GlobalContext';\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstatic contextType = GlobalContext;\r\n\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.context.goTo(Routes.Client.Root);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\"ورود با مشکل مواجه شد. لطفا ارتباط اینترنت خود را بررسی کنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3 form-inline\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\tclassName=\"mb-3 form-inline\"\r\n\t\t\t\t\t\t\t\tcontrolId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tرمز عبور\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row className=\"p-0\">\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModalSignIn;\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err && err.response && err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card animated-form\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام خانوادگی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>شماره دانشجویی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>تایید رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Row className=\"justify-content-center my-3\">\r\n\t\t\t\t\t\t\t<ReCAPTCHA sitekey=\"Your client site key\" />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import { useSelector } from 'react-redux';\r\nconst SingleRankCard = ({rowNumber, playerID, name, records }) => {\r\n    const me = useSelector(state => state.me);\r\n\r\n    return (\r\n        <tr className={!me || playerID !== me.userID ? \"\" : \"bg-success\"}>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{records.points}</td>\r\n            <td>{records.wins}</td>\r\n            <td>{records.loses}</td>\r\n            <td>{records.draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SingleRankCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SingleRankCard from \"./SingleRankCard\";\r\n\r\nconst Rankings = ({ players, rankByProgress }) => {\r\n\treturn (\r\n\t\t<Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n\t\t\t<Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n\t\t\t<table className=\"table table-striped table-bordered table-hover text-center\">\r\n\t\t\t\t<thead className=\"bg-info\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t\t\t\t<th scope=\"col\">نام بازیکن</th>\r\n\t\t\t\t\t\t<th scope=\"col\">امتیاز</th>\r\n\t\t\t\t\t\t<th scope=\"col\">تعداد برد</th>\r\n\t\t\t\t\t\t<th scope=\"col\">تعداد باخت</th>\r\n\t\t\t\t\t\t<th scope=\"col\">تعداد تساوی</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{players.map((player) => (\r\n\t\t\t\t\t\t<SingleRankCard\r\n\t\t\t\t\t\t\tkey={player.userID}\r\n\t\t\t\t\t\t\trowNumber={\r\n\t\t\t\t\t\t\t\tplayers.findIndex(\r\n\t\t\t\t\t\t\t\t\t(p) => p.userID === player.userID\r\n\t\t\t\t\t\t\t\t) + 1\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplayerID={player.userID}\r\n\t\t\t\t\t\t\tname={player.fullname}\r\n\t\t\t\t\t\t\trecords={rankByProgress ? player.progress : player.records} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Rankings;\r\n","import { Component } from \"react\";\r\nimport Rankings from \"./Rankings\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs, { Status } from \"../../services/configs\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../../tools/notification\";\r\n\r\nclass RankingsContainer extends Component {\r\n\tstate = { players: [], loading: false };\r\n\r\n\tcomponentDidMount() {\r\n\t\t(async () => {\r\n\t\t\tthis.setState({ loading: true });\r\n\t\t\tconst { data, status } = await userServices.getAllPlayers();\r\n\t\t\tif (status === Configs.Status.Successful) return data.players;\r\n\t\t\treturn [];\r\n\t\t})()\r\n\t\t\t.then((result) => {\r\n\t\t\t\tlet tempPlayers = [...result];\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tplayers: tempPlayers.sort(\r\n\t\t\t\t\t\t//sort priorities: 1. more points 2. more wins 3. less loses\r\n\t\t\t\t\t\t(p1, p2) =>\r\n\t\t\t\t\t\t\tp2.records.points - p1.records.points ||\r\n\t\t\t\t\t\t\tp2.records.wins - p1.records.wins ||\r\n\t\t\t\t\t\t\tp1.records.loses - p2.records.loses\r\n\t\t\t\t\t),\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//******* handle errors */\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"بارگذاری جدول رده بندی موفقیت آمیز نبود. لطفا ارتباط اینترنتی خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.setState({ players: [], loading: false });\r\n\t\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { players, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Row className=\"mx-auto mt-3\">\r\n\t\t\t\t{loading ? <LoadingBar loading={loading} /> : null}\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Rankings players={players} />\r\n\t\t\t\t</Row>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default RankingsContainer;\r\n","import { Card, Col, Form, Row, Button } from \"react-bootstrap\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport '../profile.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst EditStudent = ({userID}) => {\r\n    const [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        //find student via userID\r\n\r\n        setLoading(false)\r\n    }, [])\r\n    const saveChanges = (event) => {\r\n        event.preventDefaults();\r\n    }\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"Full Name\"\r\n\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">ایمیل</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n                    disabled\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n                <Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default EditStudent;\r\n","import { Button, Card, Col, Form, Row, Tabs } from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport EditStudent from \"./EditStudent\";\r\nimport \"../profile.css\";\r\nimport { useState } from \"react\";\r\nconst StudentsManagement = () => {\r\n\tconst [userID, setUserID] = useState(null);\r\n    const [lookFor, setLookFor] = useState(\"\");\r\n\r\n    const searchForStudent = (event) => {\r\n        event.preventDefaults();\r\n        // search data base and find student name\r\n        // return student userID\r\n        // then in each tab request data associated with the userid\r\n    }\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t{!userID && <Card.Header>\r\n\t\t\t\t<Form onSubmit={e => searchForStudent(e)}>\r\n\t\t\t\t\t<Row className=\" w-100\">\r\n\t\t\t\t\t\t<Col lg={10} md={10} sm={9} xs={9}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"نام دانشجو\"\r\n                                value={lookFor}\r\n                                onChange={e => setLookFor(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox mt-0 animated-textbox\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"text-left\" lg={2} md={2} sm={3} xs={3}>\r\n\t\t\t\t\t\t\t<Button className=\"animated-button\" block variant=\"warning\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form>\r\n\t\t\t</Card.Header>}\r\n\t\t\t{userID && (\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tdefaultActiveKey=\"strecords\"\r\n\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t<Tab eventKey=\"strecords\" title=\"رکوردها\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stedit\" title=\"ویرایش دانشجو\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<EditStudent userID={userID}/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stfriends\" title=\"روابط\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stdelete\" title=\"حذف\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default StudentsManagement;\r\n","import { useState } from \"react\";\r\nimport { Row, Col, Form, Button, Card } from \"react-bootstrap\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport { Sorry, OK } from \"./../../tools/notification\";\r\nimport gameServices from \"./../../services/http/gameServices\";\r\nimport { Status } from \"../../services/configs\";\r\n\r\nconst LeaguesManager = () => {\r\n\tconst [Mode, setMode] = useState(0);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [capacity, setCapacity] = useState(20);\r\n\tconst [prize, setPrize] = useState(50);\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\tconst [dimension, setDimension] = useState(4);\r\n\tconst [isScoreless, setScoreless] = useState(false);\r\n\r\n\tconst create = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tconst { status } = await gameServices.createLeague(\r\n\t\t\t\tpassword,\r\n\t\t\t\tMode,\r\n\t\t\t\tisScoreless,\r\n\t\t\t\tdimension,\r\n\t\t\t\ttitle,\r\n\t\t\t\tcapacity,\r\n\t\t\t\tprize\r\n\t\t\t);\r\n\t\t\tif (status === Status.CreatedSuccessfully)\r\n\t\t\t\tOK(`لیگ ${title} با موفقیت ساخته شد.`);\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطا در برقراری ارتباط ... لطفا ارتباط خود را با اینترنت بررسی کنید.\"\r\n\t\t\t\t);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\tconst Modes = { Kickout: 0, Main: 1, Championship: 2, Custom: 3 };\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => create(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card\r\n\t\t\t\tborder=\"success\"\r\n\t\t\t\tbg=\"transparent\"\r\n\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t<Card.Header className=\"text-center\">لیگ منیجر</Card.Header>\r\n\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t<Row className=\"my-1\">\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"نام لیگ باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder=\"نام لیگ\"\r\n\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"my-1 justify-content-center\">\r\n\t\t\t\t\t\t<Form.Label className=\"text-center\">نوع لیگ</Form.Label>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"m-0 p-0 justify-content-center\">\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Kickout\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Kickout)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\tحذفی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Main\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Main)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\tامتیازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Championship\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Championship)}>\r\n\t\t\t\t\t\t\t\tقهرمانان\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tMode === Modes.Custom\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() => setMode(Modes.Custom)}>\r\n\t\t\t\t\t\t\t\tکاستوم\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"my-1 justify-content-center\">\r\n\t\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\t\tنوع بازی ها\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"my-1 justify-content-center\">\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tdimension === 3\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setDimension(3)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t3 * 3 * 3\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tdimension === 4\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setDimension(4)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t4 * 4 * 4\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tdimension === 5\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() => setDimension(5)}>\r\n\t\t\t\t\t\t\t\t5 * 5 * 5\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"my-1  justify-content-center\">\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\tisScoreless\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setScoreless(true)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\tسرعتی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\" xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant={\r\n\t\t\t\t\t\t\t\t\t!isScoreless\r\n\t\t\t\t\t\t\t\t\t\t? \"success\"\r\n\t\t\t\t\t\t\t\t\t\t: \"outline-secondary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => setScoreless(false)}\r\n\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\tامتیازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Row className=\"my-1 justify-content-center\">\r\n\t\t\t\t\t\t<Form.Label className=\"text-center\">تنظیمات</Form.Label>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\">\r\n\t\t\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t\t\t<Row className=\"justify-content-around\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\tظرفیت\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"ظرفیت\"\r\n\t\t\t\t\t\t\t\tvalue={capacity}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setCapacity(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"my-1 text-center\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row className=\"justify-content-around\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\tجایزه(امتیاز)\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox animated-textbox text-center\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"جایزه\"\r\n\t\t\t\t\t\t\t\tvalue={prize}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPrize(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"p-1 m-0 mt-4\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t\t<Form.Label className=\"text-center w-100 my-2\">\r\n\t\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tساخت لیگ\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default LeaguesManager;\r\n","import { Card, Row } from \"react-bootstrap\";\r\nimport \"./matches.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { toTimeShort } from \"../../tools/format\";\r\n\r\nconst SingleMatchCard = ({ Type, date, playerX, playerO, schedule }) => {\r\n\tconst me = useSelector(state => state.me);\r\n\tconst [cardOnClick, setCardOnClick] = useState(() => {});\r\n\tconst [cardColor, setCardColor] = useState(null);\r\n\t\r\n\t// change this structure to remove using of context\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst now = new Date();\r\n\t\tconsole.log(\"now: \", now, \"\\nschedule: \", schedule);\r\n\t\tif(me && (me.userID.toString() === playerX.userID.toString() || me.userID.toString() === playerO.userID.toString())){\r\n\t\t\tif(now >= new Date(schedule)){\r\n\t\t\t\t// if its due is passed, make the cardf red indicating the player has lost the game\r\n\t\t\t\t// other wise add a onClick and color to the corresponding card\r\n\t\t\t\tsetCardColor(\"success\");\r\n\t\t\t\tsetCardOnClick( () => {\r\n\t\t\t\t\t// trig event in GlobbalSocket to create the room for game\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [schedule, playerO, playerO, me])\r\n\treturn (\r\n\t\t<Card bg={cardColor} border=\"primary\" className=\"single-match-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"text-center mx-auto\">\r\n\t\t\t\t\t<span className=\"col-lg-5 col-md-6 text-right\">\r\n\t\t\t\t\t\t{playerX.fullname}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"col-lg-2 col-md-2 text-center\">{toTimeShort(schedule)}</span>\r\n\t\t\t\t\t<span className=\"col-lg-5 col-md-6 text-left\">\r\n\t\t\t\t\t\t{playerO.fullname}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SingleMatchCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport {  Fragment } from \"react\";\r\nimport SingleMatchCard from \"./SingleMatchCard\";\r\n\r\nimport \"./matches.css\";\r\nconst MatchesTable = ({ongoing}) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{Boolean(ongoing.length) ? (\r\n\t\t\t\tongoing.map((match) => (\r\n\t\t\t\t\t<SingleMatchCard\r\n\t\t\t\t\t\t// key={match.gameID}\r\n\t\t\t\t\t\tschedule={match.schedule}\r\n\t\t\t\t\t\tplayerX={match.players[0]}\r\n\t\t\t\t\t\tplayerO={match.players[1]} />\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n\t\t\t\t\t<Card.Body className=\"text-center\">\r\n\t\t\t\t\t\t<Card.Text>هیچ قرعه ای انجام نگرفته است</Card.Text>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default MatchesTable;\r\n","import { useSelector } from \"react-redux\";\r\nimport MatchesTable from \"./matches/MatchesTable\";\r\nimport { Tab, Tabs, Card } from \"react-bootstrap\";\r\nimport Rankings from \"../tables/rankings/Rankings\";\r\n\r\nconst LeagueHome = () => {\r\n\tconst league = useSelector((state) => state.league);\r\n\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tborder=\"primary\"\r\n\t\t\tbg=\"transparent\"\r\n\t\t\tclassName=\"single-league-card\">\r\n\t\t\t{Boolean(league) && (\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tdefaultActiveKey=\"draws\"\r\n\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t<Tab eventKey=\"draws\" title=\"بازی ها\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<MatchesTable ongoing={league.ongoing} />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"table\" title=\"جدول\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Rankings\r\n\t\t\t\t\t\t\t\tplayers={league.contesters}\r\n\t\t\t\t\t\t\t\trankByProgress={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"details\" title=\"جزییات\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default LeagueHome;\r\n","import { Row, Col } from \"react-bootstrap\";\r\nimport LeagueHome from \"./../leagues/LeagueHome\";\r\nimport { EnterLeague, ExitLeague } from \"./../globals/redux/actions/league\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nconst LeagueLayout = () => {\r\n\t// right side => player record inside the league\r\n\t// left sidebar => my upcomming games\r\n\t// middle section => all games in this round\r\n\t// not started games will have empty score badges\r\n\t// started games score will be written, but the whole score card will be with minimum height, no game info button is needed\r\n\tconst dispatch = useDispatch();\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\t// this form of dispatching is used to support preloaders\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait dispatch(EnterLeague(browserStorage.LEAGUE()));\r\n\t\t\t\t// profile unmounted\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ExitLeague());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Row>\r\n            <AutoSignIn />\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Col xs={12} sm={12} md={4} lg={3}></Col>\r\n\t\t\t<Col>\r\n\t\t\t\t<LeagueHome />\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={0} sm={0} md={0} lg={3}></Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default LeagueLayout;\r\n","import { Component } from \"react\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport { T3DLogic } from \"./GameLogics\";\r\nimport { Routes } from \"../../services/configs\";\r\nimport ArtificialIntelligence from \"./ArtificialIntelligence\";\r\n\r\nclass SingleGamePlay extends Component {\r\n    static contextType = GlobalContext;\r\n\r\n    state = {\r\n        players: [\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n                color: \"blue\",\r\n                lineColor: \"primary\",\r\n                score: 0,\r\n            },\r\n            {\r\n                // ID: '',\r\n                shape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n                color: \"darkred\",\r\n                lineColor: \"danger\",\r\n                score: 0,\r\n            },\r\n        ], // maybe use player actual user name and change this item to an object of objects?\r\n        turn: 1, // after calling rescheduleDeadline in componentDidMount => turn ===0\r\n        dimension: 4,\r\n        table: null,\r\n        empties: 64,\r\n        myTurn: undefined, // change this\r\n        timeRemaining: 0, //create a config\r\n        deadlineID: null,\r\n        ai: null,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.cellButtons = [];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { game } = this.props;\r\n        if (game) {\r\n            this.cellButtons =\r\n                document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n            const { dimension, table, myTurn, empties } = game;\r\n            const ai = new ArtificialIntelligence(\r\n                Number(!myTurn),\r\n                table,\r\n                game.difficulty,\r\n                dimension\r\n            );\r\n            this.setState({ table, myTurn, dimension, empties, ai });\r\n            this.rescheduleDeadline();\r\n            setTimeout(() => {\r\n                this.updateGameScorebaord();\r\n            }, 2000);\r\n        } else {\r\n            this.context.goTo(Routes.Client.GameDeck);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { deadlineID } = this.state;\r\n        clearTimeout(deadlineID); //move time out timer\r\n    }\r\n    updateGameScorebaord = () => {\r\n        const { myTurn, players } = this.state;\r\n        const oppTurn = Number(!myTurn);\r\n\r\n        this.props.UpdateScoreboard({\r\n            me: {\r\n                index: myTurn,\r\n                shape: players[myTurn].shape,\r\n                score: players[myTurn].score,\r\n            },\r\n            opp: {\r\n                index: oppTurn,\r\n                shape: players[oppTurn].shape,\r\n                score: players[oppTurn].score,\r\n            },\r\n        });\r\n    };\r\n\r\n    rescheduleDeadline = () => {\r\n        const { turn } = this.state;\r\n        this.setState({\r\n            timeRemaining: Math.floor(T3DLogic.Rules.TurnTimeOut),\r\n            turn: (turn + 1) % 2,\r\n        });\r\n        //is it needed to declare deadlineID as state?\r\n        if (this.state.deadlineID) clearInterval(this.state.deadlineID);\r\n        const deadlineID = setInterval(() => {\r\n            const { timeRemaining, turn, myTurn } = this.state;\r\n            if (turn !== myTurn) this.react();\r\n            else if (timeRemaining > 0)\r\n                this.setState({ timeRemaining: timeRemaining - 1 });\r\n            else this.rescheduleDeadline();\r\n        }, 1000);\r\n        this.setState({ deadlineID });\r\n    };\r\n\r\n    react = () => {\r\n        try {\r\n            const { table, dimension, turn, myTurn, ai } = this.state;\r\n            const nextMove = ai.reaction(table);\r\n            if (nextMove && turn !== myTurn) {\r\n                const verified = this.verifyAndApplyTheMove(\r\n                    nextMove,\r\n                    this.cellButtons[\r\n                        T3DLogic.getButtonCoordinates(dimension, nextMove)\r\n                    ]\r\n                );\r\n                if (verified) {\r\n                    ai.update(nextMove, ai.turn);\r\n                } else {\r\n                    // sth went wrong (cell was full)\r\n                }\r\n            } else {\r\n                //error happened\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    onEachCellClick = (event) => {\r\n        const { dimension, turn, myTurn, ai } = this.state;\r\n        console.log(this.state);\r\n        if (turn === myTurn) {\r\n            try {\r\n                const selectedCellButton = event.target;\r\n\r\n                const cell = T3DLogic.getCellCoordinates(\r\n                    selectedCellButton.id,\r\n                    dimension\r\n                );\r\n                if (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n                    ai.update(cell, myTurn);\r\n                    // setTimeout(() => this.react(), 1000);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            // ??wtf\r\n        }\r\n    };\r\n\r\n    verifyAndApplyTheMove = (cell, cellButton) => {\r\n        const { turn } = this.state;\r\n\r\n        let tempTable = [...this.state.table];\r\n        cellButton.focus();\r\n        if (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n            tempTable[cell.floor][cell.row][cell.column] = turn + 1; //maybe its better to use players actual Id huh?\r\n            this.setState({ table: tempTable });\r\n\r\n            cellButton.style.opacity = 0.0;\r\n            setTimeout(() => {\r\n                cellButton.className = `game-table-cells player-${\r\n                    turn ? \"o\" : \"x\"\r\n                }-cell animate-new-move`;\r\n                cellButton.style.opacity = 1.0;\r\n            }, 100);\r\n            --this.state.empties;\r\n\r\n            T3DLogic.inspectAreaAroundTheCell(\r\n                cell,\r\n                this.state,\r\n                this.connectScoreLines\r\n            );\r\n            if (this.state.empties <= 0)\r\n                T3DLogic.endThisGame(this.state, this.onCloseGame);\r\n            else this.rescheduleDeadline();\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // method below: checks each possible line(according to the condition that user gives it),\r\n    // if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n    connectScoreLines = (firstCell, step, index) => {\r\n        const { dimension, turn } = this.state;\r\n        const players = [...this.state.players];\r\n        const { game } = this.props;\r\n        for (let i = 0; i < dimension; i++) {\r\n            this.cellButtons[\r\n                firstCell + i * step\r\n            ].className = `game-table-cells btn btn-${players[index].lineColor}`;\r\n            !game.scoreless &&\r\n                setTimeout(() => {\r\n                    this.cellButtons[\r\n                        firstCell + i * step\r\n                    ].className = `game-table-cells player-${\r\n                        turn ? \"o\" : \"x\"\r\n                    }-cell`;\r\n                }, 1000 + i * 100);\r\n        }\r\n        ++players[index].score;\r\n        this.setState({ players });\r\n        this.updateGameScorebaord();\r\n        if (game.scoreless) this.state.empties = 0;\r\n    };\r\n\r\n    /***************END THIS GAME IS IN GAMELOGICS */\r\n    onCloseGame = () => {\r\n        clearTimeout(this.state.deadlineID);\r\n        setTimeout(() => {\r\n            this.props.CloseOngoingGame();\r\n            this.context.goTo(\"/\");\r\n        }, 3000);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <TableDesign\r\n                dimension={this.state.dimension}\r\n                players={this.state.players}\r\n                table={this.state.table}\r\n                turn={this.state.turn}\r\n                timeRemaining={this.state.timeRemaining}\r\n                onEachCellClick={this.onEachCellClick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withReduxDashboard(SingleGamePlay);\r\n","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/admin/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AcountManager from './../profile/edit/AcountManager';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTableContainer from './../tables/scores/ScoresTableContainer';\r\nimport SignUp from '../users/SignUp';\r\nimport RankingsContainer from '../tables/rankings/RankingsContainer';\r\nimport StudentsManagement from '../profile/admin/StudentsManagement';\r\nimport LeaguesManager from './../profile/admin/LeaguesManager';\r\nimport LeagueLayout from './../layouts/LeagueLayout';\r\nimport SingleGamePlay from '../games/gameplay/SingleGamePlay';\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AcountManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${Routes.Client.Admin}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.LeaguesManager}>\r\n\t\t\t\t\t\t\t<LeaguesManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.StudentManagement}>\r\n\t\t\t\t\t\t\t<StudentsManagement />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${Routes.Client.League}/:path?`} exact>\r\n\t\t\t\t<LeagueLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.League}>\r\n\t\t\t\t\t\t\t<LeaguesManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</LeagueLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SingleGameplay}>\r\n\t\t\t\t\t\t\t<SingleGamePlay />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<RankingsContainer />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTableContainer />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst { goTo } = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () =>\r\n\t\t\t\t\t\tgoTo(Routes.Client.ChatRoom)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID, gameInvitation.type));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tReloadRecords,\r\n\tReapeatRandomSearch,\r\n\tCloseRandomSearch,\r\n\tEmptyGameInvitations,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nimport { LoadThisPlayer } from \"./../../globals/redux/actions/player\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\tconst [reconnectingTimerID, setReconnectingTimerID] = useState(null);\r\n\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(\r\n\t\t(nextReconnectingTimeout = 5000) => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"global websocket connect called -> new socket returned\"\r\n\t\t\t);\r\n\t\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\t\tresolve(socket);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\t\tmsg.room && msg.room.name && dispatch(EnterRoom(msg.room));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tcontext.signOut();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\t\tconst { found, stats } = msg;\r\n\t\t\t\t\t\t\t\tif (found) {\r\n\t\t\t\t\t\t\t\t\tdispatch(EnterRoom(found));\r\n\t\t\t\t\t\t\t\t\tdispatch(CloseRandomSearch());\r\n\t\t\t\t\t\t\t\t\tmsg.opponent &&\r\n\t\t\t\t\t\t\t\t\t\tdispatch(LoadThisPlayer(msg.opponent));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\tif (!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (stats)\r\n\t\t\t\t\t\t\t\t\t//double check if stats is sent by server, this is for avoiding further crashes\r\n\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\tUpdateStatistics(\r\n\t\t\t\t\t\t\t\t\t\t\tstats.players,\r\n\t\t\t\t\t\t\t\t\t\t\tstats.games\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"GAME_CANCELLED\": {\r\n\t\t\t\t\t\t\t\tcontext.cancelGame();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\t\tif (answer) {\r\n\t\t\t\t\t\t\t\t\tOK(\r\n\t\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را پذیرفت`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t//reload for changing friendship status in the game => delay is set for restin assure that database is updated\r\n\t\t\t\t\t\t\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\t\tconst { askerID, askerName, gameType } = msg;\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tRecieveGameInvitation(\r\n\t\t\t\t\t\t\t\t\t\taskerID,\r\n\t\t\t\t\t\t\t\t\t\taskerName,\r\n\t\t\t\t\t\t\t\t\t\tgameType\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\t\tcontext.redirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve(socket);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\t\tsocket.close();\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`Reconnecting to global socket in ${\r\n\t\t\t\t\t\t\t\tnextReconnectingTimeout / 1000\r\n\t\t\t\t\t\t\t} seconds`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst timerID = setTimeout(() => {\r\n\t\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t\t? await connect(\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextReconnectingTimeout * 2\r\n\t\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})();\r\n\t\t\t\t\t\t}, nextReconnectingTimeout);\r\n\t\t\t\t\t\tsetReconnectingTimerID(timerID);\r\n\t\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t\t};\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(`global websocket error: ${err}`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t[dispatch, pack, iamSignedIn, iamBusy]\r\n\t);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\treconnectingTimerID && clearTimeout(reconnectingTimerID);\r\n\t\t};\r\n\t}, [reconnectingTimerID]);\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchRepeats,\r\n\t\tacceptedGame,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (randomSearchRepeats) {\r\n\t\t\tif (room.type) {\r\n\t\t\t\t//is it necessary?\r\n\t\t\t\t//completely making sure we're on right stage\r\n\t\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\t\tpack(\"find\", {\r\n\t\t\t\t\t\t\tgameType: room.type,\r\n\t\t\t\t\t\t\tscoreless: room.scoreless,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t} else if (!room.name) {\r\n\t\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchRepeats, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedGame) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedGame.inviterID,\r\n\t\t\t\t\t\tgameType: acceptedGame.type,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tdispatch(EmptyGameInvitations());\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget.targetID,\r\n\t\t\t\t\t\tgameType: friendlyGameTarget.type,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tdispatch,\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedGame,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\tif (answer)\r\n\t\t\t// if request accepted => reload friendship status after some seconds, delay is set to make sure friends are linked in database\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t}, 5000);\r\n\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { interactionsReducer } from './interactions';\r\nimport { leagueReducer } from './league';\r\nimport { gameReducer } from \"./game\";\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    interactions: interactionsReducer,\r\n    league: leagueReducer,\r\n    game: gameReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return {...action.payload};\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return {...action.payload};\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null, scoreless: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null, scoreless: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchRepeats: 0,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null,\r\n\t\tacceptedGame: null,\r\n\t\trecordReloadTrigger: false,\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const interactionsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_INTERACTIONS\":\r\n            return [...action.payload];\r\n        case \"RESET_INTERACTIONS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};","export const leagueReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_LEAGUE\":\r\n            return {...action.payload};\r\n        case \"EXIT_LEAGUE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","export const gameReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"REGISTER_GAME\":\r\n            return {...action.payload };\r\n        case \"RESET_GAME\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices:{ SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}"],"sourceRoot":""}