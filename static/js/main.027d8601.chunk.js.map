{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","services/configs/gamesetting.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","globals/redux/actions/game.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","globals/redux/actions/interactions.js","commons/LoadingBar.jsx","layouts/ProfilePanelLayout.jsx","services/http/gameServices.js","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/AllScores.jsx","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/admin/NoticeManager.jsx","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/edit/Credentials.jsx","profile/edit/PasswordChange.jsx","profile/edit/ImagePicker.jsx","profile/edit/AvatarChange.jsx","profile/edit/AcountManager.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/GamePlay.jsx","games/SingleGame.jsx","games/competitions/CompetitionSummary.jsx","games/competitions/CompetitionsMain.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTable.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SinglePlayerCard.jsx","tables/rankings/AllPlayers.jsx","tables/rankings/Rankings.jsx","profile/admin/EditStudent.jsx","profile/admin/StudentsManagement.jsx","commons/MainRouter.jsx","tools/NotificationCenter.jsx","globals/redux/actions/index.js","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/interactions.js","globals/redux/store/index.js","index.js","services/configs/index.js"],"names":["Profile","module","exports","Root","SignUp","SignIn","GameDeck","Rankings","GameGuide","ContactUs","ChatRoom","MyGamesAndFriends","Notices","StManagement","InfoEdit","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","MyAvatar","PasswordChange","Friends","Records","Administrators","Games","Mine","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","reset","clear","TOKEN","getItem","T3D","TableRowMargings","TurnTimeOut","RandomSearchRepeatLimit","GlobalContext","createContext","device","signOut","goTo","redirectToGamePlay","cancelGame","NavigationBar","me","useSelector","state","context","useContext","Navbar","style","borderBottom","bg","className","Container","Nav","activeClassName","to","Routes","Client","aria-hidden","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","expectedErrors","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAvatar","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","uploadAvatar","avatar","formData","FormData","append","getMyFriends","isMyFriend","targetID","ResetOpponent","dispatch","a","ResetMyPlayer","LoadMyPlayer","data","player","payload","EnterRoom","room","ExitRoom","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","findIndex","mode","Provider","value","push","destination","ProfilePanel","Row","Configs","aria-current","isAdmin","Button","variant","CollapsedPanel","border","borderRadius","AutoSignIn","opponent","storageToken","chatServices","getOurChat","friendID","getMyInteractions","UpdateMyChatList","name","sent","recieved","getState","myinteractions","interactions","find","interact","with","messages","friend","date","Date","LoadingBar","loading","whichOne","setWhichOne","Math","floor","random","useLayoutEffect","document","body","overflowY","height","selectedLoader","time","customLoading","ProfilePanelLayout","setLoading","myInteractions","Array","forEach","ownerOf","map","msg","owner","Error","Col","lg","sm","gameServices","getAllGames","getMyGames","objectify","DateObject","calendar","persian","locale","persian_fa","toHijri","format","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Card","Body","Footer","block","disabled","size","AllScores","scores","length","score","players","gameID","Text","Record","title","small","ListGroup","Item","Badge","pill","ReapeatRandomSearch","tools","randomSearchRepeats","GameSetting","CloseRandomSearch","EndFriendlyInvitation","friendlyGameTarget","ReloadRecords","recordReloadTrigger","reloadTrigger","FriendRecords","person","thisIsMe","gameType","setGameType","setAvatar","records","md","Image","src","alt","roundedCircle","points","wins","draws","loses","xs","InviteToFriendlyGame","setTimeout","InputGroup","Prepend","Radio","onChange","defaultChecked","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","setFriends","friendsCount","setFriendsCount","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","area-hidden","Content","Pane","filter","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","SendMessageTo","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","chat","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","current","scrollIntoView","behavior","top","offsetTop","index","ref","onSubmit","event","preventDefault","composeMessage","sort","i1","i2","getTime","setFullname","studentID","setStudentID","email","setEmail","password","setPassword","pageUpdateTrigger","triggerPageUpdate","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","checkConfirmPassword","ImagePicker","selector","preview","setPreview","Group","rounded","imageFile","oFReader","FileReader","readAsDataURL","onload","oFREvent","result","updatePreview","files","accept","htmlFor","AvatarChange","myAvatar","selectMyAvatar","upload","AcountManager","TABS","Tabs","SignInSideBar","onSignInSubmitted","setState","Number","props","replace","this","autoComplete","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","piece","setPiece","opp","isFriend","onFriendRequestClick","innerHTML","friendRequestTarget","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","resolve","server","WebSocket","onopen","send","scoreless","onerror","close","onclose","withReduxDashboard","component","LoadThisPlayer","UpdateScoreboard","details","CleanScoreboard","BriefScoreboard","timeRemaining","timeStamp","setTimeStamp","aThird","textAlign","TableDesign","dimension","table","onEachCellClick","dimens","cell","setCell","i","cellWidths","cellHeights","deviceWidth","window","innerWidth","deviceHeight","innerHeight","width","margin","h","w","row","direction","marginLeft","column","GamePlay","lineColor","turn","myTurn","socketGamePlay","playerOnline","timerID","connectionCheckTimerID","updateGameScorebaord","oppTurn","enableTimerForMyMove","timeout","clearInterval","setInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","surrender","startTime","IDs","opponentID","cellID","nextMove","verifyAndApplyTheMove","getCellCoordinates","cellButtons","focus","endThisGame","closeThisGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","navigator","onLine","loadCurrentGame","dimen","onFloorId","selectedCellButton","cellButton","tempTable","opacity","inspectAreaAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","tableRowFloorMainDiagCount","tableRowFloorSideDiagCount","tableColumnFloorMainDiagCount","tableColumnFloorSideDiagCount","connectTheScoreLines","firstCell","step","getElementsByClassName","SingleGame","setDimension","isScoreless","setScoreless","searching","setSearching","onStartGameClick","padding","checked","CompetitionSummary","summary","CompetitionsMain","continueGame","setContinueGame","setSurrender","transition","friendlyGame","href","ScoresTable","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","allGames","then","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","Modal","backdrop","show","onHide","closeButton","controlId","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SinglePlayerCard","rowNumber","scope","AllPlayers","p","tempPlayers","p1","p2","EditStudent","preventDefaults","StudentsManagement","lookFor","setLookFor","MainRouter","path","gameInvitation","pushed","NewMsg","by","inviterID","ID","acceptedGame","onClose","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","iamSignedIn","iamBusy","command","UpdateStatistics","answer","targetName","askerID","askerName","RecieveGameInvitation","respondToFriendshipRequest","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById","ClientRoutes","require","ServerRoutes"],"mappings":"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","file":"static/js/main.027d8601.chunk.js","sourcesContent":["//client routes\r\n// Partial Routes\r\nconst Profile = \"/Profile\",\r\n    ChatRoom = \"ChatRoom\",\r\n    MyGamesAndFriends = \"GamesFriends\",\r\n    Notices = \"Notices\",\r\n    StManagement = \"StManagement\",\r\n    InfoEdit = \"InfoEdit\";\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/SignUp\",\r\n    SignIn: \"/SignIn\",\r\n    GameDeck: \"/GameDeck\",\r\n    Rankings: \"/Rankings\",\r\n    GameGuide: \"/GameGuide\",\r\n    ContactUs: \"/ContacUs\",\r\n    Profile,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Profile}/${Notices}`,\r\n    StManagement: `${Profile}/${StManagement}`,\r\n    InfoEdit: `${Profile}/${InfoEdit}`\r\n};\r\n","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    MyAvatar: \"avatar\",\r\n    PasswordChange: \"password\",\r\n    Friends: \"friends\",\r\n    Records: \"records\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: \"single\",\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= 400\r\n        error.response.status < 500\r\n    );\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};\r\n","//browser storage keywords\r\nconst KeyToken = \"ptk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n};\r\n","module.exports = {\r\n    T3D: {\r\n        TableRowMargings: [0, 41, 82, 123, 164],\r\n        TurnTimeOut: 45, //secs\r\n    },\r\n    RandomSearchRepeatLimit: 5,\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {},\r\n    goTo: () => {},\r\n    redirectToGamePlay: () => {},\r\n    cancelGame: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar style={{borderBottom: '1px solid grey'}}  bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`درخواست بازی ${by.type}*${by.type}*${by.type} از ${by.name}\\n برای پذیرفتن دعوت کلیک کنید`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID, by.type),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\tconst expectedErrors =\r\n\t\t\terror.response &&\r\n\t\t\terror.response.status >= Status.BadRequest && // >= 400\r\n\t\t\terror.response.status < Status.InternalServerError; // < 500\r\n\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (!expectedErrors) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tsignIn: (user) =>\r\n\t\thttp.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t),\r\n\tgetPlayer: (userID) =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}/${userID}`),\r\n\tgetAvatar: (userID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.MyAvatar}/${userID}`\r\n\t\t),\r\n\tgetAllPlayers: () =>\r\n\t\thttp.get(`${Server.Root}/${Server.Users}/${Server.Records}`),\r\n\tgetMe: () => http.get(`${Server.Root}/${Server.Users}/${Server.Private}`),\r\n\tgetMyCredentials: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t),\r\n\teditMyCredentials: (newMe) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t),\r\n\tchangeMyPassword: (passwords) =>\r\n\t\thttp.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t),\r\n\tuploadAvatar: (avatar) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"avatar\", avatar);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.MyAvatar}`,\r\n\t\t\tformData,\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t),\r\n\tisMyFriend: (targetID) =>\r\n\t\thttp.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t)\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\n\r\nexport const ResetOpponent = () =>{\r\n    return async (dispatch) => {\r\n        await dispatch({type: \"RESET_OPPONENT\"});\r\n    }\r\n}\r\n\r\nexport const ResetMyPlayer = () => {\r\n    return async (dispatch) => {\r\n        await dispatch({ type: \"RESET_MINE\" });\r\n    };\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","export const EnterRoom = (room) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"ENTER_ROOM\",\r\n\t\t\tpayload: room,\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"EXIT_ROOM\",\r\n\t\t});\r\n\t\tawait dispatch({type: \"RESET_OPPONENT\"});\r\n\t};\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n\t};\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_SCOREBOARD\",\r\n\t\t\tpayload: details,\r\n\t\t});\r\n\t};\r\n};\r\n\r\n/*export const SetGameID = (gameID) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"SET_GAME_ID\",\r\n\t\t\tpayload: gameID,\r\n\t\t});\r\n\t};\r\n};*/\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ResetMyPlayer, ResetOpponent } from \"./../redux/actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./../redux/actions/game\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(\"GlobalStates rendered\"); //s\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t};\r\n\r\n\tconst cancelGame = () => {\r\n\t\tdispatch(ExitRoom());\r\n\t\thistory.push(Routes.Client.Root);\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t\tSorry(\"بازی از سوی یکی از بازیکنان لغو شد.\");\r\n\t};\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{ device, signOut, redirectToGamePlay, goTo, cancelGame }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = () => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                {/* <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button> */}\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item animated-button\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"animated-button\" >\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li className=\"animated-button\" > \r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.StManagement}>\r\n                                    مدیریت دانشجویان\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"animated-button\" >\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to={Configs.Routes.Client.InfoEdit}>\r\n                                    توضیحات سایت\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" className=\"animated-button\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\treturn (\r\n\t\t<Navbar\r\n\t\t\tbg=\"transparent\"\r\n\t\t\tstyle={{ border: \"1px solid grey\", borderRadius: \"5px\" }}\r\n\t\t\tclassName=\"justify-content-center p-2 mt-2 nav-pills text-right w-100\">\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\texact\r\n\t\t\t\tto={Configs.Routes.Client.Profile}\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\taria-current=\"page\">\r\n\t\t\t\t<i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t<i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\tclassName=\"nav-link mx-1\"\r\n\t\t\t\tto={Configs.Routes.Client.ChatRoom}>\r\n\t\t\t\t<i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t{me && me.isAdmin && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{/* admin tools */}\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tactiveClassName=\"btn btn-primary\"\r\n\t\t\t\t\t\tclassName=\"nav-link mx-1 border-top\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.Notices}>\r\n\t\t\t\t\t\t<i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.StManagement}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link link-dark\"\r\n\t\t\t\t\t\tto={Configs.Routes.Client.InfoEdit}>\r\n\t\t\t\t\t\t<i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outline-danger\"\r\n\t\t\t\tclassName=\"mx-3\"\r\n\t\t\t\tonClick={context.signOut}>\r\n\t\t\t\t<i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n\t\t\t</Button>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from './../globals/redux/actions/player';\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\tif (storageToken) {\r\n\t\t\tconsole.log(`auth called then `);\r\n\t\t\tdispatch(LoadMyPlayer());\r\n\t\t} else {\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myInteractions = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (interactions instanceof Array) {\r\n\t\t\t\t\t//interactions catched from server side, but it requires modification: sorting, formatting messages\r\n\t\t\t\t\tinteractions.forEach((interact) => {\r\n\t\t\t\t\t\t// reformat clients chats in his/her own viewpoint\r\n\t\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\t\tmyInteractions.push({\r\n\t\t\t\t\t\t\twith: friend,\r\n\t\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\tme: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: null,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\tme: null,\r\n\t\t\t\t\t\t\t\t\t\t\tfriend: msg.text,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: msg.date,\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait dispatch({\r\n\t\t\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\t\t\tpayload: myInteractions,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// dispatch friends here\r\n\t\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t\t} else throw new Error(\"null interaction response! means sth went wrong\");\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\n// export const ExtractFriends = () => {\r\n// \treturn async (dispatch, getState) => {\r\n// \t\tconst interactions = getState().interactions;\r\n// \t\tconst friends = Interactions\r\n// \t}\r\n// }\r\nexport const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n\t// one time u load from server, then new messages are simply pushed to previous data\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst myinteractions = getState().interactions;\r\n\t\t\tmyinteractions\r\n\t\t\t\t.find((interact) => interact.with.userID === friendID)\r\n\t\t\t\t.messages.push({\r\n\t\t\t\t\tname: name, //is name needed?\r\n\t\t\t\t\tme: sent ? text : null,\r\n\t\t\t\t\tfriend: recieved ? text : null,\r\n\t\t\t\t\tdate: new Date(),\r\n\t\t\t\t});\r\n\r\n\t\t\tawait dispatch({\r\n\t\t\t\ttype: \"LOAD_INTERACTIONS\",\r\n\t\t\t\tpayload: myinteractions,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t//..propeer message\r\n\t\t\t// ...reset?\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetInteractions = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_INTERACTIONS\" });\r\n\t};\r\n};\r\n","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport {\r\n\tLoadInteractions,\r\n\tResetInteractions,\r\n} from \"../globals/redux/actions/interactions\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tawait dispatch(LoadMyPlayer());\r\n\t\t\t\tawait dispatch(LoadInteractions());\r\n\t\t\t\t// profile unmounted\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n\t\t\tdispatch(ResetInteractions());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device === Devices.Desktop ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col lg={3}>\r\n\t\t\t\t\t\t<ProfilePanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={9}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t<Col className=\"mx-auto\" sm={12}>\r\n\t\t\t\t\t\t<CollapsedPanel />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12}>{children}</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n\tgetAllGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}`);\r\n\t},\r\n\tgetMyGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`);\r\n\t}\r\n};\r\n\r\nexport default gameServices;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Container, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { toHijri } from \"../../tools/format\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport { Devices } from \"../../services/configs\";\r\n\r\nconst SingleScoreCard = ({\r\n\tType,\r\n\tdate,\r\n\tplayerXName,\r\n\tplayerOName,\r\n\txScore,\r\n\toScore,\r\n}) => {\r\n\t// format score text:\r\n\tconst [xBadge, setXBadge] = useState(null);\r\n\tconst [oBadge, setOBadge] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHijriDate(toHijri(date)[0]); //toHijri = [date, time]\r\n\t\tif (xScore > oScore) {\r\n\t\t\t// x won\r\n\t\t\tsetXBadge(\"badge-success\");\r\n\t\t\tsetOBadge(\"badge-danger\");\r\n\t\t} else if (xScore === oScore) {\r\n\t\t\t//draw\r\n\t\t\tsetXBadge(\"badge-warning\");\r\n\t\t\tsetOBadge(\"badge-warning\");\r\n\t\t} else {\r\n\t\t\t// o won\r\n\t\t\tsetOBadge(\"badge-success\");\r\n\t\t\tsetXBadge(\"badge-danger\");\r\n\t\t}\r\n\t}, [date, xScore, oScore]);\r\n\t// make this card 'bg-transparent' too?\r\n\treturn (\r\n\t\t<Card border=\"dark\" className=\"single-score-card\">\r\n\t\t\t{/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"text-center mx-auto\">\r\n\t\t\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerXName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-lg-1 col-md-1`}>\r\n\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"col-lg-5 col-md-5\">\r\n\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">{playerXName}</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${xBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{xScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n                            <hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<span className=\"col-10 text-right\">\r\n\t\t\t\t\t\t\t\t\t{playerOName}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={`badge badge-pill ${oBadge} single-score-badge col-2`}>\r\n\t\t\t\t\t\t\t\t\t{oScore}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer className=\"p-0\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outline-dark\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tclassName=\"replay-game-button\">\r\n\t\t\t\t\t{hijriDate}\r\n\t\t\t\t\t<i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n\t\t\t\t</Button>\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <Fragment>\r\n            { scores.length ? scores.map(score => (\r\n                <SingleScoreCard key={score.gameID}\r\n                    Type={score.Type}\r\n                    date={score.date}\r\n                    playerXName={score.players[0].name}\r\n                    playerOName={score.players[1].name}\r\n                    xScore={score.players[0].score}\r\n                    oScore={score.players[1].score}\r\n                ></SingleScoreCard>\r\n            )) :\r\n            <Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n                <Card.Body className=\"text-center\">\r\n                    <Card.Text>\r\n                        هیچ بازی ای انجام نگرفته است\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                </Card>}\r\n        </Fragment>\r\n     );\r\n};\r\n \r\nexport default AllScores;","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-center\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","import { GameSetting } from \"../../../services/configs\";\r\n\r\nexport const ReapeatRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = (tools.randomSearchRepeats + 1) % GameSetting.RandomSearchRepeatLimit;\r\n        // randomSearchRepeats === 0 => means nor search is not happening or its happening and has reached to maximum allowed retries\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const CloseRandomSearch = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.randomSearchRepeats = 0;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = targetID;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendRequestTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = { targetID, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = { ID, name, type: gameType };\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const RejectGameInvitation = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const AcceptInvitation = (inviterID, gameType) => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.acceptedGame = { inviterID, type: gameType };\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};\r\n\r\nexport const EmptyGameInvitations = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.friendlyGameTarget = null;\r\n        tools.acceptedGame = null;\r\n        tools.gameInvitation = null;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n}\r\nexport const ReloadRecords = () => {\r\n    return async(dispatch, getState) => {\r\n        const tools = {...(getState().tools) };\r\n        tools.recordReloadTrigger = !tools.reloadTrigger;\r\n        await dispatch({ type: \"UPDATE_TOOLS\", payload: tools });\r\n    };\r\n};","import {\r\n\tButton,\r\n\tCard,\r\n\tCol,\r\n\tListGroup,\r\n\tRow,\r\n\tInputGroup,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport Record from \"./Record\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { useState, useEffect } from \"react\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\nimport { Status } from \"../../services/configs\";\r\nconst FriendRecords = ({ person, thisIsMe }) => {\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst [avatar, setAvatar] = useState(null);//s\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (person) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data, status } = await userServices.getAvatar(\r\n\t\t\t\t\t\tperson.userID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Status.Successful) setAvatar(data.avatar);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"مشکلی در بارگذاری آواتار این شخص پیش آمد ... لطفا اتصال اینترنت خود را بررسی کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// use- no-avatar.png here too?\r\n\t\t\t\t\t// in case server return wrong?\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [person]);\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && !thisIsMe) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(person.userID, gameType));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\tconst { records } = person;\r\n\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\t\talt=\"خطا\"\r\n\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{!thisIsMe && person && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={3}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={4}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue={5}\r\n\t\t\t\t\t\t\t\t\t\tname=\"dimension\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport AllScores from \"../../tables/scores/AllScores\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst [friends, setFriends] = useState([]);\r\n\tconst [friendsCount, setFriendsCount] = useState(0);\r\n\tconst interactions = useSelector((state) => state.interactions); //.map((interact) => interact.with)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendsCount !== interactions.length) {\r\n\t\t\t//thsi if checks whether change made in interaction is friend/unfriend operation or not\r\n\t\t\t//otherwise, every new message sent or recieved cause a new .map calling!\r\n\r\n\t\t\t// const temp = interactions;\r\n\t\t\t// const sorted = temp.sort((f1, f2) => f2.name - f1.name);\r\n\t\t\tsetFriends(interactions.map((interact) => interact.with));\r\n\t\t\tsetFriendsCount(interactions.length);\r\n\t\t}\r\n\t}, [interactions, friendsCount]);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames(serverResponse.data.myGames.reverse());\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? friends.findIndex((friend) => friend.userID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, friends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\teventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\teventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={me}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<AllScores scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{friends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tperson={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? friends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: me\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthisIsMe={\r\n\t\t\t\t\t\t\t\t\t\t\t\tme.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AllScores\r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.userID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../../services/configs\";\r\nimport \"../profile.css\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices(data.notices.reverse());\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto animated-textbox\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 animated-textbox h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","import { UpdateMyChatList } from \"./interactions\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friend, chat }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friend.userID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\t//how to scroll to last recent message in the start?\r\n\t// useEffect(() => {\r\n\t// \tsetTimeout(() => {\r\n\t// \t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t// \t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t// \t\t\t\tbehavior: \"smooth\",\r\n\t// \t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t// \t\t\t});\r\n\t// \t}, 1000);\r\n\t// }, [])\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t});\r\n\t\t}, 100);\r\n\t}, [message]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friend.userID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"chat-main-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{chat &&\r\n\t\t\t\t\t\t\t\tchat instanceof Array &&\r\n\t\t\t\t\t\t\t\tchat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchat[index - 1].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-3 bg-transparent chat-room-message-box animated-textbox text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst interactions = useSelector((state) => state.interactions).sort(\r\n\t\t//first sort all by last recieved message => this makes chat list contacts sorted properly\r\n\t\t(i1, i2) =>\r\n\t\t\tnew Date(i2.messages[i2.messages.length - 1].date).getTime() -\r\n\t\t\tnew Date(i1.messages[i1.messages.length - 1].date).getTime()\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends \"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={3}\r\n\t\t\t\t\t\t\tsm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link className=\"animated-navitem\"\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.userID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={interact.with.userID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{interact.with.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{interactions.map((interact) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\tfriend={interact.with}\r\n\t\t\t\t\t\t\t\t\t\tchat={interact.messages}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport Configs from \"../../services/configs\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst Credentials = () => {\r\n\tconst [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n\r\n\tconst reloadPage = () => {\r\n\t\tsetLoading(false);\r\n\t\ttriggerPageUpdate(!pageUpdateTrigger);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } = await userServices.getMyCredentials();\r\n\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\tconst { me } = data;\r\n\t\t\t\t\tsetFullname(me.fullname);\r\n\t\t\t\t\tsetStudentID(me.studentID);\r\n\t\t\t\t\tsetEmail(me.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n\t\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [pageUpdateTrigger]);\r\n\r\n\tconst saveChanges = async (event) => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\t// check all inputs plz\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.editMyCredentials({\r\n\t\t\t\tstudentID,\r\n\t\t\t\tfullname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(`تغییرات با موفقیت اعمال شد`);\r\n\t\t\t\t// dispatch(TriggerRecordUpdate());\r\n\t\t\t\t// find another way to update\r\n\r\n\t\t\t\treloadPage();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox\"\r\n\t\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tplaceholder=\"نام و نام خانوادگی\"\r\n\t\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">ایمیل</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left\"\r\n\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0 mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Credentials;\r\n","import { Form, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport { OK, Sorry } from \"../../tools/notification\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\n\r\nimport \"../profile.css\";\r\n\r\nconst PasswordChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst checkConfirmPassword = (event) => {\r\n\t\tsetConfirmNewPassword(event.target.value);\r\n\t\tif (newPassword !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\r\n\tconst changeMyPassword = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.changeMyPassword({\r\n\t\t\t\tpassword,\r\n\t\t\t\tnewPassword,\r\n\t\t\t});\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"رمز شما با موفقیت تغییر داده شد\");\r\n\t\t\t\tcontext.signOut();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetPassword(\"\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => changeMyPassword(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tرمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"mt-3 text-center\" xs={4}>\r\n\t\t\t\t\t<Form.Label className=\"text-center\">\r\n\t\t\t\t\t\tتایید رمز عبور جدید\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"account-info-textbox text-left animated-textbox\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm New Password\"\r\n\t\t\t\t\t\tvalue={confirmNewPassword}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(event) => checkConfirmPassword(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-key px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر رمز عبور\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordChange;\r\n","import { Col, Form, Image, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Notify } from \"./../../tools/notification\";\r\nimport './avatar.css';\r\nconst ImagePicker = ({ selector }) => {\r\n\tconst [preview, setPreview] = useState(null);\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst { avatar } = me ? me : { avatar: null };\r\n\tuseEffect(() => {\r\n\t\tsetPreview(avatar);\r\n\t}, [avatar]);\r\n\tconst updatePreview = (imageFile) => {\r\n\t\ttry {\r\n\t\t\tselector(imageFile);\r\n\t\t\tconst oFReader = new FileReader();\r\n\t\t\toFReader.readAsDataURL(imageFile);\r\n\r\n\t\t\toFReader.onload = (oFREvent) => {\r\n\t\t\t\tsetPreview(oFREvent.target.result);\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tNotify(\"پیش نمایش فایل انتخابی با مشکل رو به رو شد.\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form.Group>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"text-center\" sm={4} xs={4} md={3} lg={2}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"friends-section-avatar\"\r\n\t\t\t\t\t\tsrc={preview}\r\n\t\t\t\t\t\trounded\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tclassName=\"dropbox-rectangle\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"btn-outline-primary file-picker-control\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tid=\"filepicker\"\r\n\t\t\t\t\t\tonChange={(e) => updatePreview(e.target.files[0])}\r\n\t\t\t\t\t\taccept=\".jpg,.jpeg,.png\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\"ابتدا عکس مورد نظر را از اینجا انتخاب کنید\"\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Form.Label\r\n\t\t\t\t\thtmlFor=\"filepicker\"\r\n\t\t\t\t\tclassName=\"btn-outline-primary file-picker-label animated-button\">\r\n\t\t\t\t\tبا کلیک روی اینجا عکس خود را انتخاب کنید و یا فایل آن را\r\n\t\t\t\t\tبکشید و در وسط کادر سبز رنگ رها کنید ...\r\n\t\t\t\t</Form.Label>\r\n\t\t\t</Row>\r\n\t\t</Form.Group>\r\n\t);\r\n};\r\n\r\nexport default ImagePicker;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { OK } from \"../../tools/notification\";\r\nimport userServices from \"./../../services/http/userServices\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport Configs from \"../../services/configs\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport ImagePicker from \"./ImagePicker\";\r\n\r\nconst AvatarChange = () => {\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [myAvatar, selectMyAvatar] = useState(null);\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n\tconst upload = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await userServices.uploadAvatar(myAvatar);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tOK(\"آواتار شما با موفقیت تغییر داده شد\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\tsetPassword(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => upload(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<ImagePicker selector={selectMyAvatar} />\r\n\t\t\t<Card.Footer className=\"p-1 m-0  mt-4\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-upload px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tتغییر آواتار\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default AvatarChange;\r\n","import { Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport Credentials from \"./Credentials\";\r\nimport PasswordChange from \"./PasswordChange\";\r\nimport AvatarChange from \"./AvatarChange\";\r\n\r\nconst AcountManager = () => {\r\n\t//states\r\n\r\n\tconst TABS = { CREDENTIALS: 0, AVATAR: 1, PASSWORD: 2 };\r\n\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"game-deck-card\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tdefaultActiveKey={TABS.CREDENTIALS}\r\n\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t<Tab eventKey={TABS.CREDENTIALS} title=\"ویرایش مشخصات\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<Credentials />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.AVATAR} title=\"آواتار\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<AvatarChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey={TABS.PASSWORD} title=\"تغییر رمزعبور\">\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<PasswordChange />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default AcountManager;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card border=\"primary\" className=\"sign-in-sidebar animated-sidebar-intense\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons animated-button\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices(data.notices.reverse());\r\n                    //if all is empty\r\n                    if(data.notices.length === 0) {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar animated-form\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {Boolean(notices.length) && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های فعال\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col lg={2} md={3} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg={10} md={9} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import { Card, Col, Alert, ListGroup, Button, Image } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst { fullname, userID, records, avatar } = props.person\r\n\t\t? props.person\r\n\t\t: me;\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\tconst thisIsMe = me && userID === me.userID;\r\n\tuseEffect(() => {\r\n\t\tsetPiece(!thisIsMe ? scoreboard.opp : scoreboard.me);\r\n\t}, [thisIsMe, scoreboard]);\r\n\r\n\tconst { recordReloadTrigger } = tools;\r\n\tuseEffect(() => {\r\n\t\tif (!thisIsMe) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [userID, thisIsMe, recordReloadTrigger]);\r\n\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(userID));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar animated-form\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">{fullname}</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"player-avatar\"\r\n\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باختها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{thisIsMe ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\tif (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\telse setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto p-0\">\r\n\t\t\t\t\t{rightSideBar && <Col lg={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tlg={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col className=\"p-0 pl-2\" lg={3} md={4}>\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (room) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", room.name, {gameType: room.type, scoreless: room.scoreless})); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, CleanScoreboard } from \"./actions/game\";\r\nimport { LoadThisPlayer, ResetOpponent } from \"./actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./actions/game\";\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n\tconst mapStateToProps = (state) => ({\r\n\t\tme: state.me,\r\n\t\topponent: state.opponent,\r\n\t\troom: state.room,\r\n\t\tscoreboard: state.scoreboard,\r\n\t\ttools: state.tools,\r\n\t});\r\n\r\n\tconst mapDispatchToProps = (dispatch) => ({\r\n\t\tLoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n\t\tResetOpponent: () => dispatch(ResetOpponent()),\r\n\t\tEnterRoom: (room) => dispatch(EnterRoom(room)),\r\n\t\tExitRoom: () => dispatch(ExitRoom()),\r\n\t\t// SetGameID: (gameID) => dispatch(SetGameID(gameID)),\r\n\t\tUpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n\t\tCleanScoreboard: () => dispatch(CleanScoreboard()),\r\n\t});\r\n\treturn connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { GameSetting } from \"../../services/configs\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = GameSetting.T3D.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-start px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-half px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>;\r\n        }\r\n        setTimeStamp(<div className={color}>{icon}{timeRemaining}</div>);\r\n    }, [timeRemaining, aThird]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}>\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}>\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({\r\n\ttimeRemaining,\r\n\tdimension,\r\n\tplayers,\r\n\ttable,\r\n\tonEachCellClick\r\n}) => {\r\n\tlet dimens = [];\r\n\tconst [cell, setCell] = useState(null);\r\n\tfor (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst cellWidths = [70, 65, 60, 55, 50, 45, 40, 35, 30, 25];\r\n\t\tconst cellHeights = [45, 40, 35, 30, 29, 28];\r\n\t\tconst deviceWidth = window.innerWidth,\r\n\t\t\tdeviceHeight = window.innerHeight;\r\n\t\t/* first decide cell height, margin nearly equals to height */\r\n\t\tlet width = cellWidths[cellWidths.length - 1],\r\n\t\t\theight = cellHeights[cellHeights.length - 1],\r\n\t\t\tmargin = cellHeights[cellHeights.length - 1],\r\n            fontSize = 25;\r\n\t\tfor (const h of cellHeights) {\r\n\t\t\tif (h * dimension * dimension <= deviceHeight * 0.75) {\r\n\t\t\t\tmargin = height = h;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const w of cellWidths) {\r\n\t\t\tif ((w + margin) * (dimension + 1) <= deviceWidth) {\r\n\t\t\t\twidth = w;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n        //find better scaling for font size?\r\n        if(height < 30 || width < 40)\r\n            fontSize = 15;\r\n        else if(height < 40 || width < 60)\r\n            fontSize = 20;\r\n        else\r\n            fontSize = 25;\r\n\t\tsetCell({ width, height, margin, fontSize });\r\n\t}, [dimension]);\r\n\t//prop drilling in BriefScoreBoard\r\n\treturn (\r\n\t\t<Card bg=\"transparent\" border=\"dark\" className=\"w-100 mt-2 mx-auto\">\r\n\t\t\t<BriefScoreboard timeRemaining={timeRemaining} players={players} />\r\n\t\t\t<Card.Body className=\"game-border-card\">\r\n\t\t\t\t{table && cell ? (\r\n\t\t\t\t\tdimens.map((floor) => (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t{dimens.map((row) => (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdirection: \"ltr\",\r\n\t\t\t\t\t\t\t\t\t\tmarginLeft: `${cell.margin * row}px`,\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{dimens.map((column) => (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tkey={\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloor * dimension * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\trow * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-dark\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"game-table-cells\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: `${cell.width}px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\theight: `${cell.height}px`,\r\n                                                fontSize: `${cell.fontSize}px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttable[floor][row][\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t] !== null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? players[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttable[floor][\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t][column]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ].color\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tid={\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloor * dimension * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\trow * dimension +\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tonEachCellClick(event)\r\n\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t{table[floor][row][column] !==\r\n\t\t\t\t\t\t\t\t\t\t\t\tnull &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tplayers[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttable[floor][row][column]\r\n\t\t\t\t\t\t\t\t\t\t\t\t].shape}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p className=\"text-center\"> در حال اتصال... </p>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n\tconnect,\r\n\tcreateSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { GameSetting, Routes } from \"../../services/configs\";\r\nimport { Attention, Notify, Sorry } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\n\r\nclass GamePlay extends Component {\r\n\t//**** game resets on device change. fix it */\r\n\tstate = {\r\n\t\tplayers: [\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"blue\",\r\n\t\t\t\tlineColor: \"primary\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"darkred\",\r\n\t\t\t\tlineColor: \"danger\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t], // maybe use player actual user name and change this item to an object of objects?\r\n\t\tturn: 0, // start turn is decided by throwning dices\r\n\t\tdimension: 3,\r\n\t\ttable: null,\r\n\t\tmyTurn: undefined, // change this\r\n\t\tgameID: null,\r\n\t\tsocketGamePlay: undefined,\r\n\t\tplayerOnline: true,\r\n\t\ttimeRemaining: 0, //create a config\r\n\t\ttimerID: null,\r\n\t\tconnectionCheckTimerID: null,\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.cellButtons = [];\r\n\t}\r\n\r\n\tupdateGameScorebaord = () => {\r\n\t\tconst { myTurn, players } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\r\n\t\tthis.props.UpdateScoreboard({\r\n\t\t\tme: {\r\n\t\t\t\tindex: myTurn,\r\n\t\t\t\tshape: players[myTurn].shape,\r\n\t\t\t\tscore: players[myTurn].score,\r\n\t\t\t},\r\n\t\t\topp: {\r\n\t\t\t\tindex: oppTurn,\r\n\t\t\t\tshape: players[oppTurn].shape,\r\n\t\t\t\tscore: players[oppTurn].score,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tenableTimerForMyMove = (timeout = GameSetting.T3D.TurnTimeOut) => {\r\n\t\tthis.setState({ timeRemaining: timeout });\r\n\t\t//is it needed to declare timerID as state?\r\n\t\tclearInterval(this.state.timerID);\r\n\t\tconst timerID = setInterval(() => {\r\n\t\t\tconst { timeRemaining, timerID } = this.state;\r\n\t\t\tif (timeRemaining <= 0) {\r\n\t\t\t\tclearInterval(timerID);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({ timeRemaining: this.state.timeRemaining - 1 });\r\n\t\t}, 1000);\r\n\t\tthis.setState({ timerID });\r\n\t};\r\n\r\n\tupdatePlayerStates = ({ turn, xScore, oScore }) => {\r\n\t\tconst players = [...this.state.players];\r\n\t\tplayers[0].score = xScore;\r\n\t\tplayers[1].score = oScore;\r\n\t\tthis.setState({\r\n\t\t\tplayers,\r\n\t\t\tturn,\r\n\t\t});\r\n\t\tthis.updateGameScorebaord();\r\n\t};\r\n\r\n\tdisableAllTimers = () => {\r\n\t\tconst { connectionCheckTimerID, timerID } = this.state;\r\n\t\tclearTimeout(connectionCheckTimerID);\r\n\t\tclearTimeout(timerID); //move time out timer\r\n\t};\r\n\r\n\tsocketOnMessage = (response) => {\r\n\t\tconst { data } = response;\r\n\t\tconst { cmd, msg } = JSON.parse(data);\r\n\t\tconst { surrender } = this.props;\r\n\t\tif (this.props.location.pathname === Routes.Client.GameDeck) {\r\n\t\t\tif (cmd === \"START\") {\r\n\t\t\t\tconst startTime = toTimeShort(msg);\r\n\t\t\t\t//edit !surrender part\r\n\t\t\t\t!surrender && Attention(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n\t\t\t} else if (cmd === \"GAME\") {\r\n\t\t\t\tconst { IDs, dimension, myTurn } = msg;\r\n\t\t\t\tthis.setState({ dimension, myTurn });\r\n\t\t\t\tconst opponentID = IDs[Number(!myTurn)];\r\n\t\t\t\tconst { opponent, LoadThisPlayer } = this.props;\r\n\t\t\t\tif (!opponent && opponentID && !surrender) //ithink !surrender must be removed\r\n\t\t\t\t\t//if opponent is not null -> means this was called before and there's no need to run again\r\n\t\t\t\t\tLoadThisPlayer(opponentID);\r\n\t\t\t} else if (cmd === \"LOAD\") {\r\n\t\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\t\tconst { table } = msg;\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttable,\r\n\t\t\t\t});\r\n\t\t\t\tthis.updateGameScorebaord();\r\n\t\t\t} else if (cmd === \"TIMER\") {\r\n\t\t\t\t//you can calculate request respone time -> then minimize it from tiem sent by server -> to gain acurate time\r\n\t\t\t\t//but its real neccessary, Math.floor on the server side does this nearly\r\n\t\t\t\t//but for accurate approach remember: remove Math.floor from server side\r\n\t\t\t\tconsole.log(\"time updated: \", msg);\r\n\t\t\t\tthis.setState({ timeRemaining: msg });\r\n\t\t\t\tclearTimeout(this.state.timerID); //clear move time out timers, though their disabled before, this is for assurance\r\n\t\t\t\tthis.enableTimerForMyMove(msg);\r\n\t\t\t} else if (this.state.table) {\r\n\t\t\t\tif (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n\t\t\t\telse if (cmd === \"UPDATE\") {\r\n\t\t\t\t\tconst { room } = this.props;\r\n\t\t\t\t\tconst { dimension } = this.state;\r\n\t\t\t\t\tconst cellID = Number(msg.nextMove);\r\n\r\n\t\t\t\t\t//*************** */\r\n\t\t\t\t\t//is this needed to check the move in client? considering that complete check has been made in client\r\n\t\t\t\t\t//and consder that: checking move in client may cause some bugs\r\n\t\t\t\t\t//for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n\t\t\t\t\t//turn is not updated and this player can not make new moves to recieve server's table!!!\r\n\t\t\t\t\tthis.verifyAndApplyTheMove(\r\n\t\t\t\t\t\tthis.getCellCoordinates(cellID, dimension),\r\n\t\t\t\t\t\tthis.cellButtons[cellID]\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//wrap it up this part of UPDATE and LOAD in a method\r\n\t\t\t\t\tthis.updatePlayerStates(msg);\r\n\r\n\t\t\t\t\tthis.cellButtons[cellID].focus();\r\n\t\t\t\t\tthis.updateGameScorebaord();\r\n\r\n\t\t\t\t\t// now inform the server that the move is recieved\r\n\t\t\t\t\t//force connect it?\r\n\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\tcreateSocketRequest(\"move_recieved\", room.name, true)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// server time out is set and now setInterval for this client to show how much time left\r\n\t\t\t\t\tthis.enableTimerForMyMove();\r\n\t\t\t\t} else if (cmd === \"MOVE_MISSED\") {\r\n\t\t\t\t\tconst { myTurn } = this.state;\r\n\t\t\t\t\t//msg --> forced set turn\r\n\t\t\t\t\tthis.setState({ turn: msg });\r\n\t\t\t\t\tif (msg === myTurn) this.enableTimerForMyMove();\r\n\t\t\t\t} else if (cmd === \"NOT_AUTHORIZED\") {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// signOut();\r\n\t\t\t\t} else if (cmd === \"END\") {\r\n\t\t\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\t\t\tthis.endThisGame();\r\n\t\t\t\t\tthis.disableAllTimers();\r\n\t\t\t\t} else if (cmd === \"CLOSE\") {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.closeThisGame();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"wrong socket request\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tforceConnectWS = async (nextJob) => {\r\n\t\tconst { room } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tlet socket = await connect(room);\r\n\t\t\tsocket.onmessage = this.socketOnMessage;\r\n\t\t\tthis.setState({ socketGamePlay: socket });\r\n\t\t\tif (nextJob) nextJob();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// **********************\r\n\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\tsetTimeout(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconsole.log(\"rconnecting from GamePlay\");\r\n\t\t\t\t\tthis.forceConnectWS(nextJob);\r\n\t\t\t\t},\r\n\t\t\t\tnextJob ? 1000 : 3000\r\n\t\t\t);\r\n\t\t\t//if there is a next job --> then player is sending a move or something important and\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in serimport { LoadPlayer } from './../../globals/redux/actions/player';\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in server for sending moves\r\n\t\t}\r\n\t};\r\n\r\n\tenableConnectionCheckTimer = () => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (window.navigator.onLine) {\r\n\t\t\t\tif (!this.state.playerOnline) {\r\n\t\t\t\t\t//player JUST became online\r\n\t\t\t\t\tthis.setState({ playerOnline: true }); // toggle online status\r\n\t\t\t\t\tthis.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n\t\t\t\t}\r\n\t\t\t} else if (this.state.playerOnline) {\r\n\t\t\t\t//player JUST became offline\r\n\t\t\t\tthis.setState({ playerOnline: false });\r\n\t\t\t}\r\n\t\t}, 2500); //2.5 sec is it ok?\r\n\t};\r\n\r\n\tloadCurrentGame = () => {\r\n\t\tconst { room, surrender } = this.props;\r\n\t\tconst { myTurn } = this.state;\r\n\t\tconsole.log(room);\r\n\t\tthis.forceConnectWS(() => {\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"load\", room.name, null)\r\n\t\t\t);\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"mytimer\", room.name, myTurn)\r\n\t\t\t);\r\n\t\t\tif (surrender) {\r\n\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\tcreateSocketRequest(\"surrender\", room.name, true)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n\t\tconst { room, surrender } = this.props;\r\n\t\tthis.setState({ dimension: room.type });\r\n\t\tthis.loadCurrentGame();\r\n\r\n\t\tthis.setState({\r\n\t\t\tconnectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.disableAllTimers();\r\n\t}\r\n\tgetCellCoordinates = (cellID, dimen) => {\r\n\t\tconst cellFloor = Math.floor(cellID / (dimen * dimen));\r\n\t\tconst onFloorId = cellID % (dimen * dimen);\r\n\t\tconst cellRow = Math.floor(onFloorId / dimen);\r\n\t\tconst cellColumn = onFloorId % dimen;\r\n\t\t// just test a random id to see how above formula works!\r\n\t\treturn { floor: cellFloor, row: cellRow, column: cellColumn };\r\n\t};\r\n\tonEachCellClick = (event) => {\r\n\t\tconst { dimension, turn, timerID } = this.state;\r\n\t\tconst { opponent, room } = this.props;\r\n\t\tif (opponent) {\r\n\t\t\ttry {\r\n\t\t\t\tconst selectedCellButton = event.target;\r\n\r\n\t\t\t\t//this is just for when the connection is not automatically came back, so the user via clicking cells can initiate connection\r\n\t\t\t\tif (this.state.turn !== this.state.myTurn) {\r\n\t\t\t\t\t//is this needed really?\r\n\t\t\t\t\tthis.forceConnectWS(null);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst cell = this.getCellCoordinates(\r\n\t\t\t\t\tselectedCellButton.id,\r\n\t\t\t\t\tdimension\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(selectedCellButton.id, cell);\r\n\t\t\t\tif (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n\t\t\t\t\t//send move to WebSocket Server\r\n\r\n\t\t\t\t\tthis.setState({ turn: (turn + 1) % 2 });\r\n\t\t\t\t\tthis.forceConnectWS(() => {\r\n\t\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\t\tcreateSocketRequest(\r\n\t\t\t\t\t\t\t\t\"move\",\r\n\t\t\t\t\t\t\t\troom.name,\r\n\t\t\t\t\t\t\t\tselectedCellButton.id\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclearInterval(timerID);\r\n\t\t\t\t\tthis.setState({ timeRemaining: 0 });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t//load again here?\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tverifyAndApplyTheMove = (cell, cellButton) => {\r\n\t\tconst { turn } = this.state;\r\n\t\tconsole.log(this.state.table);\r\n\t\tlet tempTable = [...this.state.table];\r\n\t\tif (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n\t\t\ttempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n\t\t\tthis.setState({ table: tempTable });\r\n\t\t\t// cellButton.value = players[turn].shape;\r\n\t\t\t// cellButton.style.color = players[turn].color;\r\n\t\t\tcellButton.style.opacity = 0.0;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcellButton.className = `game-table-cells animate-new-move`;\r\n\t\t\t\tcellButton.style.opacity = 1.0;\r\n\t\t\t}, 100);\r\n\r\n\t\t\tthis.inspectAreaAroundTheCell(cell.floor, cell.row, cell.column);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tinspectAreaAroundTheCell = (floor, row, column) => {\r\n\t\t// inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n\t\t// is it needed to write a inspectAll method ?\r\n\t\tconst { players, table, dimension } = this.state;\r\n\t\tconst playerInTheCell = table[floor][row][column];\r\n\t\tlet rowCount = 0,\r\n\t\t\tcolumnCount = 0,\r\n\t\t\tfloorMainDiagCount = 0,\r\n\t\t\tfloorSideDiagCount = 0,\r\n\t\t\ttableMainDiagCount = 0,\r\n\t\t\ttableSideDiagCount = 0,\r\n\t\t\ttableAltitudeCount = 0,\r\n\t\t\ttableRowFloorMainDiagCount = 0,\r\n\t\t\ttableRowFloorSideDiagCount = 0,\r\n\t\t\ttableColumnFloorMainDiagCount = 0,\r\n\t\t\ttableColumnFloorSideDiagCount = 0;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tif (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n\t\t\tif (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n\t\t\tif (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n\t\t\tif (row === column) {\r\n\t\t\t\tif (table[floor][i][i] === playerInTheCell)\r\n\t\t\t\t\tfloorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n\t\t\t\tif (row === floor && table[i][i][i] === playerInTheCell)\r\n\t\t\t\t\ttableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (row + column + 1 === dimension) {\r\n\t\t\t\tif (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n\t\t\t\t\tfloorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n\t\t\t\tif (\r\n\t\t\t\t\trow === floor &&\r\n\t\t\t\t\ttable[i][i][dimension - i - 1] === playerInTheCell\r\n\t\t\t\t)\r\n\t\t\t\t\ttableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (floor === column && table[i][row][i] === playerInTheCell)\r\n\t\t\t\ttableRowFloorMainDiagCount++;\r\n\t\t\tif (\r\n\t\t\t\tfloor + column + 1 === dimension &&\r\n\t\t\t\ttable[i][row][dimension - i - 1] === playerInTheCell\r\n\t\t\t)\r\n\t\t\t\ttableRowFloorSideDiagCount++;\r\n\t\t\tif (floor === row && table[i][i][column] === playerInTheCell)\r\n\t\t\t\ttableColumnFloorMainDiagCount++;\r\n\t\t\tif (\r\n\t\t\t\tfloor + row + 1 === dimension &&\r\n\t\t\t\ttable[i][dimension - i - 1][column] === playerInTheCell\r\n\t\t\t)\r\n\t\t\t\ttableColumnFloorSideDiagCount++;\r\n\t\t}\r\n\r\n\t\t// now inspect whether a line has been made and take action for it\r\n\t\t// the actual purpose of lines below, is to convert cell:{floor, row, format} format to ButtonID format;\r\n\t\t// ButtonID (or cellID) format is an integer between 0 and (dimension^3)\r\n\t\trowCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension + row * dimension,\r\n\t\t\t\t1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\tcolumnCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension + column,\r\n\t\t\t\tdimension,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\tfloorMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension,\r\n\t\t\t\tdimension + 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\tfloorSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tfloor * dimension * dimension + (dimension - 1),\r\n\t\t\t\tdimension - 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\t0,\r\n\t\t\t\tdimension * (dimension + 1) + 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tdimension - 1,\r\n\t\t\t\tdimension * (dimension + 1) - 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableAltitudeCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\trow * dimension + column,\r\n\t\t\t\tdimension * dimension,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableRowFloorMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\trow * dimension,\r\n\t\t\t\tdimension * dimension + 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableRowFloorSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\t(row + 1) * dimension - 1,\r\n\t\t\t\tdimension * dimension - 1,\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableColumnFloorMainDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tcolumn,\r\n\t\t\t\tdimension * (dimension + 1),\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t\ttableColumnFloorSideDiagCount === dimension &&\r\n\t\t\tthis.connectTheScoreLines(\r\n\t\t\t\tdimension * (dimension - 1) + column,\r\n\t\t\t\tdimension * (dimension - 1),\r\n\t\t\t\tplayers[playerInTheCell]\r\n\t\t\t);\r\n\t};\r\n\r\n\t// method below: checks each possible line(according to the condition that user gives it),\r\n\t// if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n\tconnectTheScoreLines = (firstCell, step, player) => {\r\n\t\tconst { dimension } = this.state;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tthis.cellButtons[\r\n\t\t\t\tfirstCell + i * step\r\n\t\t\t].className = `game-table-cells btn btn-${player.lineColor}`;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.cellButtons[firstCell + i * step].className =\r\n\t\t\t\t\t\"game-table-cells btn btn-outline-dark\";\r\n\t\t\t}, 1000 + i * 100);\r\n\t\t}\r\n\t};\r\n\r\n\tcloseThisGame = () => {\r\n\t\tthis.state.socketGamePlay.close();\r\n\t\tthis.setState({ socketGamePlay: null });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.CleanScoreboard();\r\n\t\t\tthis.props.ResetOpponent();\r\n\t\t\tthis.props.ExitRoom();\r\n\t\t\tthis.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tendThisGame = () => {\r\n\t\tconst { players, myTurn } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\t\t//NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n\t\tif (players[myTurn].score > players[oppTurn].score)\r\n\t\t\tNotify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n\t\telse if (players[myTurn].score === players[oppTurn].score)\r\n\t\t\tNotify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n\t\telse Notify(\"شما باختید\");\r\n\t\t//reset everything:\r\n\t\tthis.closeThisGame();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<TableDesign\r\n\t\t\t\tdimension={this.state.dimension}\r\n\t\t\t\tplayers={this.state.players}\r\n\t\t\t\ttable={this.state.table}\r\n\t\t\t\ttimeRemaining={this.state.timeRemaining}\r\n\t\t\t\tonEachCellClick={this.onEachCellClick}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(GamePlay));\r\n\r\n//another way to check online / offline status :\r\n// initiateGameTimer = () => {\r\n//     setInterval(() => {\r\n//         if (window.navigator.onLine) {\r\n//             if (this.connectionLost) {\r\n//                 console.log(\"connected\");\r\n//                 this.connectionLost = false;\r\n//                 this.forceConnectWS(null);\r\n//             }\r\n//         } else {\r\n//             console.log(\"dissconnected\");\r\n//             this.connectionLost = true;\r\n//         }\r\n//         /*this.isOnline(\r\n//             () => {\r\n//                 if (this.connectionLost) {\r\n//                     console.log(\"connected\");\r\n//                     this.connectionLost = false;\r\n//                     this.forceConnectWS(null);\r\n//                 }\r\n//             },\r\n//             () => {\r\n//                 console.log(\"dissconnected\");\r\n//                 this.connectionLost = true;\r\n//             }\r\n//         );*/\r\n//     }, 1000);\r\n// };\r\n\r\n// /*    isOnline = (success, failure) => {\r\n//     var xhr = XMLHttpRequest\r\n//         ? new XMLHttpRequest()\r\n//         : new window.ActiveXObject(\"Microsoft.XMLHttp\");\r\n//     xhr.onload = function () {\r\n//         if (success instanceof Function) {\r\n//             success();\r\n//         }\r\n//     };\r\n//     xhr.onerror = function () {\r\n//         if (failure instanceof Function) {\r\n//             failure();\r\n//         }\r\n//     };\r\n//      xhr.open(\"GET\", \"https://t3dweb.herokuapp.com/users\", true);//edit this ******************************\r\n//      xhr.send();\r\n// }; */\r\n","import { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport { Attention, Notify, OK } from \"../tools/notification\";\r\nimport {\r\n\tCloseRandomSearch,\r\n\tReapeatRandomSearch,\r\n} from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Routes } from \"../services/configs\";\r\nconst SingleGame = () => {\r\n\tconst [dimension, setDimension] = useState(4);\r\n\tconst [isScoreless, setScoreless] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [searching, setSearching] = useState(false);\r\n\tconst context = useContext(GlobalContext);\r\n\tconst dispatch = useDispatch();\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\r\n\tconst onStartGameClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (me) {\r\n\t\t\tdispatch(\r\n\t\t\t\tEnterRoom({\r\n\t\t\t\t\tname: null,\r\n\t\t\t\t\ttype: dimension,\r\n\t\t\t\t\tscoreless: isScoreless,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\tsetSearching(true);\r\n\t\t}\r\n\t\t// random game:\r\n\t\telse {\r\n\t\t\tAttention(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n\t\t\tcontext.goTo(Routes.Client.SignUp);\r\n\t\t}\r\n\t};\r\n\tconst { randomSearchRepeats } = tools;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (searching) {\r\n\t\t\tif (room.name) {\r\n\t\t\t\tOK(\r\n\t\t\t\t\t\"یک حریف تصادفی پیدا شد ... در صورت تایید هر دو طرف بازی آغاز خواهد شد.\"\r\n\t\t\t\t);\r\n\t\t\t\tsetSearching(false);\r\n\t\t\t} else if (!randomSearchRepeats) {\r\n\t\t\t\t//means no one has been found after a specific amount of time\r\n\t\t\t\tNotify(\"حریفی پیدا نشد ... لحظاتی دیگر مجددا تلاش کنید\");\r\n\t\t\t\tsetSearching(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [searching, randomSearchRepeats]);\r\n\t//on destroy\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tsetSearching(false); //make sure preloader turns off\r\n\t\t\tdispatch(CloseRandomSearch());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<LoadingBar loading={searching} />\r\n\t\t\t<hr />\r\n\t\t\t<Form onSubmit={(event) => onStartGameClick(event)}>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">نوع بازی</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"0\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={!isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text className=\"ml-5\">\r\n\t\t\t\t\t\t\tامتیازی\r\n\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tname=\"scoreless\"\r\n\t\t\t\t\t\t\tchecked={isScoreless}\r\n\t\t\t\t\t\t\tonChange={() => setScoreless(true)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Text>سرعتی</InputGroup.Text>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t<Form.Label className=\"pb-2 w-25\">ابعاد جدول</Form.Label>\r\n\t\t\t\t\t<InputGroup\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: \"1px solid orange\",\r\n\t\t\t\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\t\t\t\tpadding: \"2%\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 3}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(3)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 4}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(4)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Prepend className=\"mx-3\">\r\n\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\tchecked={dimension === 5}\r\n\t\t\t\t\t\t\t\tonChange={() => setDimension(5)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\tblock\r\n\t\t\t\t\tvariant=\"success\">\r\n\t\t\t\t\t<i className=\"fa fa-search px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tجستجو\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default SingleGame;\r\n","import { Alert, Badge, Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst CompetitionSummary = ({ title, summary }) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" variant=\"info\">\r\n                    <Alert.Heading className=\"text-center\">\r\n                        <Badge variant=\"success p-2\" >\r\n                            {title}\r\n                        </Badge>\r\n                    </Alert.Heading>\r\n\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" pill=\"true\" variant=\"info\">\r\n                    <p>تعداد شرکت کنندگان : 00000000</p>\r\n                    <p>نکات دیگر</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col>\r\n                    <Button block variant=\"outline-success\">شرکت در مسابقه</Button>\r\n                </Col>\r\n                <Col>\r\n                <Button block variant=\"outline-secondary\">بازیکنان حاضر</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionSummary;\r\n","import { Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport \"./competitions.css\";\r\nimport CompetitionSummary from \"./CompetitionSummary\";\r\n\r\nconst CompetitionsMain = () => {\r\n    return (\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <hr />\r\n\r\n            <Row>\r\n                <Col className=\"competition-menu-body\" sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"first\">\r\n                                جام حذفی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"second\">\r\n                                لیگ امتیازی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"third\">\r\n                                بازی شرطی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"forth\">\r\n                                جدول رندوم\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"fifth\">\r\n                                و غیره\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Col>\r\n                {/* <div style={{borderLeft: '1px solid gray', height:'500px'}}></div> */}\r\n                <Col sm={9}>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"first\">\r\n                            <CompetitionSummary\r\n                                title=\"جام حذفی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"second\">\r\n                            <CompetitionSummary\r\n                                title=\"لیگ امتیازی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"third\">\r\n                            <CompetitionSummary\r\n                                title=\"بازی شرطی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"forth\">\r\n                            <CompetitionSummary\r\n                                title=\"جدول رندوم\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"fifth\">\r\n                            <CompetitionSummary\r\n                                title=\"و غیره\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Col>\r\n            </Row>\r\n        </Tab.Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionsMain;\r\n","import GamePlay from \"./gameplay/GamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleGame from \"./SingleGame\";\r\nimport { Tab, Tabs, Card, Button, Row, Col, Container, Alert } from \"react-bootstrap\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport CompetitionsMain from \"./competitions/CompetitionsMain\";\r\n\r\nconst GameDeck = () => {\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [continueGame, setContinueGame] = useState(false);\r\n\tconst [surrender, setSurrender] = useState(false);\r\n\r\n\tconst onSurrenderClick = () => {\r\n\t\tsetSurrender(true);\r\n\t\tsetContinueGame(true);\r\n\t};\r\n\r\n\t//***** */ show opponent record before game start choice\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{continueGame && room.name ? (\r\n\t\t\t\t<GamePlay surrender={surrender} />\r\n\t\t\t) : (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tborder=\"secondary\"\r\n\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\tclassName=\"game-deck-card\">\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\ttransition={false}\r\n\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t\t{Boolean(room.name) && (\r\n\t\t\t\t\t\t\t\t<Tab eventKey=\"currentGame\" title=\"بازی کنونی\">\r\n\t\t\t\t\t\t\t\t\t<Container>\r\n                                    <hr />\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Col>\r\n                                            <Alert className=\"text-center\" variant=\"primary\">{`نوع بازی: ${room.scoreless ? \"سرعتی\" : \"امتیازی\"}`}</Alert>\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <Alert className=\"text-center\" variant=\"primary\">{`ابعاد بازی: ${room.type} * ${room.type} * ${room.type}`}</Alert>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <hr />\r\n                                        <Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetContinueGame(true)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-gamepad-o px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tادامه بازی\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-4 animated-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={onSurrenderClick}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-gamepad-o px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tتسلیم\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\teventKey=\"randomGame\"\r\n\t\t\t\t\t\t\t\tdisabled={Boolean(room.name)}\r\n\t\t\t\t\t\t\t\ttitle=\"بازی تصادفی\">\r\n\t\t\t\t\t\t\t\t<SingleGame friendlyGame={false} />\r\n\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\teventKey=\"competitions\"\r\n\t\t\t\t\t\t\t\tdisabled={Boolean(room.name)}\r\n\t\t\t\t\t\t\t\ttitle=\"مسابقات\">\r\n\t\t\t\t\t\t\t\t<CompetitionsMain />\r\n\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport AllScores from \"./AllScores\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nclass ScoresTable extends Component {\r\n    state = {\r\n        liveScores: [],\r\n        finalScores: [],\r\n        showLiveOnes: false,\r\n        loading: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // get all game results , live or final, handling promises\r\n        // client and server side for this Module seriously need to be edited\r\n        (async () => {\r\n            this.setState({ loading: true }); // use preloader here?\r\n            const { data, status } = await gameServices.getAllGames();\r\n            if (status === Configs.Status.Successful) return data.allGames;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                result = result.reverse();\r\n                this.setState({\r\n                    liveScores: result.filter((game) => game.isLive),\r\n                    finalScores: result.filter((game) => !game.isLive),\r\n                    loading: false,\r\n                });\r\n                //EDIT EDIT EDIT\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ finalScores: [], loading: false });\r\n            });\r\n    }\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({ showLiveOnes: true });\r\n    };\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({ showLiveOnes: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n       \r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n        // DESIGN : USE <Tabs> ???\r\n        return (\r\n            <Container>\r\n                <Row className=\"scores-mode-select-layout\">\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowLiveScores}>\r\n                            نتایج زنده\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                !showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowFinalScores}>\r\n                            نتایج نهایی\r\n                            <i\r\n                                className=\"fa fa-check-circle-o px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* this single column is to make mode select buttons and Allscores same width */}\r\n                        <AllScores\r\n                            scores={showLiveOnes ? liveScores : finalScores}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScoresTable;\r\n","import { Button, Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3 form-inline\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\tclassName=\"mb-3 form-inline\"\r\n\t\t\t\t\t\t\t\tcontrolId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tرمز عبور\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row className=\"p-0\">\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-center\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card animated-form\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>نام خانوادگی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>شماره دانشجویی</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t\t\t\t<Form.Label>تایید رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox animated-textbox\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4 animated-button\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","const SinglePlayerCard = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SinglePlayerCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SinglePlayerCard from \"./SinglePlayerCard\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n            <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                <thead className=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">نام بازیکن</th>\r\n                        <th scope=\"col\">امتیاز</th>\r\n                        <th scope=\"col\">تعداد برد</th>\r\n                        <th scope=\"col\">تعداد باخت</th>\r\n                        <th scope=\"col\">تعداد تساوی</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <SinglePlayerCard\r\n                            key={player.userID}\r\n                            rowNumber={\r\n                                players.findIndex(\r\n                                    (p) => p.userID === player.userID\r\n                                ) + 1\r\n                            }\r\n                            name={player.fullname}\r\n                            points={player.records.points}\r\n                            wins={player.records.wins}\r\n                            loses={player.records.loses}\r\n                            draws={player.records.draws}></SinglePlayerCard>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from '../../services/configs';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nclass Rankings extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === Configs.Status.Successful) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort( //sort priorities: 1. more points 2. more wins 3. less loses\r\n                        (p1, p2) =>\r\n                            p2.records.points - p1.records.points ||\r\n                            p2.records.wins - p1.records.wins ||\r\n                            p1.records.loses - p2.records.loses\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <Row className=\"mx-auto mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <AllPlayers players={players} />\r\n                </Row>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rankings;\r\n","import { Card, Col, Form, Row, Button } from \"react-bootstrap\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport '../profile.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst EditStudent = ({userID}) => {\r\n    const [fullname, setFullname] = useState(\"\");\r\n\tconst [studentID, setStudentID] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        //find student via userID\r\n\r\n        setLoading(false)\r\n    }, [])\r\n    const saveChanges = (event) => {\r\n        event.preventDefaults();\r\n    }\r\n\treturn (\r\n\t\t<Form onSubmit={(e) => saveChanges(e)}>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">\r\n\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">نام کاربر</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tpattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=\"Full Name\"\r\n\t\t\t\t\tvalue={fullname}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tonChange={(e) => setFullname(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label className=\"w-25 text-center\">ایمیل</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\"\r\n                    disabled\r\n\t\t\t\t\tclassName=\"account-info-textbox w-75\"\r\n\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Card.Footer className=\"p-1 m-0\">\r\n\t\t\t\t<Row>\r\n                <Col lg={2} md={2} sm={4} xs={4}>\r\n\t\t\t\t\t\t<Form.Label className=\"text-center w-100 mt-3\">\r\n\t\t\t\t\t\t\tرمزعبور فعلی\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={7} md={7} sm={8} xs={8}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tclassName=\"text-left account-info-textbox animated-textbox\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\"جهت اعمال هر گونه تغییر در حساب کاربری تان باید رمز عبور خود را وارد نمایید\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={3} md={3} sm={12} xs={12}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tclassName=\"mt-2 w-100\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت تغییرات\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Footer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default EditStudent;\r\n","import { Button, Card, Col, Form, Row, Tabs } from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport EditStudent from \"./EditStudent\";\r\nimport \"../profile.css\";\r\nimport { useState } from \"react\";\r\nconst StudentsManagement = () => {\r\n\tconst [userID, setUserID] = useState(null);\r\n    const [lookFor, setLookFor] = useState(\"\");\r\n\r\n    const searchForStudent = (event) => {\r\n        event.preventDefaults();\r\n        // search data base and find student name\r\n        // return student userID\r\n        // then in each tab request data associated with the userid\r\n    }\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t{!userID && <Card.Header>\r\n\t\t\t\t<Form onSubmit={e => searchForStudent(e)}>\r\n\t\t\t\t\t<Row className=\" w-100\">\r\n\t\t\t\t\t\t<Col lg={10} md={10} sm={9} xs={9}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"نام دانشجو\"\r\n                                value={lookFor}\r\n                                onChange={e => setLookFor(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName=\"account-info-textbox mt-0 animated-textbox\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"text-left\" lg={2} md={2} sm={3} xs={3}>\r\n\t\t\t\t\t\t\t<Button className=\"animated-button\" block variant=\"warning\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form>\r\n\t\t\t</Card.Header>}\r\n\t\t\t{userID && (\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tdefaultActiveKey=\"strecords\"\r\n\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t// transition={Fade}\r\n\t\t\t\t\t\tclassName=\"mb-3\">\r\n\t\t\t\t\t\t<Tab eventKey=\"strecords\" title=\"رکوردها\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stedit\" title=\"ویرایش دانشجو\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<EditStudent userID={userID}/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stfriends\" title=\"روابط\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"stdelete\" title=\"حذف\">\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default StudentsManagement;\r\n","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/admin/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AcountManager from './../profile/edit/AcountManager';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTable from './../tables/scores/ScoresTable';\r\nimport SignUp from '../users/SignUp';\r\nimport Rankings from './../tables/rankings/Rankings';\r\nimport StudentsManagement from '../profile/admin/StudentsManagement';\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.StManagement}>\r\n\t\t\t\t\t\t\t<StudentsManagement />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AcountManager />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<Rankings />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst { goTo } = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () =>\r\n\t\t\t\t\t\tgoTo(Routes.Client.ChatRoom)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID, gameInvitation.type));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tReloadRecords,\r\n\tReapeatRandomSearch,\r\n\tCloseRandomSearch,\r\n\tEmptyGameInvitations,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(() => {\r\n\t\tconsole.log(\"global websocket connect called -> new socket returned\");\r\n\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t);\r\n\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\tconsole.log(\"in online: \", msg.room)\r\n\t\t\t\t\t\t\tdispatch(EnterRoom(msg.room));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontext.signOut();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\tif (msg) {\r\n\t\t\t\t\t\t\t\tconsole.log(msg)\r\n\t\t\t\t\t\t\t\tdispatch(EnterRoom(msg));\r\n\t\t\t\t\t\t\t\tsocket.send(pack(\"online\"));\r\n\t\t\t\t\t\t\t\tdispatch(CloseRandomSearch());\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tif (!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\tdispatch(ReapeatRandomSearch());\r\n\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"GAME_CANCELLED\":{\r\n\t\t\t\t\t\t\tcontext.cancelGame();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\tif (answer) {\r\n\t\t\t\t\t\t\t\tOK(`${targetName} درخواست دوستی شما را پذیرفت`);\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t//reload for changing friendship status in the game => delay is set for restin assure that database is updated\r\n\t\t\t\t\t\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\tconst { askerID, askerName, gameType } = msg;\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tRecieveGameInvitation(\r\n\t\t\t\t\t\t\t\t\taskerID,\r\n\t\t\t\t\t\t\t\t\taskerName,\r\n\t\t\t\t\t\t\t\t\tgameType\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tcontext.redirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\tsocket.close();\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\tconsole.log(\"Reconnecting in  5 seconds\");\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t? await connect()\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t};\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(`global websocket errpr: ${err}`);\r\n\t\t\t}\r\n\t\t});\r\n\t}, [dispatch, context, pack, iamSignedIn, iamBusy]);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchRepeats,\r\n\t\tacceptedGame,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (randomSearchRepeats) {\r\n\t\t\tif (room.type) {\r\n\t\t\t\t//is it necessary?\r\n\t\t\t\t//completely making sure we're on right stage\r\n\t\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\t\tsocketGlobal.send(pack(\"find\", {gameType: room.type, scoreless: room.scoreless}));\r\n\t\t\t} else if (!room.name) {\r\n\t\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchRepeats, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedGame) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedGame.inviterID,\r\n\t\t\t\t\t\tgameType: acceptedGame.type,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tdispatch(EmptyGameInvitations());\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget.targetID,\r\n\t\t\t\t\t\tgameType: friendlyGameTarget.type,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [ dispatch,\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedGame,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\tif (answer)\r\n\t\t\t// if request accepted => reload friendship status after some seconds, delay is set to make sure friends are linked in database\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch(ReloadRecords());\r\n\t\t\t}, 5000);\r\n\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { interactionsReducer } from './interactions';\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    interactions: interactionsReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return action.payload;\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return action.payload;\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null, scoreless: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null, scoreless: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchRepeats: 0,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null,\r\n\t\tacceptedGame: null,\r\n\t\trecordReloadTrigger: false,\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const interactionsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_INTERACTIONS\":\r\n            return [...action.payload];\r\n        case \"RESET_INTERACTIONS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n//dispatch\r\n// store.subscribe(() => console.log(store.getState()));","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices: { SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}"],"sourceRoot":""}