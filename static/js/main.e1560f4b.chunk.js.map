{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","services/configs/gamesetting.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","globals/redux/actions/game.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","layouts/ProfilePanelLayout.jsx","globals/redux/actions/friends.js","commons/LoadingBar.jsx","services/http/gameServices.js","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/AllScores.jsx","profile/friendgames/no-avatar.png","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/NoticeManager.jsx","globals/redux/actions/chats.js","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/AcountCredentials.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/no-avatar.png","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/GamePlay.jsx","games/SingleGame.jsx","games/competitions/CompetitionSummary.jsx","games/competitions/CompetitionsMain.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTable.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SinglePlayerCard.jsx","tables/rankings/AllPlayers.jsx","tables/rankings/Rankings.jsx","commons/MainRouter.jsx","tools/NotificationCenter.jsx","globals/redux/actions/index.js","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/chats.js","globals/redux/reducers/freinds.js","globals/redux/store/index.js","index.js","services/configs/index.js"],"names":["Profile","module","exports","Root","SignUp","SignIn","GameDeck","Rankings","GameGuide","ContactUs","ChatRoom","MyGamesAndFriends","Notices","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","PasswordChange","Friends","Public","Administrators","Games","Mine","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","reset","clear","TOKEN","getItem","T3D","TableRowMargings","TurnTimeOut","GlobalContext","createContext","device","signOut","NavigationBar","me","useSelector","state","context","useContext","Navbar","bg","className","Container","Nav","activeClassName","to","Routes","Client","aria-hidden","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","style","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","expectedErrors","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","getMyFriends","isMyFriend","targetID","isAdministrator","ResetOpponent","dispatch","a","ResetMyPlayer","EnterRoom","room","payload","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","findIndex","mode","Provider","value","push","redirectToGamePlay","goTo","destination","ProfilePanel","props","Row","Button","border","variant","Configs","aria-current","isAdmin","width","height","CollapsedPanel","AutoSignIn","opponent","storageToken","data","player","chatServices","getOurChat","friendID","getMyInteractions","ProfilePanelLayout","myFriends","myChats","interactions","Array","Error","forEach","interact","friend","messages","ownerOf","with","ID","map","msg","owner","date","Col","lg","sm","LoadingBar","loading","whichOne","setWhichOne","Math","floor","random","useLayoutEffect","document","body","overflowY","selectedLoader","time","customLoading","gameServices","getAllGames","getMyGames","objectify","DateObject","Date","calendar","persian","locale","persian_fa","toHijri","format","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Card","Body","Footer","block","size","AllScores","scores","length","score","players","name","gameID","Text","Record","title","small","ListGroup","Item","Badge","pill","TriggerRandomSearch","getState","previous","randomSearchTriggered","EndFriendlyInvitation","friendlyGameTarget","FriendRecords","records","currentID","md","margin","textAlign","round","src","noAvatar","points","wins","draws","loses","xs","setTimeout","InputGroup","Prepend","Radio","setLoading","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","area-hidden","Content","Pane","filter","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","onChange","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","UpdateMyChatList","sent","recieved","chats","find","chat","SendMessageTo","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","ourChat","setOurChat","ours","current","scrollIntoView","behavior","top","offsetTop","index","ref","onSubmit","event","preventDefault","composeMessage","myfriends","MODES","AccountCredentials","setFullname","studentID","setStudentID","email","setEmail","password","setPassword","pageMode","setPageMode","pageUpdateTrigger","triggerPageUpdate","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","selectMode","Group","disabled","checkConfirmPassword","SignInSideBar","onSignInSubmitted","setState","Number","replace","this","autoComplete","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","person","onFriendRequestClick","innerHTML","friendRequestTarget","piece","setPiece","opp","isFriend","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","roomName","gameType","resolve","server","WebSocket","onopen","send","onerror","close","onclose","withReduxDashboard","component","tools","LoadThisPlayer","ExitRoom","UpdateScoreboard","details","CleanScoreboard","BriefScoreboard","timeRemaining","timeStamp","setTimeStamp","aThird","GameSetting","TableDesign","dimension","table","onEachCellClick","normalCell","dimens","i","row","direction","marginLeft","column","GamePlay","selected","lineColor","turn","myTurn","socketGamePlay","playerOnline","timerID","connectionCheckTimerID","updateGameScorebaord","oppTurn","enableTimerForMyMove","timeout","setInterval","clearInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","startTime","IDs","opponentID","cellID","nextMove","verifyAndApplyTheMove","getCellCoordinates","cellButtons","focus","endThisGame","closeThisGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","window","navigator","onLine","dimen","onFloorId","selectedCellButton","cell","cellButton","tempTable","inspectAreaAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","connectTheScoreLines","count","firstCell","step","getElementsByClassName","SingleGame","friendlyGame","setRoomName","setGameType","searching","setSearching","onStartGameClick","borderRadius","padding","checked","CompetitionSummary","summary","CompetitionsMain","Tabs","transition","href","ScoresTable","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","Device","allGames","then","result","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","Modal","backdrop","show","onHide","closeButton","controlId","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SinglePlayerCard","rowNumber","scope","AllPlayers","p","tempPlayers","sort","p1","p2","MainRouter","path","gameInvitation","pushed","NewMsg","by","accept","invitorID","acceptedInviter","onClose","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","enableGlobalTimer","iamSignedIn","iamBusy","command","UpdateStatistics","answer","targetName","askerID","askerName","RecieveMessageFrom","inviterID","respondToFriendshipRequest","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById","ClientRoutes","require","ServerRoutes"],"mappings":"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","file":"static/js/main.e1560f4b.chunk.js","sourcesContent":["//client routes\r\n\r\n// Partial Routes\r\nconst Profile = \"/Profile\",\r\n    ChatRoom = \"ChatRoom\",\r\n    MyGamesAndFriends = \"GamesFriends\",\r\n    Notices = \"Notices\";\r\n\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/SignUp\",\r\n    SignIn: \"/SignIn\",\r\n    GameDeck: \"/GameDeck\",\r\n    Rankings: \"/Rankings\",\r\n    GameGuide: \"/GameGuide\",\r\n    ContactUs: \"/ContacUs\",\r\n    Profile,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Profile}/${Notices}`,\r\n};\r\n","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    PasswordChange: \"password\",\r\n    Friends: 'friends',\r\n    Public: \"public\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: 'single',\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= 400\r\n        error.response.status < 500\r\n    );\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};\r\n","//browser storage keywords\r\nconst KeyToken = \"ptk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n};\r\n","module.exports = {\r\n    T3D: {\r\n        TableRowMargings: [0, 40, 80, 120, 160],\r\n        TurnTimeOut: 45, //secs\r\n    },\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`کاربر ${by.name} درخواست بازی با شما را دارد. برای پذیرفتن بازی اینجا کلیک کنید.`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\tconst expectedErrors =\r\n\t\t\terror.response &&\r\n\t\t\terror.response.status >= Status.BadRequest && // >= 400\r\n\t\t\terror.response.status < Status.InternalServerError; // < 500\r\n\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (!expectedErrors) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) => {\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t);\r\n\t},\r\n\tsignIn: (user) => {\r\n\t\tconsole.log(`${Server.Root}/${Server.Users}/${Server.SignIn}`);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t);\r\n\t},\r\n\tgetPlayer: (userID) => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Public}/${userID}`\r\n\t\t);\r\n\t},\r\n\tgetAllPlayers: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Users}/${Server.Public}`);\r\n\t},\r\n\tgetMe: () => {\r\n\t\tconsole.log(\"IAM CALLED\");\r\n\t\treturn http.get(`${Server.Root}/${Server.Users}/${Server.Private}`);\r\n\t},\r\n\tgetMyCredentials: () => {\r\n\t\t//token will be sent automatically, o.w. method doesnt return anything\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t);\r\n\t},\r\n\teditMyCredentials: (newMe) => {\r\n\t\treturn http.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t);\r\n\t},\r\n\tchangeMyPassword: (passwords) => {\r\n\t\treturn http.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t);\r\n\t},\r\n\tisMyFriend: (targetID) => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t);\r\n\t},\r\n\tisAdministrator: (userID) => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Administrators}/${userID}`\r\n\t\t);\r\n\t},\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\n\r\nexport const ResetOpponent = () =>{\r\n    return async (dispatch) => {\r\n        await dispatch({type: \"RESET_OPPONENT\"})\r\n    }\r\n}\r\n\r\nexport const ResetMyPlayer = () => {\r\n    return async (dispatch) => {\r\n        await dispatch({ type: \"RESET_MINE\" });\r\n    };\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","export const EnterRoom = (room) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"ENTER_ROOM\",\r\n\t\t\tpayload: room,\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"EXIT_ROOM\",\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n\t};\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_SCOREBOARD\",\r\n\t\t\tpayload: details,\r\n\t\t});\r\n\t};\r\n};\r\n\r\n/*export const SetGameID = (gameID) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"SET_GAME_ID\",\r\n\t\t\tpayload: gameID,\r\n\t\t});\r\n\t};\r\n};*/\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { ResetMyPlayer } from './../redux/actions/player';\r\nimport { EnterRoom } from './../redux/actions/game';\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(\"GlobalStates rendered\"); //s\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t}\r\n\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t}  \r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={{ device, signOut, redirectToGamePlay, goTo }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = (props) => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button>\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to=\"/controlPanel/admin/whatever\">\r\n                                    <svg\r\n                                        className=\"bi me-2\"\r\n                                        width=\"16\"\r\n                                        height=\"16\"></svg>\r\n                                    امکانات ادمین\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = (props) => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n    return (\r\n        <Row bg=\"light\" className=\"profile-panel-sidebar-collapsed w-100 mx-auto pl-5\">\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                exact\r\n                to={Configs.Routes.Client.Profile}\r\n                className=\"nav-link\"\r\n                aria-current=\"page\">\r\n                <i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link\"\r\n                to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link\"\r\n                to={Configs.Routes.Client.ChatRoom}>\r\n                <i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n\r\n            {me && me.isAdmin && (\r\n                <Fragment>\r\n                    {/* admin tools */}\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link border-top\"\r\n                        to={Configs.Routes.Client.Notices}>\r\n                        <i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n                    </NavLink>\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link\"\r\n                        to=\"/controlPanel/admin/whatever\">\r\n                        <svg className=\"bi me-2\" width=\"16\" height=\"16\"></svg>\r\n                    </NavLink>\r\n                </Fragment>\r\n            )}\r\n\r\n            <Button\r\n                variant=\"outline-danger\"\r\n                onClick={context.signOut}>\r\n                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n            </Button>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from './../globals/redux/actions/player';\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\tif (storageToken) {\r\n\t\t\tconsole.log(`auth called then `);\r\n\t\t\tdispatch(LoadMyPlayer());\r\n\t\t} else {\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Fragment, useContext, useEffect } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { LoadMyFriendsChats, ResetMyFriendsChats } from \"../globals/redux/actions/friends\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n    const context = useContext(GlobalContext);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\t\tdispatch(LoadMyFriendsChats());\r\n\t\t// profile unmounted\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n            dispatch(ResetMyFriendsChats());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <AutoSignIn />\r\n            {(context.device === Devices.Desktop) ? (\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <Col lg={3}>\r\n                        <ProfilePanel />\r\n                    </Col>\r\n                    <Col lg={9}>{children}</Col>\r\n                </Row>\r\n            ) : (\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <Col className=\"mx-auto\" sm={12}>\r\n                        <CollapsedPanel />\r\n                    </Col>\r\n                    <Col sm={12}>{children}</Col>\r\n                </Row>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"./../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadMyFriendsChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myFriends = [],\r\n\t\t\t\tmyChats = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (!(interactions instanceof Array))\r\n\t\t\t\t\tthrow new Error(\"server response is not an array!\");\r\n\t\t\t\tinteractions.forEach((interact) => {\r\n\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\tmyFriends.push(friend);\r\n\t\t\t\t\tmyChats.push({\r\n\t\t\t\t\t\twith: friend.ID,\r\n\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t? { me: msg.text, friend: null, date: msg.date }\r\n\t\t\t\t\t\t\t\t: { me: null, friend: msg.text, date: msg.date }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"LOAD_FRIENDS\",\r\n\t\t\t\t\tpayload: myFriends,\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: myChats });\r\n\t\t\t\t// dispatch friends here\r\n\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetMyFriendsChats = () => {\r\n\treturn async(dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t}\r\n}","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n\tgetAllGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}`);\r\n\t},\r\n\tgetMyGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`);\r\n\t}\r\n};\r\n\r\nexport default gameServices;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState } from 'react';\r\nimport { toHijri } from \"../../tools/format\";\r\n\r\nconst SingleScoreCard = ({\r\n    Type,\r\n    date,\r\n    playerXName,\r\n    playerOName,\r\n    xScore,\r\n    oScore,\r\n}) => {\r\n    // format score text:\r\n    const [xBadge, setXBadge] = useState(null);\r\n    const [oBadge, setOBadge] = useState(null);\r\n    const [hijriDate, setHijriDate] = useState(null);\r\n    useEffect(() => {\r\n        setHijriDate(toHijri(date)[0]);//toHijri = [date, time]\r\n        if (xScore > oScore) {\r\n            // x won\r\n            setXBadge(\"badge-success\");\r\n            setOBadge(\"badge-danger\");\r\n        } else if (xScore === oScore) {\r\n            //draw\r\n            setXBadge(\"badge-warning\");\r\n            setOBadge(\"badge-warning\");\r\n        } else {\r\n            // o won\r\n            setOBadge(\"badge-success\");\r\n            setXBadge(\"badge-danger\");\r\n        }\r\n    }, [date, xScore, oScore]);\r\n    // make this card 'bg-transparent' too?\r\n    return (\r\n        <Card border=\"dark\" className=\"single-score-card\">\r\n            {/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n            <Card.Body>\r\n                <Row className=\"text-center mx-auto\">\r\n                    <span className=\"col-5\">{playerXName}</span>\r\n                    <span\r\n                        className={`badge badge-pill ${xBadge} single-score-badge col-1`}>\r\n                        {xScore}\r\n                    </span>\r\n\r\n                    <span\r\n                        className={`badge badge-pill ${oBadge} single-score-badge col-1`}>\r\n                        {oScore}\r\n                    </span>\r\n                    <span className=\"col-5\">{playerOName}</span>\r\n                </Row>\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-0\">\r\n                <Button\r\n                    variant=\"outline-dark\"\r\n                    block\r\n                    size=\"lg\"\r\n                    className=\"replay-game-button\">\r\n                        {hijriDate} \r\n                        <i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n                </Button>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <Fragment>\r\n            { scores.length ? scores.map(score => (\r\n                <SingleScoreCard key={score.gameID}\r\n                    Type={score.Type}\r\n                    date={score.date}\r\n                    playerXName={score.players[0].name}\r\n                    playerOName={score.players[1].name}\r\n                    xScore={score.players[0].score}\r\n                    oScore={score.players[1].score}\r\n                ></SingleScoreCard>\r\n            )) :\r\n            <Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n                <Card.Body className=\"text-center\">\r\n                    <Card.Text>\r\n                        هیچ بازی ای انجام نگرفته است\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                </Card>}\r\n        </Fragment>\r\n     );\r\n};\r\n \r\nexport default AllScores;","export default __webpack_public_path__ + \"static/media/no-avatar.5e7c913e.png\";","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-center\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","export const TriggerRandomSearch = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.randomSearchTriggered = !previous.randomSearchTriggered;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendRequestTarget = targetID;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendRequestTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendlyGameTarget = targetID;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendlyGameTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.gameInvitation = { ID, name };\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RejectGameInvitation = (ID, name) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const AcceptInvitation = (invitorID) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.acceptedInviter = invitorID;\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\n// reject invitation by nulling the field\r\n","import { Button, Card, Col, ListGroup, Row, InputGroup } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport noAvatar from \"./no-avatar.png\"; // definitely must be changed bro!\r\nimport Record from \"./Record\";\r\nimport Avatar from \"react-avatar\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\n\r\nconst FriendRecords = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst dispatch = useDispatch();\r\n\tif (!me) return null; //because of time delay to load player data, component crashes below\r\n\t//fix the bug in a better way\r\n\tconst { records } = props.friend ? props.friend : me;\r\n\tconst currentID = props.friend ? props.friend.ID : me.userID; //need to edit?\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && currentID !== me.userID) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(currentID));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmargin: \"auto\",\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize=\"128\"\r\n\t\t\t\t\t\t\tround={true}\r\n\t\t\t\t\t\t\tsrc={noAvatar}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{props.friend && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\t// checked={gameType === 3}\r\n\t\t\t\t\t\t\t\t\t\t// onChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\t// checked={gameType === 4}\r\n\t\t\t\t\t\t\t\t\t\t// onChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\t// checked={gameType === 5}\r\n\t\t\t\t\t\t\t\t\t\t// onChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport AllScores from \"../../tables/scores/AllScores\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst myFriends = useSelector((state) => state.friends);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames(serverResponse.data.myGames.reverse());\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? myFriends.findIndex((friend) => friend.ID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, myFriends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link eventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t<FriendRecords friend={null} />\r\n\t\t\t\t\t\t\t\t\t<AllScores scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\teventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tfriend={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? myFriends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AllScores \r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.ID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.ID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../services/configs\";\r\nimport \"./profile.css\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices(data.notices.reverse());\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","\r\nexport const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n\t// one time u load from server, then new messages are simply pushed to previous data\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst previous = [...getState().chats];\r\n\t\t\t// is it ok to use by refrence ?\r\n\t\t\tconsole.log(\"recieve update\");\r\n\t\t\tprevious.find(chat => chat.with === friendID).messages.push({\r\n\t\t\t\tname: name, //is name needed?\r\n\t\t\t\tme: sent ? text : null,\r\n\t\t\t\tfriend: recieved ? text : null,\r\n\t\t\t\tdate: new Date(),\r\n\t\t\t});\r\n\t\t\tawait dispatch({\r\n\t\t\t\ttype: \"LOAD_CHATS\",\r\n\t\t\t\tpayload: previous,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t//..propeer message\r\n\t\t\t// ...reset?\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetMyChats = () => {\r\n\treturn async(dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t}\r\n}\r\n/*\r\n// load all chats\r\nexport const LoadMyChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await chatServices.getMyChats();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst {myChats} = data;\r\n\t\t\t\tconsole.log(myChats);\r\n\t\t\t\tconst chats = myChats.map((chat) => {\r\n\t\t\t\t\tconst { ownerOf, friendID, messages } = chat;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twith: friendID,\r\n\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t? { me: msg.text, friend: null, date: msg.date }\r\n\t\t\t\t\t\t\t\t: { me: null, friend: msg.text, date: msg.date }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: chats });\r\n\t\t\t\t// dispatch friends here\r\n\t\t\t\t// chats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t\tawait dispatch({ type: \"LOAD_FRIENDS\", payload: chats });\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\t}\r\n\t};\r\n};*/","import { UpdateMyChatList } from \"./chats\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\tconst chats = useSelector((state) => state.chats);\r\n\tconst [ourChat, setOurChat] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet ours = chats.find((chat) => chat.with === friendID);\r\n\t\tsetOurChat(ours && ours.messages ? ours.messages : []);\r\n\t}, [chats, friendID]);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { recieved } = message;\r\n\t\tif (!message.sent && recieved && recieved.friendID === friendID) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t}, [message, ourChat, friendID, dispatch]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friendID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"big-single-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{ourChat &&\r\n\t\t\t\t\t\t\t\tourChat instanceof Array &&\r\n\t\t\t\t\t\t\t\tourChat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tourChat[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex - 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tconst myfriends = useSelector((state) => state.friends);\r\n\t\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t// id=\"left-tabs-example\"\r\n\t\t\t\t// defaultActiveKey={filterID}\r\n\t\t\t\t// onSelect={(key) => setFilterID(key)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3} md={3} sm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.ID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{friend.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\t// key={uuidv1()}\r\n\t\t\t\t\t\t\t\t\t\tfriendID={friend.ID}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Button, Card, Form, Col, Row } from \"react-bootstrap\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport \"./profile.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nimport GlobalContext from './../globals/state/GlobalContext';\r\n\r\nconst MODES = { READ_ONLY: 0, EDIT: 1, CHANGE_PASS: 2 };\r\nconst AccountCredentials = () => {\r\n    //states\r\n\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [studentID, setStudentID] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(\"\");\r\n    const [pageMode, setPageMode] = useState(MODES.READ_ONLY); //  0 => read only, 1 => edit mode, 2 => change password\r\n    const [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n    const context = useContext(GlobalContext);\r\n    //on component mount download user credentials\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                setLoading(true);\r\n                const { status, data } = await userServices.getMyCredentials();\r\n                if (status === Configs.Status.Successful) {\r\n                    const { me } = data;\r\n                    setFullname(me.fullname);\r\n                    setStudentID(me.studentID);\r\n                    setEmail(me.email);\r\n                }\r\n            } catch (err) {\r\n                if (!Configs.Status.isErrorExpected(err))\r\n                    Error(\r\n                        \"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n                    );\r\n                setLoading(false);\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }, [pageUpdateTrigger]);\r\n\r\n    const reloadPage = () => {\r\n        setLoading(false);\r\n        setPageMode(MODES.READ_ONLY);\r\n        triggerPageUpdate(!pageUpdateTrigger);\r\n    };\r\n    const saveChanges = async () => {\r\n        //add patern and stuff to states and inputs\r\n        // check all inputs plz\r\n        setLoading(true);\r\n        try {\r\n            const { status } = await userServices.editMyCredentials({\r\n                studentID,\r\n                fullname,\r\n                email,\r\n                password,\r\n            });\r\n            if (status === Configs.Status.Successful) {\r\n                OK(`تغییرات با موفقیت اعمال شد`);\r\n                // dispatch(TriggerRecordUpdate());\r\n                // find another way to update\r\n\r\n                reloadPage();\r\n            }\r\n        } catch (err) {\r\n            if (!Configs.Status.isErrorExpected(err))\r\n                Error(\r\n                    \"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\",\r\n                    { position: \"top-left\", closeOnClick: true }\r\n                );\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const changeMyPassword = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { status } = await userServices.changeMyPassword({\r\n                studentID,\r\n                password,\r\n                newPassword,\r\n            });\r\n            if (status === Configs.Status.Successful) {\r\n                OK(\"رمز شما با موفقیت تغییر داده شد\");\r\n                context.signOut();\r\n            }\r\n        } catch (err) {\r\n            if (!Configs.Status.isErrorExpected(err))\r\n                Sorry(\r\n                    \"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n                );\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const selectMode = (e) => {\r\n        e.preventDefault();\r\n        switch (pageMode) {\r\n            case MODES.EDIT:\r\n                saveChanges();\r\n                return;\r\n            case MODES.CHANGE_PASS:\r\n                changeMyPassword();\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n    const checkConfirmPassword = (event) => {\r\n        setConfirmNewPassword(event.target.value);\r\n        if (newPassword !== event.target.value) {\r\n            event.target.setCustomValidity(\r\n                \"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n            );\r\n            //console.log(password, confirmPassword);\r\n        } else event.target.setCustomValidity(\"\");\r\n    };\r\n\r\n    // *************************** DESIGN NOTE *******/\r\n    // HOW ABOUT USING TABS ? <Tabs>\r\n    return (\r\n        <Fragment>\r\n            <Card\r\n                border=\"secondary\"\r\n                bg=\"transparent\"\r\n                className=\"big-single-card\">\r\n                <Card.Header className=\"text-center\">\r\n                    <Row className=\"w-100 mx-auto\">\r\n                        <Col>\r\n                            <Button\r\n                                block\r\n                                onClick={() => setPageMode(MODES.READ_ONLY)}\r\n                                variant={`${\r\n                                    !pageMode\r\n                                        ? \"outline-primary\"\r\n                                        : \"outline-secondary\"\r\n                                }`}>\r\n                                {pageMode === MODES.READ_ONLY && (\r\n                                    <i\r\n                                        className=\"fa fa-dot-circle-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                )}\r\n                                فقط مشاهده\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                block\r\n                                onClick={() => setPageMode(MODES.EDIT)}\r\n                                variant={`${\r\n                                    pageMode === MODES.EDIT\r\n                                        ? \"outline-primary\"\r\n                                        : \"outline-secondary\"\r\n                                }`}>\r\n                                {pageMode === MODES.EDIT && (\r\n                                    <i\r\n                                        className=\"fa fa-dot-circle-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                )}\r\n                                ویرایش\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                block\r\n                                onClick={() => setPageMode(MODES.CHANGE_PASS)}\r\n                                variant={`${\r\n                                    pageMode === MODES.CHANGE_PASS\r\n                                        ? \"outline-primary\"\r\n                                        : \"outline-secondary\"\r\n                                }`}>\r\n                                {pageMode === MODES.CHANGE_PASS && (\r\n                                    <i\r\n                                        className=\"fa fa-dot-circle-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                )}\r\n                                تغییر رمز عبور\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <Form onSubmit={(e) => selectMode(e)}>\r\n                    <Card.Body className=\"w-75 text-center mx-auto\">\r\n                        <LoadingBar loading={loading} />\r\n\r\n                        {pageMode !== MODES.CHANGE_PASS && (\r\n                            <Fragment>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        شماره دانشجویی\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        disabled\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"Student ID\"\r\n                                        value={studentID}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        نام کاربر\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        disabled={!pageMode}\r\n                                        type=\"text\"\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        pattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n                                        onInput={(e) =>\r\n                                            e.target.setCustomValidity(\"\")\r\n                                        }\r\n                                        onInvalid={(e) =>\r\n                                            e.target.setCustomValidity(\r\n                                                \"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                            )\r\n                                        }\r\n                                        placeholder=\"Full Name\"\r\n                                        value={fullname}\r\n                                        required=\"required\"\r\n                                        onChange={(e) =>\r\n                                            setFullname(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        ایمیل\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        disabled={!pageMode}\r\n                                        pattern=\".{6,}\"\r\n                                        onInput={(e) =>\r\n                                            e.target.setCustomValidity(\"\")\r\n                                        }\r\n                                        onInvalid={(e) =>\r\n                                            e.target.setCustomValidity(\r\n                                                \"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n                                            )\r\n                                        }\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"E-mail\"\r\n                                        value={email}\r\n                                        required=\"required\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                            </Fragment>\r\n                        )}\r\n                        {pageMode !== MODES.READ_ONLY && (\r\n                            <Form.Group className=\"form-inline\">\r\n                                <Form.Label className=\"w-25\">\r\n                                    {`رمز عبور ${\r\n                                        pageMode === MODES.CHANGE_PASS\r\n                                            ? \"فعلی\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    className=\"account-info-textbox w-75\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        setPassword(e.target.value)\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                        )}\r\n                        {pageMode === MODES.CHANGE_PASS && (\r\n                            <>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        رمز عبور جدید\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        pattern=\".{6,15}\"\r\n                                        onInput={(e) =>\r\n                                            e.target.setCustomValidity(\"\")\r\n                                        }\r\n                                        onInvalid={(e) =>\r\n                                            e.target.setCustomValidity(\r\n                                                \"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n                                            )\r\n                                        }\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"New Password\"\r\n                                        value={newPassword}\r\n                                        required=\"required\"\r\n                                        onChange={(e) =>\r\n                                            setNewPassword(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        تایید رمز عبور جدید\r\n                                    </Form.Label>\r\n\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"Confirm New Password\"\r\n                                        value={confirmNewPassword}\r\n                                        required=\"required\"\r\n                                        onChange={(event) =>\r\n                                            checkConfirmPassword(event)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                            </>\r\n                        )}\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            disabled={!pageMode}\r\n                            block\r\n                            variant=\"success\"\r\n                            className=\"w-50 mx-auto\">\r\n                            <i\r\n                                className=\"fa fa-wrench px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            ثبت تغییرات\r\n                        </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AccountCredentials;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card border=\"primary\" className=\"sign-in-sidebar\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices(data.notices.reverse());\r\n                    //if all is empty\r\n                    if(data.notices.length === 0) {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {notices.length && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","export default __webpack_public_path__ + \"static/media/no-avatar.5e7c913e.png\";","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های فعال\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import noAvatar from \"./no-avatar.png\"; // definitely must be changed bro!\r\nimport { Card, Col, Alert, ListGroup, Button } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst person = props.person ? props.person : me;\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(person.userID));\r\n\t};\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(scoreboard);\r\n\t\tsetPiece(\r\n\t\t\tme && person.userID !== me.userID ? scoreboard.opp : scoreboard.me\r\n\t\t);\r\n\t}, [person, me, scoreboard]);\r\n\tuseEffect(() => {\r\n\t\tif (me && person.userID !== me.userID) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tperson.userID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [me, person]);\r\n\tif (!person) return null;\r\n\tconst { records } = person;\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">\r\n\t\t\t\t\t\t{person.fullname}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tmargin: \"auto\",\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsize=\"60\"\r\n\t\t\t\t\t\tround={true}\r\n\t\t\t\t\t\tsrc={noAvatar}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باختها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{me === person ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={person.userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t}, []);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"sidebar manager called\");\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\tif (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\telse setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t\r\n\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t{rightSideBar && <Col md={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tmd={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col md={context.device !== Devices.Tablet ? 3 : 4}>\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (roomName, gameType) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", roomName, gameType)); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, CleanScoreboard } from \"./actions/game\";\r\nimport { LoadThisPlayer, ResetOpponent } from \"./actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./actions/game\";\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n\tconst mapStateToProps = (state) => ({\r\n\t\tme: state.me,\r\n\t\topponent: state.opponent,\r\n\t\troom: state.room,\r\n\t\tscoreboard: state.scoreboard,\r\n\t\ttools: state.tools,\r\n\t});\r\n\r\n\tconst mapDispatchToProps = (dispatch) => ({\r\n\t\tLoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n\t\tResetOpponent: () => dispatch(ResetOpponent()),\r\n\t\tEnterRoom: (room) => dispatch(EnterRoom(room)),\r\n\t\tExitRoom: () => dispatch(ExitRoom()),\r\n\t\t// SetGameID: (gameID) => dispatch(SetGameID(gameID)),\r\n\t\tUpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n\t\tCleanScoreboard: () => dispatch(CleanScoreboard()),\r\n\t});\r\n\treturn connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { GameSetting } from \"../../services/configs\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = GameSetting.T3D.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-start px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-half px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>;\r\n        }\r\n        setTimeStamp(<div className={color}>{icon}{timeRemaining}</div>);\r\n    }, [timeRemaining, aThird]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}>\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}>\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({ timeRemaining, dimension, players, table, onEachCellClick,normalCell }) => {\r\n    let dimens = [];\r\n    for (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n    //prop drilling in BriefScoreBoard\r\n    return (\r\n        <Card\r\n            bg=\"transparent\"\r\n            border=\"dark\"\r\n            className=\"w-100 mx-auto\">\r\n            <BriefScoreboard timeRemaining={timeRemaining} players={players} />\r\n            <Card.Body className=\"game-border-card\">\r\n                {table ? (\r\n                    dimens.map((floor) => (\r\n                        <Fragment>\r\n                            {dimens.map((row) => (\r\n                                <Row\r\n                                    style={{\r\n                                        direction: \"ltr\",\r\n                                        marginLeft: `${GameSetting.T3D.TableRowMargings[row]}px`,\r\n                                    }}>\r\n                                    {dimens.map((column) => (\r\n                                        <Button\r\n                                            key={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            variant={normalCell}\r\n                                            className=\"game-table-cells\"\r\n                                            style={\r\n                                                table[floor][row][column] !==\r\n                                                null\r\n                                                    ? {\r\n                                                          color: players[\r\n                                                              table[floor][row][\r\n                                                                  column\r\n                                                              ]\r\n                                                          ].color,\r\n                                                      }\r\n                                                    : null\r\n                                            }\r\n                                            id={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            onClick={(event) =>\r\n                                                onEachCellClick(event)\r\n                                            }>\r\n                                            {table[floor][row][column] !==\r\n                                                null &&\r\n                                                players[\r\n                                                    table[floor][row][column]\r\n                                                ].shape}\r\n                                        </Button>\r\n                                    ))}\r\n                                </Row>\r\n                            ))}\r\n                            <br />\r\n                        </Fragment>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"text-center\"> در حال اتصال... </p>\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n\tconnect,\r\n\tcreateSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport { Attention, Notify, Sorry } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\n\r\nclass GamePlay extends Component {\r\n\t//**** game resets on device change. fix it */\r\n\tstate = {\r\n\t\tnormalCell: \"outline-dark\",\r\n\t\tplayers: [\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"blue\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"primary\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"darkred\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"danger\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t], // maybe use player actual user name and change this item to an object of objects?\r\n\t\tturn: 0, // start turn is decided by throwning dices\r\n\t\tdimension: 3,\r\n\t\ttable: null,\r\n\t\tmyTurn: undefined, // change this\r\n\t\tgameID: null,\r\n\t\tsocketGamePlay: undefined,\r\n\t\tplayerOnline: true,\r\n\t\ttimeRemaining: 0, //create a config\r\n\t\ttimerID: null,\r\n\t\tconnectionCheckTimerID: null,\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.cellButtons = [];\r\n\t}\r\n\r\n\tupdateGameScorebaord = () => {\r\n\t\tconst { myTurn, players } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\r\n\t\tthis.props.UpdateScoreboard({\r\n\t\t\tme: {\r\n\t\t\t\tindex: myTurn,\r\n\t\t\t\tshape: players[myTurn].shape,\r\n\t\t\t\tscore: players[myTurn].score,\r\n\t\t\t},\r\n\t\t\topp: {\r\n\t\t\t\tindex: oppTurn,\r\n\t\t\t\tshape: players[oppTurn].shape,\r\n\t\t\t\tscore: players[oppTurn].score,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tenableTimerForMyMove = (timeout = GameSetting.T3D.TurnTimeOut) => {\r\n\t\tthis.setState({ timeRemaining: timeout });\r\n\t\t//is it needed to declare timerID as state?\r\n\t\tconst timerID = setInterval(() => {\r\n\t\t\tconst { timeRemaining, timerID } = this.state;\r\n\t\t\tif (timeRemaining <= 0) {\r\n\t\t\t\tclearInterval(timerID);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({ timeRemaining: this.state.timeRemaining - 1 });\r\n\t\t}, 1000);\r\n\t\tthis.setState({ timerID });\r\n\t};\r\n\r\n\tupdatePlayerStates = ({ turn, xScore, oScore }) => {\r\n\t\tconst players = [...this.state.players];\r\n\t\tplayers[0].score = xScore;\r\n\t\tplayers[1].score = oScore;\r\n\t\tthis.setState({\r\n\t\t\tplayers,\r\n\t\t\tturn,\r\n\t\t});\r\n\t\tthis.updateGameScorebaord();\r\n\t};\r\n\r\n\tdisableAllTimers = () => {\r\n\t\tconst { connectionCheckTimerID, timerID } = this.state;\r\n\t\tclearTimeout(connectionCheckTimerID);\r\n\t\tclearTimeout(timerID); //move time out timer\r\n\t};\r\n\r\n\tsocketOnMessage = (response) => {\r\n\t\tconst { data } = response;\r\n\t\tconst { cmd, msg } = JSON.parse(data);\r\n\t\tif (cmd === \"START\") {\r\n\t\t\tconst startTime = toTimeShort(msg);\r\n\t\t\tAttention(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n\t\t} else if (cmd === \"GAME\") {\r\n\t\t\tconst { IDs, dimension, myTurn } = msg;\r\n\t\t\tthis.setState({ dimension, myTurn });\r\n\t\t\tconst opponentID = IDs[Number(!myTurn)];\r\n\t\t\tconst { opponent, LoadThisPlayer } = this.props;\r\n\t\t\tif (!opponent && opponentID)\r\n\t\t\t\t//if opponent is not null -> means this was called before and there's no need to run again\r\n\t\t\t\tLoadThisPlayer(opponentID);\r\n\t\t} else if (cmd === \"LOAD\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tconst { table } = msg;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttable,\r\n\t\t\t});\r\n\t\t\tthis.updateGameScorebaord();\r\n\t\t} else if (cmd === \"TIMER\") {\r\n\t\t\t//you can calculate request respone time -> then minimize it from tiem sent by server -> to gain acurate time\r\n\t\t\t//but its real neccessary, Math.floor on the server side does this nearly\r\n\t\t\t//but for accurate approach remember: remove Math.floor from server side\r\n\t\t\tconsole.log(\"time updated: \", msg);\r\n\t\t\tthis.setState({ timeRemaining: msg });\r\n\t\t\tclearTimeout(this.state.timerID); //clear move time out timers, though their disabled before, this is for assurance\r\n\t\t\tthis.enableTimerForMyMove(msg);\r\n\t\t} else if (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n\t\telse if (cmd === \"UPDATE\") {\r\n\t\t\tconst { room } = this.props;\r\n\t\t\tconst { dimension } = this.state;\r\n\t\t\tconst cellID = Number(msg.nextMove);\r\n\r\n\t\t\t//*************** */\r\n\t\t\t//is this needed to check the move in client? considering that complete check has been made in client\r\n\t\t\t//and consder that: checking move in client may cause some bugs\r\n\t\t\t//for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n\t\t\t//turn is not updated and this player can not make new moves to recieve server's table!!!\r\n\t\t\tthis.verifyAndApplyTheMove(\r\n\t\t\t\tthis.getCellCoordinates(cellID, dimension),\r\n\t\t\t\tthis.cellButtons[cellID]\r\n\t\t\t);\r\n\t\t\t//wrap it up this part of UPDATE and LOAD in a method\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\r\n\t\t\tthis.cellButtons[cellID].focus();\r\n\t\t\tthis.updateGameScorebaord();\r\n\r\n\t\t\t// now inform the server that the move is recieved\r\n\t\t\t//force connect it?\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"move_recieved\", room.name, true)\r\n\t\t\t);\r\n\t\t\t// server time out is set and now setInterval for this client to show how much time left\r\n\t\t\tthis.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"MOVE_MISSED\") {\r\n\t\t\tconst { myTurn } = this.state;\r\n\t\t\t//msg --> forced set turn\r\n\t\t\tthis.setState({ turn: msg });\r\n\t\t\tif (msg === myTurn) this.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"NOT_AUTHORIZED\") {\r\n\t\t\tSorry(\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\");\r\n\t\t\t// signOut();\r\n\t\t} else if (cmd === \"END\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tthis.endThisGame();\r\n\t\t\tthis.disableAllTimers();\r\n\t\t} else if (cmd === \"CLOSE\") {\r\n\t\t\tAttention(\r\n\t\t\t\t\"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n\t\t\t);\r\n\t\t\tthis.closeThisGame();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"wrong socket request\");\r\n\t\t}\r\n\t};\r\n\r\n\tforceConnectWS = async (nextJob) => {\r\n\t\tconst { room } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tlet socket = await connect(room.name, room.type);\r\n\t\t\tsocket.onmessage = this.socketOnMessage;\r\n\t\t\tthis.setState({ socketGamePlay: socket });\r\n\t\t\tif (nextJob) nextJob();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// **********************\r\n\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\tsetTimeout(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconsole.log(\"rconnecting from GamePlay\");\r\n\t\t\t\t\tthis.forceConnectWS(nextJob);\r\n\t\t\t\t},\r\n\t\t\t\tnextJob ? 1000 : 3000\r\n\t\t\t);\r\n\t\t\t//if there is a next job --> then player is sending a move or something important and\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in serimport { LoadPlayer } from './../../globals/redux/actions/player';\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in server for sending moves\r\n\t\t}\r\n\t};\r\n\r\n\tenableConnectionCheckTimer = () => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (window.navigator.onLine) {\r\n\t\t\t\tif (!this.state.playerOnline) {\r\n\t\t\t\t\t//player JUST became online\r\n\t\t\t\t\tthis.setState({ playerOnline: true }); // toggle online status\r\n\t\t\t\t\tthis.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n\t\t\t\t}\r\n\t\t\t} else if (this.state.playerOnline) {\r\n\t\t\t\t//player JUST became offline\r\n\t\t\t\tthis.setState({ playerOnline: false });\r\n\t\t\t}\r\n\t\t}, 2500); //2.5 sec is it ok?\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n\t\tconst { room } = this.props;\r\n\t\tconst { myTurn } = this.state;\r\n\t\tthis.setState({ dimension: room.type });\r\n\r\n\t\tthis.forceConnectWS(() => {\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"load\", room.name, null)\r\n\t\t\t);\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"mytimer\", room.name, myTurn)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tconnectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.disableAllTimers();\r\n\t}\r\n\tgetCellCoordinates = (cellID, dimen) => {\r\n\t\tconst cellFloor = Math.floor(cellID / (dimen * dimen));\r\n\t\tconst onFloorId = cellID % (dimen * dimen);\r\n\t\tconst cellRow = Math.floor(onFloorId / dimen);\r\n\t\tconst cellColumn = onFloorId % dimen;\r\n\t\t// just test a random id to see how above formula works!\r\n\t\treturn { floor: cellFloor, row: cellRow, column: cellColumn };\r\n\t};\r\n\tonEachCellClick = (event) => {\r\n\t\tconst { dimension, turn, timerID } = this.state;\r\n\t\tconst {opponent, room } = this.props;\r\n\t\tif (opponent) {\r\n\t\t\ttry {\r\n\t\t\t\tconst selectedCellButton = event.target;\r\n\r\n\t\t\t\t//this is just for when the connection is not automatically came back, so the user via clicking cells can initiate connection\r\n\t\t\t\tif (this.state.turn !== this.state.myTurn) {\r\n\t\t\t\t\t//is this needed really?\r\n\t\t\t\t\tthis.forceConnectWS(null);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst cell = this.getCellCoordinates(\r\n\t\t\t\t\tselectedCellButton.id,\r\n\t\t\t\t\tdimension\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n\t\t\t\t\t//send move to WebSocket Server\r\n\r\n\t\t\t\t\tthis.setState({ turn: (turn + 1) % 2 });\r\n\t\t\t\t\tthis.forceConnectWS(() => {\r\n\t\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\t\tcreateSocketRequest(\r\n\t\t\t\t\t\t\t\t\"move\",\r\n\t\t\t\t\t\t\t\troom.name,\r\n\t\t\t\t\t\t\t\tselectedCellButton.id\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclearInterval(timerID);\r\n\t\t\t\t\tthis.setState({ timeRemaining: 0 });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t//load again here?\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tverifyAndApplyTheMove = (cell, cellButton) => {\r\n\t\tconst { players, turn, normalCell } = this.state;\r\n\t\tlet tempTable = [...this.state.table];\r\n\t\tif (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n\t\t\ttempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n\t\t\tthis.setState({ table: tempTable });\r\n\t\t\t// cellButton.value = players[turn].shape;\r\n\t\t\t// cellButton.style.color = players[turn].color;\r\n\t\t\tcellButton.className = `game-table-cells btn btn-${players[turn].selected}`;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcellButton.className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t}, 1000);\r\n\t\t\t// time to inspect the new cell:\r\n\t\t\tthis.inspectAreaAroundTheCell(cell.floor, cell.row, cell.column);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tinspectAreaAroundTheCell = (floor, row, column) => {\r\n\t\t// inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n\t\t// is it needed to write a inspectAll method ?\r\n\t\tconst { players, table, dimension } = this.state;\r\n\t\tconst playerInTheCell = table[floor][row][column];\r\n\t\tlet rowCount = 0,\r\n\t\t\tcolumnCount = 0,\r\n\t\t\tfloorMainDiagCount = 0,\r\n\t\t\tfloorSideDiagCount = 0;\r\n\t\tlet tableMainDiagCount = 0,\r\n\t\t\ttableSideDiagCount = 0,\r\n\t\t\ttableAltitudeCount = 0;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tif (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n\t\t\tif (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n\t\t\tif (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n\t\t\tif (row === column) {\r\n\t\t\t\tif (table[floor][i][i] === playerInTheCell)\r\n\t\t\t\t\tfloorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n\t\t\t\tif (row === floor && table[i][i][i] === playerInTheCell)\r\n\t\t\t\t\ttableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (row + column + 1 === dimension) {\r\n\t\t\t\tif (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n\t\t\t\t\tfloorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n\t\t\t\tif (\r\n\t\t\t\t\trow === floor &&\r\n\t\t\t\t\ttable[i][i][dimension - i - 1] === playerInTheCell\r\n\t\t\t\t)\r\n\t\t\t\t\ttableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// now inspect wether a line has been made and take action for it\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\trowCount,\r\n\t\t\tfloor * dimension * dimension + row * dimension,\r\n\t\t\t1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tcolumnCount,\r\n\t\t\tfloor * dimension * dimension + column,\r\n\t\t\tdimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorMainDiagCount,\r\n\t\t\tfloor * dimension * dimension,\r\n\t\t\tdimension + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorSideDiagCount,\r\n\t\t\tfloor * dimension * dimension + (dimension - 1),\r\n\t\t\tdimension - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableMainDiagCount,\r\n\t\t\t0,\r\n\t\t\tdimension * (dimension + 1) + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableSideDiagCount,\r\n\t\t\tdimension - 1,\r\n\t\t\tdimension * (dimension + 1) - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableAltitudeCount,\r\n\t\t\trow * dimension + column,\r\n\t\t\tdimension * dimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t};\r\n\r\n\t// method below: checks each possible line(according to the condition that user gives it),\r\n\t// if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n\tconnectTheScoreLines = (count, firstCell, step, player, dimension) => {\r\n\t\tconst { normalCell } = this.state;\r\n\t\tif (count === dimension) {\r\n\t\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t].className = `game-table-cells btn btn-${player.lineColor}`;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t\t].className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t\t}, 1000 + i * 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tcloseThisGame = () => {\r\n\t\tthis.state.socketGamePlay.close();\r\n\t\tthis.setState({ socketGamePlay: null });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.CleanScoreboard();\r\n\t\t\tthis.props.ResetOpponent();\r\n\t\t\tthis.props.ExitRoom();\r\n\t\t\tthis.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tendThisGame = () => {\r\n\t\tconst { players, myTurn } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\t\t//NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n\t\tif (players[myTurn].score > players[oppTurn].score)\r\n\t\t\tNotify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n\t\telse if (players[myTurn].score === players[oppTurn].score)\r\n\t\t\tNotify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n\t\telse Notify(\"شما باختید\");\r\n\t\t//reset everything:\r\n\t\tthis.closeThisGame();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<TableDesign\r\n\t\t\t\tdimension={this.state.dimension}\r\n\t\t\t\tplayers={this.state.players}\r\n\t\t\t\ttable={this.state.table}\r\n\t\t\t\ttimeRemaining={this.state.timeRemaining}\r\n\t\t\t\tonEachCellClick={this.onEachCellClick}\r\n\t\t\t\tnormalCell={this.state.normalCell}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(GamePlay));\r\n\r\n//another way to check online / offline status :\r\n// initiateGameTimer = () => {\r\n//     setInterval(() => {\r\n//         if (window.navigator.onLine) {\r\n//             if (this.connectionLost) {\r\n//                 console.log(\"connected\");\r\n//                 this.connectionLost = false;\r\n//                 this.forceConnectWS(null);\r\n//             }\r\n//         } else {\r\n//             console.log(\"dissconnected\");\r\n//             this.connectionLost = true;\r\n//         }\r\n//         /*this.isOnline(\r\n//             () => {\r\n//                 if (this.connectionLost) {\r\n//                     console.log(\"connected\");\r\n//                     this.connectionLost = false;\r\n//                     this.forceConnectWS(null);\r\n//                 }\r\n//             },\r\n//             () => {\r\n//                 console.log(\"dissconnected\");\r\n//                 this.connectionLost = true;\r\n//             }\r\n//         );*/\r\n//     }, 1000);\r\n// };\r\n\r\n// /*    isOnline = (success, failure) => {\r\n//     var xhr = XMLHttpRequest\r\n//         ? new XMLHttpRequest()\r\n//         : new window.ActiveXObject(\"Microsoft.XMLHttp\");\r\n//     xhr.onload = function () {\r\n//         if (success instanceof Function) {\r\n//             success();\r\n//         }\r\n//     };\r\n//     xhr.onerror = function () {\r\n//         if (failure instanceof Function) {\r\n//             failure();\r\n//         }\r\n//     };\r\n//      xhr.open(\"GET\", \"https://t3dweb.herokuapp.com/users\", true);//edit this ******************************\r\n//      xhr.send();\r\n// }; */\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from '../commons/LoadingBar';\r\nimport { Notify } from \"../tools/notification\";\r\nimport { TriggerRandomSearch } from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nconst SingleGame = ({ friendlyGame }) => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [gameType, setGameType] = useState(4);\r\n    const me = useSelector((state) => state.me);\r\n    const [searching, setSearching] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onStartGameClick = (event) => {\r\n        event.preventDefault();\r\n        if (!me) {\r\n            Notify(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n            return;\r\n        }\r\n        if (friendlyGame) dispatch(EnterRoom({ name: roomName, type: gameType }));\r\n        // random game:\r\n        else {\r\n            dispatch(EnterRoom({ name: null, type: gameType }));\r\n            dispatch(TriggerRandomSearch());\r\n            setSearching(true);\r\n        }\r\n    };\r\n\r\n    //on destroy\r\n    useEffect(() => {\r\n        return () => {\r\n            setSearching(false); //make sure preloader turns off\r\n         }\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <LoadingBar loading={searching} />\r\n            <hr />\r\n            <Form onSubmit={(event) => onStartGameClick(event)}>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"w-25\">ابعاد جدول</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2px\",\r\n                        }}>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"3\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 3}\r\n                                onChange={() => setGameType(3)}\r\n                            />\r\n                            <InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"4\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 4}\r\n                                onChange={() => setGameType(4)}\r\n                            />\r\n                            <InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"5\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 5}\r\n                                onChange={() => setGameType(5)}\r\n                            />\r\n                            <InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                {friendlyGame && (\r\n                    \r\n                    <Form.Group className=\"mt-3 form-inline\">\r\n                        \r\n                        <Form.Label className=\"w-25\">نام روم</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"w-75 text-left bg-transparent\"\r\n                            placeholder=\"Room Name\"\r\n                            value={roomName}\r\n                            required=\"required\"\r\n                            onChange={(event) =>\r\n                                setRoomName(event.target.value)\r\n                            }\r\n                        />\r\n                    </Form.Group>\r\n                )}\r\n                <hr />\r\n                <Button type=\"submit\" className=\"mt-4\" block variant=\"success\">\r\n                    <i\r\n                        className={`fa ${\r\n                            friendlyGame ? \"fa-handshake-o\" : \"fa-search\"\r\n                        } px-2`}\r\n                        aria-hidden=\"true\"></i>\r\n                    {friendlyGame ? \"ارسال درخواست\" : \"جستجو\"}\r\n                </Button>\r\n            </Form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SingleGame;\r\n","import { Alert, Badge, Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst CompetitionSummary = ({ title, summary }) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" variant=\"info\">\r\n                    <Alert.Heading className=\"text-center\">\r\n                        <Badge variant=\"success p-2\" >\r\n                            {title}\r\n                        </Badge>\r\n                    </Alert.Heading>\r\n\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" pill=\"true\" variant=\"info\">\r\n                    <p>تعداد شرکت کنندگان : 00000000</p>\r\n                    <p>نکات دیگر</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col>\r\n                    <Button block variant=\"outline-success\">شرکت در مسابقه</Button>\r\n                </Col>\r\n                <Col>\r\n                <Button block variant=\"outline-secondary\">بازیکنان حاضر</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionSummary;\r\n","import { Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport \"./competitions.css\";\r\nimport CompetitionSummary from \"./CompetitionSummary\";\r\n\r\nconst CompetitionsMain = () => {\r\n    return (\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <hr />\r\n\r\n            <Row>\r\n                <Col className=\"competition-menu-body\" sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"first\">\r\n                                جام حذفی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"second\">\r\n                                لیگ امتیازی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"third\">\r\n                                بازی شرطی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"forth\">\r\n                                جدول رندوم\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"fifth\">\r\n                                و غیره\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Col>\r\n                {/* <div style={{borderLeft: '1px solid gray', height:'500px'}}></div> */}\r\n                <Col sm={9}>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"first\">\r\n                            <CompetitionSummary\r\n                                title=\"جام حذفی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"second\">\r\n                            <CompetitionSummary\r\n                                title=\"لیگ امتیازی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"third\">\r\n                            <CompetitionSummary\r\n                                title=\"بازی شرطی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"forth\">\r\n                            <CompetitionSummary\r\n                                title=\"جدول رندوم\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"fifth\">\r\n                            <CompetitionSummary\r\n                                title=\"و غیره\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Col>\r\n            </Row>\r\n        </Tab.Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionsMain;\r\n","import GamePlay from \"./gameplay/GamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleGame from \"./SingleGame\";\r\nimport { Tab, Tabs, Card, Fade } from \"react-bootstrap\";\r\nimport { Fragment } from \"react\";\r\nimport CompetitionsMain from \"./competitions/CompetitionsMain\";\r\n\r\nconst GameDeck = () => {\r\n    const room = useSelector((state) => state.room);\r\n\r\n    return (\r\n        <Fragment>\r\n            {room.name ? (\r\n                <GamePlay />\r\n            ) : (\r\n                <Card\r\n                    border=\"secondary\"\r\n                    bg=\"transparent\"\r\n                    className=\"game-deck-card\">\r\n                    <Card.Body>\r\n                        <Tabs\r\n                            defaultActiveKey=\"randomGame\"\r\n                            transition={false}\r\n                            id=\"noanim-tab-example\"\r\n                            variant=\"pills\"\r\n                            // transition={Fade}\r\n                            className=\"mb-3\">\r\n                            \r\n                            <Tab eventKey=\"randomGame\" title=\"بازی تصادفی\">\r\n                                <SingleGame friendlyGame={false} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"competitions\" title=\"مسابقات\">\r\n                                <CompetitionsMain />\r\n                            </Tab>\r\n                            <Tab eventKey=\"friendlyGame\" title=\"بازی با دوستان\">\r\n                                <SingleGame friendlyGame={true} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport AllScores from \"./AllScores\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nclass ScoresTable extends Component {\r\n    state = {\r\n        liveScores: [],\r\n        finalScores: [],\r\n        showLiveOnes: false,\r\n        loading: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log('CHecking prop: ', this.props.Device);\r\n        // get all game results , live or final, handling promises\r\n        // client and server side for this Module seriously need to be edited\r\n        (async () => {\r\n            this.setState({ loading: true }); // use preloader here?\r\n            const { data, status } = await gameServices.getAllGames();\r\n            if (status === Configs.Status.Successful) return data.allGames;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                result = result.reverse();\r\n                this.setState({\r\n                    liveScores: result.filter((game) => game.isLive),\r\n                    finalScores: result.filter((game) => !game.isLive),\r\n                    loading: false,\r\n                });\r\n                //EDIT EDIT EDIT\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ finalScores: [], loading: false });\r\n            });\r\n    }\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({ showLiveOnes: true });\r\n    };\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({ showLiveOnes: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n       \r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n        // DESIGN : USE <Tabs> ???\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowLiveScores}>\r\n                            نتایج زنده\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                !showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowFinalScores}>\r\n                            نتایج نهایی\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* this single column is to make mode select buttons and Allscores same width */}\r\n                        <AllScores\r\n                            scores={showLiveOnes ? liveScores : finalScores}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScoresTable;\r\n","import { Button, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3 form-inline\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\tclassName=\"mb-3 form-inline\"\r\n\t\t\t\t\t\t\t\tcontrolId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tرمز عبور\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">نام</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tنام خانوادگی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tتایید رمز عبور\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","const SinglePlayerCard = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SinglePlayerCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SinglePlayerCard from \"./SinglePlayerCard\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n            <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                <thead className=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">نام بازیکن</th>\r\n                        <th scope=\"col\">امتیاز</th>\r\n                        <th scope=\"col\">تعداد برد</th>\r\n                        <th scope=\"col\">تعداد باخت</th>\r\n                        <th scope=\"col\">تعداد تساوی</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <SinglePlayerCard\r\n                            key={player.userID}\r\n                            rowNumber={\r\n                                players.findIndex(\r\n                                    (p) => p.userID === player.userID\r\n                                ) + 1\r\n                            }\r\n                            name={player.fullname}\r\n                            points={player.records.points}\r\n                            wins={player.records.wins}\r\n                            loses={player.records.loses}\r\n                            draws={player.records.draws}></SinglePlayerCard>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from '../../services/configs';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nclass Rankings extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === Configs.Status.Successful) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort( //sort priorities: 1. more points 2. more wins 3. less loses\r\n                        (p1, p2) =>\r\n                            p2.records.points - p1.records.points ||\r\n                            p2.records.wins - p1.records.wins ||\r\n                            p1.records.loses - p2.records.loses\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <Row className=\"mx-auto mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <AllPlayers players={players} />\r\n                </Row>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rankings;\r\n","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AccountCredentials from './../profile/AcountCredentials';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTable from './../tables/scores/ScoresTable';\r\nimport SignUp from '../users/SignUp';\r\nimport Rankings from './../tables/rankings/Rankings';\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AccountCredentials />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<Rankings />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst {goTo} = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () => goTo(Routes.Client.ChatRoom));\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tTriggerRandomSearch,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst enableGlobalTimer = useCallback(() => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (socketGlobal) socketGlobal.send(pack(\"online\"));\r\n\t\t}, 300000); // every 5 MINUTES request number of online members to update the site\r\n\t}, [pack, socketGlobal]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"global timer enabled\");\r\n\t\tconst timerID = enableGlobalTimer();\r\n\t\treturn () => {\r\n\t\t\tconsole.log(\"global timer disabled\");\r\n\t\t\tclearInterval(timerID);\r\n\t\t};\r\n\t}, [enableGlobalTimer]);\r\n\r\n\tconst { signOut, redirectToGamePlay } = context;\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(() => {\r\n\t\tconsole.log(\"global websocket connect called -> new socket returned\");\r\n\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t);\r\n\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tsignOut();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\tif (msg) {\r\n\t\t\t\t\t\t\t\tdispatch(EnterRoom(msg));\r\n\t\t\t\t\t\t\t\tsocket.send(pack(\"online\"));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tif(!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\tdispatch(TriggerRandomSearch());\r\n\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\tif (answer)\r\n\t\t\t\t\t\t\t\tOK(`${targetName} درخواست دوستی شما را پذیرفت`);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\tconst { askerID, askerName } = msg;\r\n\t\t\t\t\t\t\tdispatch(RecieveGameInvitation(askerID, askerName));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tredirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\tsocket.close();\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\tconsole.log(\"Reconnecting in  5 seconds\");\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t? await connect()\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t};\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(`global websocket errpr: ${err}`);\r\n\t\t\t}\r\n\t\t});\r\n\t}, [dispatch, signOut, redirectToGamePlay, pack, iamSignedIn, iamBusy]);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchTriggered,\r\n\t\tacceptedInviter,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (room.type) {\r\n\t\t\t//is it necessary?\r\n\t\t\t//completely making sure we're on right stage\r\n\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\tsocketGlobal.send(pack(\"find\", room.type));\r\n\t\t} else if (!room.name) {\r\n\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchTriggered, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedInviter) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedInviter,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedInviter,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { chatsReducer } from './chats';\r\nimport { friendsReducer } from './freinds';\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    chats: chatsReducer,\r\n    friends: friendsReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return action.payload;\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return action.payload;\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchTriggered: false,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const chatsReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"LOAD_CHATS\":\r\n\t\t\t// use a copy of?\r\n\t\t\treturn [...action.payload];\r\n\t\tcase \"RESET_CHATS\":\r\n\t\t\t//... what to do?\r\n\t\t\treturn [];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const friendsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_FRIENDS\":\r\n            return [...action.payload];\r\n        case \"RESET_FRIENDS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n//dispatch\r\n// store.subscribe(() => console.log(store.getState()));","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices: { SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}"],"sourceRoot":""}