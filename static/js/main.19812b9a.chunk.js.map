{"version":3,"sources":["tables/Score.jsx","tables/AllScores.jsx","tables/ScoresTable.jsx","site-info/GameRules.jsx","site-info/ContactInfo.jsx","common/MainContext.jsx","thegame/GamePlay.jsx","services/httpService.js","services/userServices.js","common/LoadingBar.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","common/NavigationBar.jsx","sidebars/SignInSideBar.jsx","sidebars/NewsSideBar.jsx","common/SmartPhoneNavigationBar.jsx","sidebars/no-avatar.png","sidebars/PlayerInfoSideBar.jsx","common/MainLayout.jsx","tables/Player.jsx","tables/AllPlayers.jsx","tables/Ranking.jsx","users/ControlPanel.jsx","App.js","index.js"],"names":["Score","playerXName","playerOName","xScore","oScore","xBorderStyle","oBorderStyle","xBadgeColor","oBadgeColor","border","borderRadius","paddingLeft","paddingRight","className","style","id","AllScores","scores","map","score","ScoresTable","state","liveScores","finalScores","showLiveOnes","btnShowLiveScores","setState","btnShowFinalScores","this","onClick","Component","GameRules","ContactInfo","href","MainContext","createContext","player","GamePlay","rowMarginRatio","players","shape","color","lineColor","turn","Math","floor","random","tableDimension","table","updateMarginParameters","divTableBlock","offsetWidth","onTableBlockResize","event","target","getCellCoordinates","cellId","dimen","onFloorId","row","column","onEachCellClick","selectedCellButton","tempTable","cell","console","log","innerHTML","inspectTableAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","i","wholePoint","connectTheScoreLines","tempPlayers","toast","info","position","error","count","firstCell","step","dimension","cellButtons","drawGameTable","dimens","push","marginLeft","type","document","getElementsByClassName","getElementById","addEventListener","contextType","axios","defaults","headers","post","interceptors","response","use","STATUS","expectedErrors","status","closeOnClick","Promise","reject","http","get","put","delete","userServices","signUp","user","config","serverRoot","usersRoute","signupRoute","JSON","stringify","signIn","signinRoute","getPlayer","userId","getAllPlayers","saveUser","token","sessionStorage","setItem","readUserID","getItem","LoadingBar","loading","useLayoutEffect","body","overflowY","height","time","customLoading","ModalSignIn","showModal","studentID","password","onCloseClick","onShowClick","onSignInSubmitted","a","preventDefault","SUCCESSFULL","AUTHENTICATION_INVALID","Number","data","userID","props","history","replace","onForgotPasswordClick","Button","variant","Modal","show","onHide","Header","closeButton","Body","Form","onSubmit","Group","Label","Control","placeholder","value","onChange","e","controlId","withRouter","SignUp","confirmPassword","firstname","lastname","email","checkConfirmPassword","setCustomValidity","onSignUpSubmit","trim","length","USER_CREATED","ALREADY_EXISTS","newUser","fullname","success","warn","pattern","onInput","onInvalid","required","NavigationBar","context","useContext","to","exact","activeClassName","float","SignInSideBar","NewsSideBar","SmartPhoneNavigationBar","PlayerInfoSideBar","src","noAvatar","alt","records","points","wins","loses","draws","pathname","location","deviceIsDesktop","useMediaQuery","query","deviceIsSmartPhone","deviceIsTablet","useState","setPlayer","then","result","catch","err","pageLeftSideBars","pageRightSideBar","Provider","children","Player","rowNumber","name","scope","AllPlayers","Card","width","findIndex","p","Ranking","sort","p1","p2","ControlPanel","onSignOutClick","clear","App","path","component","render"],"mappings":"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","file":"static/js/main.19812b9a.chunk.js","sourcesContent":["import './scoresTable.css';\r\n\r\nconst Score = ({playerXName, playerOName, xScore, oScore}) => {\r\n    // format score text:\r\n    let xBorderStyle = null; \r\n    let oBorderStyle = null; // null means default text color\r\n    let xBadgeColor = null;\r\n    let oBadgeColor = null; // null means default badge color\r\n\r\n    if(xScore > oScore){ // x won\r\n        xBadgeColor = \"badge-success\";\r\n        xBorderStyle = {border:'5px solid green', borderRadius: '15px', paddingLeft: '1%',paddingRight: '1%'};\r\n        oBadgeColor = \"badge-danger\";\r\n        oBorderStyle = null; // null means default text color\r\n    }\r\n    else if(xScore === oScore){ //draw\r\n        xBadgeColor = \"badge-warning\";\r\n        oBadgeColor = \"badge-warning\";\r\n        xBorderStyle = null;\r\n        oBorderStyle = null; // null means default text color\r\n    }\r\n    else{ // o won\r\n        oBadgeColor = \"badge-success\";\r\n        oBorderStyle = {border:'5px solid green', borderRadius: '15px', paddingLeft: '1%',paddingRight: '1%'};\r\n        xBadgeColor = \"badge-danger\";\r\n        xBorderStyle = null; // null means default text color\r\n    }\r\n\r\n    // make this car 'bg-transparent' too?\r\n    return (  \r\n        <div className=\"card border-info mb-3 scoreCard\" >\r\n            <div className=\"card-header text-center border-info\">نوع بازی</div>\r\n            <div className=\"card-body\">\r\n                <p \r\n                    className=\"card-title text-center mx-auto\">\r\n                    <span style={xBorderStyle} >{playerXName}</span>\r\n                    <span className={`badge badge-pill ${xBadgeColor} scoreBadge ml-3 mr-3`}>{xScore < 10 ? `0${xScore}` : `${xScore}`}</span>\r\n                    \r\n                    <span className={`badge badge-pill ${oBadgeColor} scoreBadge ml-3 mr-3`}>{oScore < 10 ? `0${oScore}` : `${oScore}`}</span> \r\n                    <span style={oBorderStyle} >{playerOName}</span>\r\n                </p>\r\n                \r\n            </div>\r\n            <button id=\"btnReplayGame\" className=\"btn btn-outline-info btn-lg btn-block\">بازپخش بازی</button>\r\n            {/*1st method: pass key to the score.jsx and find the specific game to replay\r\n            2nd method: pass replay function from AllScores.jsx to Scores.jsx ? */}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Score;","import Score from \"./Score\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <div>\r\n            { scores.map(score => (\r\n                <Score key={score.id}\r\n                    playerXName={score.playerXName}\r\n                    playerOName={score.playerOName}\r\n                    xScore={score.xScore}\r\n                    oScore={score.oScore}\r\n                ></Score>\r\n            )) }\r\n        </div>\r\n     );\r\n};\r\n \r\nexport default AllScores;","import './scoresTable.css';\r\nimport { Component } from 'react';\r\nimport AllScores from './AllScores';\r\n\r\n\r\nclass ScoresTable extends Component {\r\n    state = { \r\n        liveScores: [ {id:0, playerXName: 'سهند علی زاده', playerOName: 'علی رضا قربانی', xScore: 10, oScore: 6},\r\n                         {id:1 ,playerXName: 'paya', playerOName: 'whatever', xScore: 15, oScore: 1},\r\n                         {id:2 ,playerXName: 'مجید نویدزاده', playerOName: 'علی یاری', xScore: 8, oScore: 8},\r\n                         {id:3 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14},\r\n                         {id:4 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14},\r\n                         {id:5 ,playerXName: 'مجتبی حسینی', playerOName: 'مصطفی علی مردانی', xScore: 2, oScore: 14} ],\r\n        finalScores: [ {id:0, playerXName: 'نوید بختیاری', playerOName: 'محسن رضایی', xScore: 0, oScore: 6},\r\n                        {id:1 ,playerXName: 'پرهام کبیری', playerOName: 'سمانه سماوی', xScore: 2, oScore: 4},\r\n                        {id:2 ,playerXName: 'مجید داورخواه', playerOName: 'زهرا فنایی', xScore: 4, oScore: 12},\r\n                        {id:3 ,playerXName: 'امیر صفوی نسب', playerOName: 'paya', xScore: 3, oScore: 3} ],\r\n        showLiveOnes: true\r\n     };\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({showLiveOnes: true});\r\n\r\n    }\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({showLiveOnes: false});\r\n    }\r\n\r\n    render() {\r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let {liveScores, finalScores, showLiveOnes} = this.state;\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-6'>\r\n                       <button\r\n                        className={`scoresTypeSelectButton btn ${showLiveOnes ? `btn-outline-success` : `btn-outline-primary`}`}\r\n                        onClick={this.btnShowLiveScores}  >نتایج زنده</button>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <button \r\n                            className={`scoresTypeSelectButton btn ${showLiveOnes ? `btn-outline-primary` : `btn-outline-success`}`}\r\n                            onClick={this.btnShowFinalScores}  >نتایج نهایی</button> \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <AllScores scores={showLiveOnes? liveScores : finalScores} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ScoresTable;","import './info.css'\r\n\r\nconst GameRules = () => {\r\n    return ( \r\n        <div className=\"card border-warning mb-3 singleCard\" >\r\n            <div className=\"card-header text-center border-warning\">قوانین بازی</div>\r\n            <div className=\"card-body text-right\">\r\n                <p>سطر اول</p>\r\n                <p>سطر دوم</p>\r\n                <p>سطر سوم</p>\r\n                <p>سطر چهارم</p>\r\n                <p>سطر پنجم</p>\r\n                <p>سطر ششم</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameRules;","import './info.css'\r\n\r\nconst ContactInfo = () => {\r\n    return ( \r\n        <div className=\"card border-dark mb-3 singleCard\" >\r\n            <div className=\"card-header text-center border-dark\">اطلاعات تماس</div>\r\n            <div className=\"card-body text-center\">\r\n                <p>دانشگاه علم و صنعت ایران</p>\r\n                <p>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></p>\r\n                <p>Phone Number: 0000000000000</p>\r\n                <p>اطلاعات تماس استاد</p>\r\n                <p>instagram: ......</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ContactInfo;","import { createContext } from \"react\";\r\n// 1. write <MainContext.Provider> for MainContext in Database reader\r\n// 2. use consumer for state, in ScoresTable.jsx for gathering live and final match results\r\nconst MainContext = createContext({\r\n    player: null\r\n});\r\n\r\nexport default MainContext;","import { Component } from 'react';\r\nimport './gamePlay.css';\r\nimport { toast } from 'react-toastify';\r\nimport MainContext from '../common/MainContext';\r\n\r\nclass GamePlay extends Component {\r\n    static contextType = MainContext;\r\n    // **** noticed: gameplay needs a seperate layout\r\n    //**** game resets on device change. fix it */\r\n    // note: sidebars must change to ==> right-side: my-profile / left-side: opponent profile\r\n    state = { rowMarginRatio: 0,\r\n                players : [ {shape:'X', color: 'cyan', lineColor: 'btn btn-primary', score: 0} ,\r\n                        {shape:'O', color: 'darkred', lineColor: 'btn btn-danger', score: 0}], // maybe use player actual user name and change this item to an object of objects?\r\n                turn: Math.floor(Math.random() * 2),// start turn is decided by throwning dices\r\n                tableDimension: 4,\r\n                table: []\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.cellButtons = [];\r\n    }\r\n\r\n    updateMarginParameters = (divTableBlock) => {\r\n        //const {deviceIsDesktop, deviceIsTablet, deviceIsSmartPhone} = this.context;\r\n        const rowMarginDevideOn = 12.4 ;// deviceIsDesktop ? 22 : (deviceIsTablet ? 14 : 6);\r\n        this.setState({rowMarginRatio: divTableBlock.offsetWidth / rowMarginDevideOn});\r\n        //*** for now this method remain still but if the main container is in fixed pixels width, the hell is this needed? */\r\n    }\r\n\r\n    onTableBlockResize = (event) => {\r\n        this.updateMarginParameters(event.target);\r\n    }\r\n    componentDidMount(){\r\n        this.cellButtons = document.getElementsByClassName(\"gameTableCells\"); // pay attension to searched className! may cause an error\r\n        // init this.state.table array\r\n        const {tableDimension} = this.state;\r\n        let dimens = [];\r\n        for(let i = 0;i < tableDimension; i++)\r\n            dimens.push(i);\r\n        let tempTable = dimens.map(floor => (dimens.map(row => dimens.map(column => (null)))));\r\n        this.setState({table: tempTable});\r\n\r\n        let divTableBlock = document.getElementById('divTableBlock');\r\n        this.updateMarginParameters(divTableBlock);\r\n        divTableBlock.addEventListener('resize', (event) => this.onTableBlockResize(event));\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div id='divTableBlock' className=\"card border-dark gameBorderCard\" >\r\n                { this.drawGameTable() }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getCellCoordinates = (cellId, dimen) => {\r\n        let cellFloor = Math.floor(cellId / (dimen*dimen));\r\n        let onFloorId = cellId % (dimen*dimen);\r\n        let cellRow = Math.floor(onFloorId / dimen);\r\n        let cellColumn = onFloorId % dimen;\r\n        // just test a random id to see how above formula works!\r\n        return {floor: cellFloor, row: cellRow, column: cellColumn};\r\n    }\r\n    onEachCellClick = (event) => {\r\n        const {players, turn, tableDimension } = this.state;\r\n        let selectedCellButton = event.target;\r\n        let tempTable = [...this.state.table];\r\n        let cell = this.getCellCoordinates(selectedCellButton.id, tableDimension);\r\n        console.log(cell);\r\n        if( tempTable[cell.floor][cell.row][cell.column] === null){\r\n            tempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n            selectedCellButton.innerHTML= players[turn].shape;\r\n            selectedCellButton.style.color = players[turn].color;\r\n            this.setState({\r\n                turn: (turn + 1) % 2,\r\n                table: tempTable\r\n            });\r\n            console.table(this.state.table);\r\n            // time to inspect the new cell:\r\n            this.inspectTableAroundTheCell(cell.floor, cell.row, cell.column);\r\n            // just in case u forgot:\r\n            // table needs to be inspected => as table array changes by setState, inspecttheTable must be called automatically by render\r\n            // but if not, move the call out to here!\r\n        }\r\n    }\r\n\r\n    inspectTableAroundTheCell = (floor, row, column) => {\r\n        // inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n        // is it needed to write a inspectAll method ?\r\n        const {players, table, tableDimension} = this.state;\r\n        const playerInTheCell = table[floor][row][column];\r\n        var rowCount = 0, columnCount = 0, floorMainDiagCount = 0, floorSideDiagCount = 0;\r\n        var tableMainDiagCount = 0, tableSideDiagCount = 0, tableAltitudeCount = 0;\r\n        for(let i = 0; i < tableDimension; i++){\r\n            if( table[floor][row][i] === playerInTheCell )  rowCount++; // inspect in a row \r\n            if( table[floor][i][column] === playerInTheCell )  columnCount++; // inspect in a column\r\n            if( table[i][row][column] === playerInTheCell ) tableAltitudeCount++; // inspect in a altitude line\r\n            if( row === column ){\r\n                if( table[floor][i][i] === playerInTheCell ) floorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n                if( row === floor && table[i][i][i] === playerInTheCell) tableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n\r\n            } \r\n            if( (row + column + 1) === tableDimension ) {\r\n                if(table[floor][i][tableDimension - i - 1] === playerInTheCell) floorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n                if( row === floor && table[i][i][tableDimension - i - 1] === playerInTheCell ) tableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n            }\r\n        }\r\n\r\n        // now inspect wether a line has been made and take action for it\r\n        let wholePoint = this.connectTheScoreLines(rowCount, floor * tableDimension * tableDimension + row * tableDimension, 1, players[playerInTheCell], tableDimension)\r\n            +   this.connectTheScoreLines(columnCount, floor * tableDimension * tableDimension + column, tableDimension, players[playerInTheCell], tableDimension)\r\n            +   this.connectTheScoreLines(floorMainDiagCount, floor * tableDimension * tableDimension, tableDimension + 1, players[playerInTheCell], tableDimension)\r\n            +   this.connectTheScoreLines(floorSideDiagCount, floor * tableDimension * tableDimension + (tableDimension - 1), tableDimension - 1, players[playerInTheCell], tableDimension)\r\n            +   this.connectTheScoreLines(tableMainDiagCount, 0 , tableDimension * (tableDimension + 1) + 1, players[playerInTheCell], tableDimension)\r\n            +   this.connectTheScoreLines(tableSideDiagCount, tableDimension - 1 , tableDimension * (tableDimension + 1) - 1, players[playerInTheCell], tableDimension)\r\n            +   this.connectTheScoreLines(tableAltitudeCount, row * tableDimension + column, tableDimension * tableDimension, players[playerInTheCell], tableDimension);\r\n        if(wholePoint){\r\n            let tempPlayers = [...players];\r\n            tempPlayers[playerInTheCell].score += wholePoint;\r\n            this.setState({players: tempPlayers});\r\n            //temp result show:\r\n            \r\n            if(playerInTheCell === 0)\r\n                toast.info(players[playerInTheCell].shape + ' : ' + players[playerInTheCell].score, { position: 'top-right' });\r\n            else\r\n                toast.error(players[playerInTheCell].shape + ' : ' + players[playerInTheCell].score, { position: 'bottom-left' });\r\n        }\r\n    }\r\n\r\n    // method below: checks each possible line(according to the condition that user gives it),\r\n    // if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n    connectTheScoreLines = (count, firstCell, step, player, dimension) => {\r\n        if(count === dimension){\r\n            for(let i = 0;i < dimension; i++){\r\n                this.cellButtons[firstCell + i * step].className = \"gameTableCells \" + player.lineColor;\r\n            }\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    drawGameTable = () => {\r\n        // *****************note: when window size changes: table's selected cells are cleared\r\n        // use this.state.table to load again*****************\r\n        const {rowMarginRatio, tableDimension} = this.state;\r\n        // initialize rows columns floors\r\n        \r\n        let dimens = [];\r\n        for(let i = 0;i < tableDimension; i++)\r\n            dimens.push(i);\r\n\r\n        // drawing the table and setting id s and click events\r\n        return (\r\n            dimens.map(floor => ( \r\n                <div>\r\n                    { dimens.map( row => (\r\n                            <div style={{marginLeft: `${row * rowMarginRatio}px`}}> \r\n                                {dimens.map(column => (\r\n                                        <button type=\"button\" \r\n                                            className=\"gameTableCells btn btn-outline-dark\" \r\n                                            id={floor*tableDimension*tableDimension + row*tableDimension + column}\r\n                                            onClick={(event) => this.onEachCellClick(event)}\r\n                                        > </button>\r\n                                    )) \r\n                                } \r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <br/>\r\n                </div>\r\n            ) )\r\n        );\r\n    }\r\n    \r\n}\r\n \r\nexport default GamePlay;","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n    const STATUS = { AUTHENTICATION_INVALID: 401, INPUT_INVALID: 422 };\r\n    const expectedErrors =\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status < 500;\r\n\r\n    if (error.response.status === STATUS.AUTHENTICATION_INVALID) {\r\n        toast.error(\"شماره دانشجویی یا رمز عبور نادرست است\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    } else if (error.response.status === STATUS.INPUT_INVALID) {\r\n        toast.error(\"فرمت ورودی نادرست است\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    } else if (!expectedErrors) {\r\n        // console.log(error);\r\n        toast.error(\"مشکلی از سمت سرور رخ داده است.\", {\r\n            position: \"top-right\",\r\n            closeOnClick: true,\r\n        });\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n};\r\n\r\nexport default http;","import http from \"./httpService\";\r\nimport config from \"./config.json\";\r\n\r\nconst userServices = {\r\n    signUp: (user) => {\r\n        return http.post(\r\n            `${config.serverRoot}/${config.usersRoute}/${config.signupRoute}`,\r\n            JSON.stringify(user)\r\n        );\r\n    },\r\n    signIn: (user) => {\r\n        return http.post(\r\n            `${config.serverRoot}/${config.usersRoute}/${config.signinRoute}`,\r\n            JSON.stringify(user)\r\n        );\r\n    },\r\n    getPlayer: (userId) => {\r\n        return http.get(`${config.serverRoot}/${config.usersRoute}/${userId}`);\r\n    },\r\n    getAllPlayers: () => {\r\n        return http.get(`${config.serverRoot}/${config.usersRoute}`);\r\n    },\r\n    saveUser: (id, token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(\"uid\", id); // localStorage or sessionStorage?\r\n        sessionStorage.setItem(\"token\", token);\r\n    },\r\n    readUserID: () => {\r\n        // consider local storage\r\n        return sessionStorage.getItem(\"uid\");\r\n    }\r\n};\r\n\r\nexport default userServices;","import { useLayoutEffect } from \"react\";\r\nimport { Planets } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading]);\r\n\r\n    return <>{loading ? <Planets time={0} customLoading={loading} /> : null}</>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { Component } from \"react\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\nclass ModalSignIn extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    state = {\r\n        showModal: false,\r\n        studentID: \"\",\r\n        password: \"\",\r\n        loading: false,\r\n    };\r\n\r\n    onCloseClick = () => this.setState({ showModal: false });\r\n    onShowClick = () => this.setState({ showModal: true });\r\n\r\n    onSignInSubmitted = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const STATUS = { SUCCESSFULL: 200, AUTHENTICATION_INVALID: 401 };\r\n        const { studentID, password } = this.state;\r\n        const user = { studentID, password: Number(password) };\r\n        try {\r\n            const { status, data } = await userServices.signIn(user);\r\n            if (status === STATUS.SUCCESSFULL) {\r\n                userServices.saveUser(data.userID, data.token);\r\n                this.props.history.replace(\"/\");\r\n            }\r\n        } catch (ex) {\r\n            // check nonserver errors\r\n            this.setState({ password: \"\" });\r\n            //toast.error('.ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.', {position: 'top-right', closeOnClick: true});\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    onForgotPasswordClick = () => {};\r\n\r\n    render() {\r\n        const { showModal, studentID, password, loading } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <LoadingBar loading={loading} />\r\n                <Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n                    ورود کاربران\r\n                </Button>\r\n\r\n                <Modal show={showModal} onHide={this.onCloseClick}>\r\n                    <Modal.Header closeButton></Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form\r\n                            className=\"m-4 text-right\"\r\n                            onSubmit={(event) => this.onSignInSubmitted(event)}\r\n                        >\r\n                            <Form.Group className=\"mb-3 form-inline\">\r\n                                <Form.Label className=\"w-25\">\r\n                                    شماره دانشجویی\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"w-75 text-left\"\r\n                                    placeholder=\"Student ID\"\r\n                                    value={studentID}\r\n                                    onChange={(e) =>\r\n                                        this.setState({\r\n                                            studentID: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                className=\"mb-3 form-inline\"\r\n                                controlId=\"formBasicPassword\"\r\n                            >\r\n                                <Form.Label className=\"w-25\">\r\n                                    رمز عبور\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    className=\"w-75 text-left\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        this.setState({\r\n                                            password: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                            <>\r\n                                <Button\r\n                                    className=\"w-50\"\r\n                                    type=\"submit\"\r\n                                    variant=\"outline-success\"\r\n                                >\r\n                                    ورود\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"w-50\"\r\n                                    variant=\"outline-info\"\r\n                                    onClick={this.onForgotPasswordClick}\r\n                                >\r\n                                    فراموشی رمز\r\n                                </Button>\r\n                            </>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass SignUp extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    // 2. first and last name must be persian text so make the direction correct and force persian chars\r\n    state = {\r\n        studentID: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        loading: false,\r\n    };\r\n\r\n    checkConfirmPassword = (event) => {\r\n        this.setState({ confirmPassword: event.target.value });\r\n        if (this.state.password !== event.target.value) {\r\n            event.target.setCustomValidity(\r\n                \"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n            );\r\n            //console.log(password, confirmPassword);\r\n        } else event.target.setCustomValidity(\"\");\r\n    };\r\n    onSignUpSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            studentID,\r\n            password,\r\n            confirmPassword,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n        } = this.state;\r\n        if (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n            toast.error(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true,\r\n            });\r\n            this.setState({\r\n                firstname: firstname.trim(),\r\n                lastname: lastname.trim(),\r\n            });\r\n            return;\r\n        }\r\n        const STATUS = { USER_CREATED: 201, ALREADY_EXISTS: 403 };\r\n        if (password === confirmPassword) {\r\n            try {\r\n                this.setState({ loading: true });\r\n                const newUser = {\r\n                    studentID: Number(studentID),\r\n                    password,\r\n                    email,\r\n                    fullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n                };\r\n\r\n                const { status, data } = await userServices.signUp(newUser);\r\n\r\n                if (status === STATUS.USER_CREATED) {\r\n                    //console.log(data);\r\n                    toast.success(`ثبت نام با موفقیت انجام شد`, {\r\n                        position: \"top-right\",\r\n                        closeOnClick: true,\r\n                    });\r\n                    userServices.saveUser(data.userID, data.token);\r\n                    this.props.history.replace(\"/\");\r\n                    // this.props.history.replace('/signIn')\r\n                    // ******* change server to return user token and auto sign in\r\n                }\r\n            } catch (ex) {\r\n                // console.log(ex);\r\n                this.setState({ loading: false });\r\n                if (ex.response.status === STATUS.ALREADY_EXISTS) {\r\n                    toast.error(\r\n                        \"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                    toast.warn(\r\n                        \"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                } else {\r\n                    toast.error(\r\n                        \"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\",\r\n                        {\r\n                            position: \"top-right\",\r\n                            closeOnClick: true,\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            toast.error(\"رمز عبورها مطابقت ندارند\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true,\r\n            });\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            studentID,\r\n            password,\r\n            confirmPassword,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            loading,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"card border-success mb-3 signUpCard\">\r\n                <LoadingBar loading={loading} />\r\n                <div className=\"card-header bg-transparent text-center border-success\">\r\n                    فرم ثبت نام\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">نام</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                pattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"First Name\"\r\n                                value={firstname}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        firstname: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">نام خانوادگی</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                pattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                    )\r\n                                }\r\n                                placeholder=\"Last Name\"\r\n                                value={lastname}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        lastname: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">شماره دانشجویی</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                pattern=\"[0-9]{8}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Student ID\"\r\n                                value={studentID}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        studentID: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">ایمیل</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                pattern=\".{6,}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"E-mail\"\r\n                                value={email}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({ email: e.target.value })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">رمز عبور</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                pattern=\".{6,15}\"\r\n                                onInput={(e) => e.target.setCustomValidity(\"\")}\r\n                                onInvalid={(e) =>\r\n                                    e.target.setCustomValidity(\r\n                                        \"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n                                    )\r\n                                }\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                required=\"required\"\r\n                                onChange={(e) =>\r\n                                    this.setState({\r\n                                        password: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-inline\">\r\n                            <label className=\"w-25\">تایید رمز عبور</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"signUpTextBox form-control w-75\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={confirmPassword}\r\n                                required=\"required\"\r\n                                onChange={(event) =>\r\n                                    this.checkConfirmPassword(event)\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success btn-block mt-4\"\r\n                        >\r\n                            ثبت نام\r\n                        </button>\r\n                    </form>\r\n                    <p className=\"forgot-password text-right mt-5\">\r\n                        اگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !{\" \"}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MainContext from \"./MainContext\";\r\n\r\nconst NavigationBar = () => {\r\n  const context = useContext(MainContext);\r\n  return (\r\n    // 2. link items theme: make theme better\r\n\r\n    <nav className=\"navbar navbar-expand-lg nav-pills navbar-light bg-light text-right\">\r\n      <div className=\"container text-right\">\r\n        {/* <NavLink className=\"navbar-brand\" to=\"#\">نام بازیکن</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"expand\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button> */}\r\n        <div className=\"navbar-expand\" id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/\"\r\n                exact\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                صفحه اصلی\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/theGame\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                بازی ها\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/ranking\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                رنکینگ\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/gameRules\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                قوانین\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <NavLink\r\n                className=\"nav-link text-primary\"\r\n                to=\"/contactInfo\"\r\n                activeClassName=\"btn-outline-secondary text-dark\"\r\n              >\r\n                تماس با ما\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          {/* how to float search bar to right? */}\r\n        </div>\r\n      </div>\r\n      {context.player ? (\r\n        <NavLink\r\n          style={{ float: \"left\" }}\r\n          className=\"navItems nav-link btn btn-outline-success btn-sm\"\r\n          to=\"/controlPanel\"\r\n        >\r\n          کنترل پنل\r\n        </NavLink>\r\n      ) : (\r\n        <NavLink\r\n          style={{ float: \"left\" }}\r\n          className=\"navItems nav-link btn btn-outline-success btn-sm\"\r\n          to=\"/signUp\"\r\n        >\r\n          ثبت نام\r\n        </NavLink>\r\n      )}\r\n\r\n      {/* <form class=\"searchForm form-inline\">\r\n                    <input class=\" form-control mr-sm-2 bg-dark\" type=\"search\" placeholder=\"دنبال چی می گردی؟\" aria-label=\"Search\" />\r\n                    <button class=\" btn btn-outline-warning fa fa-search\" type=\"submit\"></button>\r\n            </form> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass SignInSideBar extends Component {\r\n    // *********************Objectives***********************\r\n    // 1. handle errors particularly\r\n    state = {\r\n        studentID: \"\",\r\n        password: \"\",\r\n        loading: false,\r\n    };\r\n    \r\n\r\n    onSignInSubmitted = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const STATUS = { SUCCESSFULL: 200 };\r\n        const { studentID, password } = this.state;\r\n        const user = { studentID, password: Number(password) };\r\n        try {\r\n            const { status, data } = await userServices.signIn(user);\r\n            if (status === STATUS.SUCCESSFULL) {\r\n                userServices.saveUser(data.userID, data.token);\r\n                this.props.history.replace(\"/\");\r\n            }\r\n        } catch (ex) {\r\n            // check nonserver errors\r\n            // console.log(ex);\r\n            this.setState({ password: \"\" });\r\n            //toast.error('.ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.', {position: 'top-left', closeOnClick: true});\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n        const { studentID, password, loading } = this.state;\r\n        return (\r\n            <div className=\"card signInSidebar border-primary mb-3\">\r\n                <div className=\"card-header text-center text-primary border-primary\">\r\n                    ورود کاربران\r\n                </div>\r\n                <LoadingBar loading={loading} />\r\n                <div className=\"card-body text-primary\">\r\n                    <form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"signInSidebarTextBox form-control text-primary\"\r\n                            placeholder=\"Student ID\"\r\n                            value={studentID}\r\n                            onChange={(e) =>\r\n                                this.setState({ studentID: e.target.value })\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"signInSidebarTextBox form-control text-primary\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) =>\r\n                                this.setState({ password: e.target.value })\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div className=\"card-footer bg-transparent border-primary\">\r\n                            <button\r\n                                id=\"btnSideBarSignIn\"\r\n                                type=\"submit\"\r\n                                className=\"btn btn-outline-success btn-lg\"\r\n                            >\r\n                                ورود\r\n                            </button>\r\n                            <button\r\n                                id=\"btnSideBarPasswordRecovery\"\r\n                                className=\"btn btn-outline-info btn-lg\"\r\n                            >\r\n                                بازیابی پسورد\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","\r\n\r\nconst NewsSideBar = () => {\r\n    return ( \r\n        <div className=\"card newsSidebar border-success  mb-3\">\r\n            <div className=\"card-header text-center text-success border-success\">اطلاعیه</div>\r\n            <div className=\"card-body text-right\">\r\n                <p>متن خبر 1</p>\r\n                <p>متن خبر 2</p>\r\n                <p>متن خبر 3</p>\r\n                <p>متن خبر 4</p>\r\n                <p>blah blah blah</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NewsSideBar;","import { NavLink } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport MainContext from \"./MainContext\";\r\n\r\nconst SmartPhoneNavigationBar = () => {\r\n  const context = useContext(MainContext);\r\n\r\n  return (\r\n    // 2. link items theme: make theme better\r\n\r\n    <nav className=\"navbar navbar-expand-lg nav-pills navbar-light bg-light text-right\">\r\n      <div className=\"container text-right\">\r\n        <div className=\"navbar-expand w-100\" id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <div className=\"row\">\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/\"\r\n                  exact\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  صفحه اصلی\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/theGame\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  بازی ها\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/ranking\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  رنکینگ\r\n                </NavLink>\r\n              </li>\r\n            </div>\r\n          </ul>\r\n          <hr />\r\n          <ul className=\"navbar-nav text-primary\">\r\n            <div className=\"row\">\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/gameRules\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  قوانین\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                <NavLink\r\n                  className=\"nav-link text-primary\"\r\n                  to=\"/contactInfo\"\r\n                  activeClassName=\"btn-outline-secondary text-dark\"\r\n                >\r\n                  تماس با ما\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item ml-2\">\r\n                {context.player ? (\r\n                  <NavLink\r\n                    className=\"navItems nav-link btn btn-outline-success btn-block mt-1 mr-lg-5\"\r\n                    to=\"/controlPanel\"\r\n                  >\r\n                    کنترل پنل\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink\r\n                    className=\"navItems nav-link btn btn-outline-success btn-block mt-1 mr-lg-5\"\r\n                    to=\"/signUp\"\r\n                  >\r\n                    ثبت نام\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SmartPhoneNavigationBar;\r\n","export default __webpack_public_path__ + \"static/media/no-avatar.5e7c913e.png\";","import { Component } from \"react\";\r\nimport MainContext from \"../common/MainContext\";\r\nimport noAvatar from \"./no-avatar.png\"; // definitely must be changed bro!\r\n\r\nclass PlayerInfoSideBar extends Component {\r\n  static contextType = MainContext;\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    const { player } = this.context;\r\n    return (\r\n      <div className=\"card playerInfoSideBar border-info mb-3\">\r\n        <div className=\"card-header text-center text-info border-info\">\r\n          {player.fullname}\r\n        </div>\r\n        <img\r\n          className=\"card-img-top playerAvatar\"\r\n          src={noAvatar}\r\n          alt=\"No Images Found\"\r\n        />\r\n        <hr />\r\n        <div className=\"card-body\">\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">امتیاز بازیکن</p>\r\n                <p className=\"col-6 text-left\">{player.records.points}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد برد</p>\r\n                <p className=\"col-6 text-left\">{player.records.wins}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد باخت</p>\r\n                <p className=\"col-6 text-left\">{player.records.loses}</p>\r\n              </div>\r\n            </li>\r\n            <li className=\" list-group-item\">\r\n              <div className=\"row\">\r\n                <p className=\"col-6 text-right\">تعداد تساوی</p>\r\n                <p className=\"col-6 text-left\">{player.records.draws}</p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerInfoSideBar;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport SignInSideBar from \"./../sidebars/SignInSideBar\";\r\nimport NewsSideBar from \"./../sidebars/NewsSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport SmartPhoneNavigationBar from \"./SmartPhoneNavigationBar\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport userServices from \"../services/userServices\";\r\nimport MainContext from \"./MainContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst MainLayout = (props) => {\r\n    const { pathname } = props.location;\r\n    const deviceIsDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n    const deviceIsSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n    const deviceIsTablet =\r\n        !deviceIsDesktop && !deviceIsSmartPhone ? true : false;\r\n    const [player, setPlayer] = useState(\"\");\r\n    // this method is for temporary use and for finding items that cause horizontal overflow causing horizontal scrollbar\r\n    const findHorizontalOverflow = () => {\r\n        let docWidth = document.documentElement.offsetWidth;\r\n        [].forEach.call(document.querySelectorAll(\"*\"), function (el) {\r\n            if (el.offsetWidth > docWidth) {\r\n                console.log(\"here is the sabotage: \", el);\r\n            }\r\n        });\r\n    };\r\n\r\n    // use an anonymous function to check wether a reliable sign in has been made or not\r\n    // using await causes all 'return' to return a promise. so it must be handles by .then .catch\r\n    (async () => {\r\n        const STATUS = { SUCCESSFULL: 200 };\r\n        const userID = userServices.readUserID();\r\n        if (userID) {\r\n            const { data, status } = await userServices.getPlayer(userID);\r\n            if (status === STATUS.SUCCESSFULL) return data.player;\r\n        }\r\n        return null;\r\n    })()\r\n        .then((result) => {\r\n            setPlayer(result);\r\n        })\r\n        .catch((err) => {\r\n            // handle error\r\n            setPlayer(null);\r\n        });\r\n\r\n    let pageLeftSideBars = <NewsSideBar />;\r\n    let pageRightSideBar = player ? <PlayerInfoSideBar /> : <SignInSideBar />; // in case login hassnt been made\r\n\r\n    if (pathname === \"/signUp\") {\r\n        // || pathname === '/competitions'){ // this condition MUST change later\r\n        pageLeftSideBars = null; //change later\r\n        pageRightSideBar = null; // change then\r\n    }\r\n\r\n    if (pathname === \"/theGame\") {\r\n        // left sidebar must be opponents playerInfo\r\n\r\n        if (deviceIsSmartPhone) { //this is temprory\r\n          // find a way for showing result in smartphone, without causing vertical scroll\r\n            pageLeftSideBars = null; //change later\r\n            pageRightSideBar = null; // change then\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MainContext.Provider value={{ player }}>\r\n            <ToastContainer />\r\n            {deviceIsDesktop || deviceIsTablet ? (\r\n                <NavigationBar />\r\n            ) : (\r\n                <SmartPhoneNavigationBar />\r\n            )}\r\n            {deviceIsDesktop && (\r\n                <div className=\"row mx-auto w-100\">\r\n                    <div className=\"col-3 p-3\">{pageRightSideBar}</div>\r\n                    <div\r\n                        className={\r\n                            pageLeftSideBars !== null ? \"col-6\" : \"col-12\"\r\n                        }\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                    <div className=\"col-3\">{pageLeftSideBars}</div>\r\n                </div>\r\n            )}\r\n            {deviceIsTablet && (\r\n                <div className=\"row mx-auto w-100\">\r\n                    <div\r\n                        className={\r\n                            pageLeftSideBars !== null ? \"col-8\" : \"col-12\"\r\n                        }\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                    <div className=\"col-4\">{pageLeftSideBars}</div>\r\n                </div>\r\n            )}\r\n            {deviceIsSmartPhone && (\r\n                <div className=\"container mx-auto w-100\">\r\n                    {player ? (\r\n                        <div className=\"row w-100 mx-auto\">\r\n                            {pageRightSideBar}\r\n                        </div>\r\n                    ) : null}\r\n                    <div className=\"row w-100 mx-auto\">{pageLeftSideBars}</div>\r\n                    <div className=\"row w-100 mx-auto\">{props.children}</div>\r\n                </div>\r\n            )}\r\n            {/* {findHorizontalOverflow()} */}\r\n        </MainContext.Provider>\r\n    );\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","const Player = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","import { Card } from \"react-bootstrap\";\r\nimport Player from \"./Player\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        \r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"15px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n                <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                    <thead className=\"bg-info\">\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">نام بازیکن</th>\r\n                            <th scope=\"col\">امتیاز</th>\r\n                            <th scope=\"col\">تعداد برد</th>\r\n                            <th scope=\"col\">تعداد باخت</th>\r\n                            <th scope=\"col\">تعداد تساوی</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {players.map((player) => (\r\n                            <Player\r\n                                key={player.userID}\r\n                                rowNumber={players.findIndex(p => p.userID === player.userID) + 1}\r\n                                name={player.fullname}\r\n                                points={player.records.points}\r\n                                wins={player.records.wins}\r\n                                loses={player.records.loses}\r\n                                draws={player.records.draws}\r\n                            ></Player>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"./../services/userServices\";\r\nimport LoadingBar from \"../common/LoadingBar\";\r\n\r\nclass Ranking extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const STATUS = { SUCCESSFULL: 200 };\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === STATUS.SUCCESSFULL) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort(\r\n                        (p1, p2) => p2.records.points - p1.records.points\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <div className=\"row mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <div className=\"col-12\">\r\n                    <AllPlayers players={players} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ranking;\r\n","import { Component } from \"react\";\r\n\r\nclass ControlPanel extends Component {\r\n    onSignOutClick = () => {\r\n        sessionStorage.clear();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card border-success mb-3 signUpCard\">\r\n                <div className=\"card-header bg-transparent text-center border-success\">\r\n                    کنترل پنل\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger btn-block mt-4\"\r\n                        onClick={this.onSignOutClick} //temprory\r\n                    >\r\n                        خروج از حساب کاربری\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { Component } from \"react\";\r\nimport ScoresTable from \"./tables/ScoresTable\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport GameRules from \"./site-info/GameRules\";\r\nimport ContactInfo from \"./site-info/ContactInfo\";\r\nimport GamePlay from \"./thegame/GamePlay\";\r\nimport SignUp from \"./users/SignUp\";\r\nimport MainLayout from \"./common/MainLayout\";\r\nimport Ranking from \"./tables/Ranking\";\r\nimport ControlPanel from './users/ControlPanel';\r\n\r\nclass App extends Component {\r\n    // 1. use uuid to produce ids\r\n    // state = {  }\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <Switch>\r\n                    <Route path=\"/signUp\" component={SignUp} />\r\n                    <Route path=\"/theGame\" component={GamePlay} />\r\n                    <Route path=\"/ranking\" component={Ranking} />\r\n                    <Route path=\"/gameRules\" component={GameRules} />\r\n                    <Route path=\"/contactInfo\" component={ContactInfo} />\r\n                    <Route path=\"/\" exact component={ScoresTable} />\r\n                    <Route path=\"/controlPanel\" exact component={ControlPanel} />\r\n                </Switch>\r\n            </MainLayout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import {render} from 'react-dom';\r\nimport App from './App.js';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nrender(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter> , document.getElementById('root'));"],"sourceRoot":""}