{"version":3,"sources":["services/configs/client.js","services/configs/server.js","services/configs/status.js","services/configs/browser.js","services/configs/gamesetting.js","globals/state/GlobalContext.jsx","commons/NavigationBar.jsx","tools/notification.js","services/http/httpService.js","services/http/userServices.js","globals/redux/actions/player.js","globals/redux/actions/game.js","globals/state/GlobalStates.jsx","profile/panel/ProfilePanel.jsx","profile/panel/CollapsedPanel.jsx","users/AutoSignIn.jsx","services/http/chatServices.js","layouts/ProfilePanelLayout.jsx","globals/redux/actions/friends.js","commons/LoadingBar.jsx","services/http/gameServices.js","tools/format.js","tables/scores/SingleScoreCard.jsx","tables/scores/AllScores.jsx","profile/friendgames/no-avatar.png","profile/friendgames/Record.jsx","globals/redux/actions/tools.js","profile/friendgames/FriendRecords.jsx","profile/friendgames/MyGamesAndFriends.jsx","services/http/noticeServices.js","profile/NoticeManager.jsx","globals/redux/actions/chats.js","globals/redux/actions/message.js","chat/Message.jsx","chat/ChatBox.jsx","chat/ChatRoom.jsx","profile/AcountCredentials.jsx","sidebars/SignInSideBar.jsx","sidebars/NoticeSideBar.jsx","sidebars/no-avatar.png","sidebars/OnlineStatistics.jsx","chat/GameChatBox.jsx","sidebars/PlayerInfoSideBar.jsx","layouts/MainLayout.jsx","services/ws/gamePlaySocketServices.js","globals/redux/withReduxDashboard.js","games/gameplay/BriefScoreboard.jsx","games/gameplay/TableDesign.jsx","games/gameplay/GamePlay.jsx","games/SingleGame.jsx","games/competitions/CompetitionSummary.jsx","games/competitions/CompetitionsMain.jsx","games/GameDeck.jsx","informations/GameGuide.jsx","informations/ContactUs.jsx","tables/scores/ScoresTable.jsx","users/ModalSignIn.jsx","users/SignUp.jsx","tables/rankings/SinglePlayerCard.jsx","tables/rankings/AllPlayers.jsx","tables/rankings/Rankings.jsx","commons/MainRouter.jsx","tools/NotificationCenter.jsx","globals/redux/actions/index.js","services/ws/GlobalSocketManager.jsx","App.js","globals/redux/reducers/index.js","globals/redux/reducers/me.js","globals/redux/reducers/opponent.js","globals/redux/reducers/room.js","globals/redux/reducers/scoreboard.js","globals/redux/reducers/tools.js","globals/redux/reducers/statistics.js","globals/redux/reducers/message.js","globals/redux/reducers/chats.js","globals/redux/reducers/freinds.js","globals/redux/store/index.js","index.js","services/configs/index.js"],"names":["Profile","module","exports","Root","SignUp","SignIn","GameDeck","Rankings","GameGuide","ContactUs","ChatRoom","MyGamesAndFriends","Notices","WebSocketRoot","wsGamePlayRoute","wsGlobalRoute","Users","Private","Credentials","PasswordChange","Friends","Public","Administrators","Games","Mine","Chats","Interactions","SingleChat","NoticeManagement","Successful","CreatedSuccessfully","BadRequest","Unauthorized","Forbidden","NotFound","NotAcceptable","Conflict","SessionExpired","UnprocessableEntity","InternalServerError","isErrorExpected","error","response","status","save","token","sessionStorage","setItem","reset","clear","TOKEN","getItem","T3D","TableRowMargings","TurnTimeOut","GlobalContext","createContext","device","signOut","goTo","redirectToGamePlay","NavigationBar","me","useSelector","state","context","useContext","Navbar","bg","className","Container","Nav","activeClassName","to","Routes","Client","aria-hidden","Devices","SmartPhone","fullname","exact","Desktop","Sorry","text","toast","position","closeOnClick","icon","style","float","OK","success","Notify","info","Attention","onClick","warn","type","Boolean","axios","defaults","headers","post","put","interceptors","request","use","config","browserStorage","Authorization","Promise","reject","expectedErrors","Status","err","console","log","http","get","delete","Server","userServices","signUp","user","JSON","stringify","signIn","getPlayer","userID","getAllPlayers","getMe","getMyCredentials","editMyCredentials","newMe","changeMyPassword","passwords","getMyFriends","isMyFriend","targetID","isAdministrator","ResetOpponent","dispatch","a","ResetMyPlayer","EnterRoom","room","payload","withRouter","children","history","isDesktop","useMediaQuery","query","isSmartPhone","isTablet","useState","setDevice","useDispatch","useEffect","findIndex","mode","Provider","value","push","destination","ProfilePanel","props","Row","Button","border","variant","Configs","aria-current","isAdmin","width","height","CollapsedPanel","AutoSignIn","opponent","storageToken","data","player","chatServices","getOurChat","friendID","getMyInteractions","ProfilePanelLayout","myFriends","myChats","interactions","Array","Error","forEach","interact","friend","messages","ownerOf","with","ID","map","msg","owner","date","Col","lg","sm","LoadingBar","loading","whichOne","setWhichOne","Math","floor","random","useLayoutEffect","document","body","overflowY","selectedLoader","time","customLoading","gameServices","getAllGames","getMyGames","objectify","DateObject","Date","calendar","persian","locale","persian_fa","toHijri","format","SingleScoreCard","Type","playerXName","playerOName","xScore","oScore","xBadge","setXBadge","oBadge","setOBadge","hijriDate","setHijriDate","Card","Body","Footer","block","size","AllScores","scores","length","score","players","name","gameID","Text","Record","title","small","ListGroup","Item","Badge","pill","TriggerRandomSearch","getState","previous","randomSearchTriggered","EndFriendlyInvitation","friendlyGameTarget","FriendRecords","gameType","setGameType","records","currentID","md","margin","textAlign","round","src","noAvatar","points","wins","draws","loses","xs","InviteToFriendlyGame","setTimeout","InputGroup","Prepend","Radio","checked","onChange","setLoading","myGames","setMyGames","filterID","setFilterID","selectedFriendIndex","setSelectedFriendIndex","friends","serverResponse","reverse","Header","Tab","defaultActiveKey","onSelect","key","Link","eventKey","area-hidden","Content","Pane","filter","game","id","noticeServices","createNotice","notice","getAdvancedNotics","getShortNotices","editNotice","noticeID","NoticeManager","undefined","isAllowed","setAllowed","setTitle","setText","startDate","setStartDate","endDate","setEndDate","notices","setNotices","selectedNoticeID","setSelectedNoticeID","updateTrigger","setUpdateTrigger","resetStates","decoded_token","jwtdecode","admin","exp","now","createNewNotice","saveChanges","Form","Label","Control","e","target","pattern","onInput","setCustomValidity","onInvalid","placeholder","required","as","calendarPosition","Alert","color","fontSize","_id","selecteNotice","UpdateMyChatList","sent","recieved","chats","find","chat","SendMessageTo","Message","previousDay","showDate","setShowDate","setTime","hDate","hTime","getDate","ChatBox","myMessage","setMyMessage","message","mostRecentMessageRef","useRef","ourChat","setOurChat","ours","current","scrollIntoView","behavior","top","offsetTop","index","ref","onSubmit","event","preventDefault","composeMessage","myfriends","MODES","AccountCredentials","setFullname","studentID","setStudentID","email","setEmail","password","setPassword","pageMode","setPageMode","pageUpdateTrigger","triggerPageUpdate","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","selectMode","Group","disabled","checkConfirmPassword","SignInSideBar","onSignInSubmitted","setState","Number","replace","this","autoComplete","Component","NoticeSideBar","uuidv1","OnlineStatistics","statistics","games","GameChatBox","PlayerInfoSideBar","scoreboard","personIsFriend","setPersonIsFriend","person","onFriendRequestClick","innerHTML","friendRequestTarget","piece","setPiece","opp","isFriend","Heading","shape","pathname","location","leftSideBar","setLeftSideBar","rightSideBar","setRightSideBar","setPrimaryRightSideBar","Tablet","createSocketRequest","rname","connect","roomName","resolve","server","WebSocket","onopen","send","onerror","close","onclose","withReduxDashboard","component","tools","LoadThisPlayer","ExitRoom","UpdateScoreboard","details","CleanScoreboard","BriefScoreboard","timeRemaining","timeStamp","setTimeStamp","aThird","GameSetting","TableDesign","dimension","table","onEachCellClick","normalCell","dimens","i","row","direction","marginLeft","column","GamePlay","selected","lineColor","turn","myTurn","socketGamePlay","playerOnline","timerID","connectionCheckTimerID","updateGameScorebaord","oppTurn","enableTimerForMyMove","timeout","clearInterval","setInterval","updatePlayerStates","disableAllTimers","clearTimeout","socketOnMessage","parse","cmd","startTime","IDs","opponentID","cellID","nextMove","verifyAndApplyTheMove","getCellCoordinates","cellButtons","focus","endThisGame","closeThisGame","forceConnectWS","nextJob","socket","onmessage","enableConnectionCheckTimer","window","navigator","onLine","dimen","onFloorId","selectedCellButton","cell","cellButton","tempTable","inspectAreaAroundTheCell","playerInTheCell","rowCount","columnCount","floorMainDiagCount","floorSideDiagCount","tableMainDiagCount","tableSideDiagCount","tableAltitudeCount","connectTheScoreLines","count","firstCell","step","getElementsByClassName","SingleGame","friendlyGame","setRoomName","searching","setSearching","onStartGameClick","borderRadius","padding","CompetitionSummary","summary","CompetitionsMain","Tabs","transition","href","ScoresTable","liveScores","finalScores","showLiveOnes","btnShowLiveScores","btnShowFinalScores","Device","allGames","then","result","isLive","catch","ModalSignIn","showModal","onCloseClick","onShowClick","onForgotPasswordClick","Modal","backdrop","show","onHide","closeButton","controlId","confirmPassword","firstname","lastname","onSignUpSubmit","trim","newUser","SinglePlayerCard","rowNumber","scope","AllPlayers","p","tempPlayers","sort","p1","p2","MainRouter","path","gameInvitation","pushed","NewMsg","by","accept","inviterID","acceptedGame","onClose","expirationLength","iat","GlobalSocketManager","socketGlobal","setSocketGlobal","incommingFriendRequest","setIncommingFriendRequest","showFriendshipModal","setShowFriendshipModal","clientOnline","toggleClientOnline","pack","useCallback","enableGlobalTimer","iamSignedIn","iamBusy","command","UpdateStatistics","answer","targetName","askerID","askerName","RecieveGameInvitation","respondToFriendshipRequest","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById","ClientRoutes","require","ServerRoutes"],"mappings":"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","file":"static/js/main.3dea14b6.chunk.js","sourcesContent":["//client routes\r\n\r\n// Partial Routes\r\nconst Profile = \"/Profile\",\r\n    ChatRoom = \"ChatRoom\",\r\n    MyGamesAndFriends = \"GamesFriends\",\r\n    Notices = \"Notices\";\r\n\r\nmodule.exports = {\r\n    Root: \"/\",\r\n    SignUp: \"/SignUp\",\r\n    SignIn: \"/SignIn\",\r\n    GameDeck: \"/GameDeck\",\r\n    Rankings: \"/Rankings\",\r\n    GameGuide: \"/GameGuide\",\r\n    ContactUs: \"/ContacUs\",\r\n    Profile,\r\n    ChatRoom: `${Profile}/${ChatRoom}`,\r\n    MyGamesAndFriends: `${Profile}/${MyGamesAndFriends}`,\r\n    Notices: `${Profile}/${Notices}`,\r\n};\r\n","//server routes\r\nmodule.exports = {\r\n    Root: \"https://t3dweb.herokuapp.com\",\r\n    WebSocketRoot: \"wss://t3dweb.herokuapp.com/ws\",\r\n    wsGamePlayRoute: \"gameplay\",\r\n    wsGlobalRoute: \"global\",\r\n    SignUp: \"signup\",\r\n    SignIn: \"signin\",\r\n    Users: \"users\",\r\n    Private: \"private\",\r\n    Credentials: \"credentials\",\r\n    PasswordChange: \"password\",\r\n    Friends: 'friends',\r\n    Public: \"public\",\r\n    Administrators: \"administrators\",\r\n    Games: \"games\",\r\n    Mine: \"mine\",\r\n    Chats: \"chats\",\r\n    Interactions: \"interact\",\r\n    SingleChat: 'single',\r\n    Notices: \"notices\",\r\n    NoticeManagement: \"manage\"\r\n};","const isErrorExpected = (error) => {\r\n    return (\r\n        error.response &&\r\n        error.response.status >= 400 && // >= 400\r\n        error.response.status < 500\r\n    );\r\n};\r\n\r\nmodule.exports = {\r\n    Successful: 200,\r\n    CreatedSuccessfully: 201,\r\n    BadRequest: 400,\r\n    Unauthorized: 401,\r\n    Forbidden: 403,\r\n    NotFound: 404,\r\n    NotAcceptable: 406,\r\n    Conflict: 409,\r\n    SessionExpired: 420,\r\n    UnprocessableEntity: 422,\r\n    InternalServerError: 500,\r\n    isErrorExpected,\r\n};\r\n","//browser storage keywords\r\nconst KeyToken = \"ptk\";\r\nmodule.exports = {\r\n    save: (token) => {\r\n        // use remember me option\r\n        sessionStorage.setItem(KeyToken, token);\r\n    },\r\n    reset: () => {\r\n        sessionStorage.clear();\r\n    },\r\n    TOKEN: () => sessionStorage.getItem(KeyToken),\r\n};\r\n","module.exports = {\r\n    T3D: {\r\n        TableRowMargings: [0, 40, 80, 120, 160],\r\n        TurnTimeOut: 45, //secs\r\n    },\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nconst GlobalContext = createContext({\r\n    device: 0,\r\n    signOut: () => {},\r\n    goTo: () => {},\r\n    redirectToGamePlay: () => {}\r\n});\r\n\r\nexport default GlobalContext;","import { useContext } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\n\r\nconst NavigationBar = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\treturn (\r\n\t\t<Navbar bg=\"light\" className=\"nav-pills text-right\">\r\n\t\t\t<Container className=\"text-right\">\r\n\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tactiveClassName=\"btn-success text-dark\"\r\n\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\tme\r\n\t\t\t\t\t\t\t\t? Routes.Client.Profile\r\n\t\t\t\t\t\t\t\t: Routes.Client.SignUp\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-address-card px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{me\r\n\t\t\t\t\t\t\t? context.device !== Devices.SmartPhone && me.fullname\r\n\t\t\t\t\t\t\t: \"ثبت نام\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Root}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-home px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"صفحه اصلی\"}\r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameDeck}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-gamepad px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"بازی ها\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{me && (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\t\tto={Routes.Client.ChatRoom}\r\n\t\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-comment px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t{context.device === Devices.Desktop && \"چت روم\"}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.Rankings}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-list-ol px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"رنکینگ\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.GameGuide}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i className=\"fa fa-eye px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"راهنما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"nav-link text-primary\"\r\n\t\t\t\t\t\tto={Routes.Client.ContactUs}\r\n\t\t\t\t\t\tactiveClassName=\"btn-outline-secondary text-dark\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-phone-square px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t{context.device === Devices.Desktop && \"تماس با ما\"}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const Sorry = (text) => {\r\n\ttoast.error(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-right\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-times\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const OK = (text) => {\r\n\ttoast.success(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-left\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-check\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Notify = (text) => {\r\n\ttoast.info(text, {\r\n\t\t// theme: \"light\",\r\n\t\tposition: \"top-center\",\r\n\t\tcloseOnClick: true,\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-info\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\nexport const Attention = (text, onClick) => {\r\n\t/*toast.warn(text, {\r\n        type: \"colored\",\r\n        position: \"top-center\",\r\n        closeOnClick: true,\r\n        icon: <i style={{float:'right'}} className=\"fa fa-gavel\" aria-hidden=\"true\"></i>,\r\n    });*/\r\n\ttoast.warn(text, {\r\n\t\ttype: \"dark\",\r\n\t\tposition: \"top-center\",\r\n\t\tonClick, // check these two lines functionality to make sure they doesnt interfere with eachother\r\n\t\tcloseOnClick: !Boolean(onClick), //if it has an onClick, then dont close it, but if it hasnt any onClick then set closeOnClick to true\r\n\t\ticon: (\r\n\t\t\t<i\r\n\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\tclassName=\"fa fa-gavel\"\r\n\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t),\r\n\t});\r\n};\r\n\r\n//add maximum number of simultanious NewMsg s\r\nexport const NewMsg = ({ name, text }, onClick) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right\">\r\n\t\t\t{`${name} : ${text}`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\ttype: \"dark\",\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick,\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-envelope-o px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport const Invitation = (by, accept, reject) => {\r\n\ttoast(\r\n\t\t<p className=\"text-right text-primary\">\r\n\t\t\t{`درخواست بازی ${by.type}*${by.type}*${by.type} از ${by.name}\\n برای پذیرفتن دعوت کلیک کنید`}\r\n\t\t</p>,\r\n\t\t{\r\n\t\t\tposition: \"top-left\",\r\n\t\t\tonClick: () => accept(by.ID, by.type),\r\n\t\t\tonClose: () => reject(),\r\n\t\t\ticon: (\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\tclassName=\"fa fa-gamepad px-2 py-1\"\r\n\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t),\r\n\t\t}\r\n\t);\r\n};\r\n","import axios from \"axios\";\r\nimport { Status, browserStorage } from \"../configs\";\r\nimport { Attention, Sorry } from \"../../tools/notification\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\n// put token in all request headers:\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n\t\tif (token) config.headers.Authorization = `Bearer ${token}`;\r\n\t\telse config.headers.Authorization = null;\r\n\t\treturn config;\r\n\t},\r\n\t(error) => {\r\n\t\t// what to do?\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n// what the f should i do?\r\n// (() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n//     if (token)\r\n//         axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n//     else {\r\n//         delete axios.defaults.headers.common[\"Authorization\"];\r\n//         /*if setting null does not remove `Authorization` header then try\r\n//               delete axios.defaults.headers.common['Authorization'];\r\n//             */\r\n//     }\r\n//     console.log(\"token\", token);\r\n// })();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n\ttry {\r\n\t\tconst expectedErrors =\r\n\t\t\terror.response &&\r\n\t\t\terror.response.status >= Status.BadRequest && // >= 400\r\n\t\t\terror.response.status < Status.InternalServerError; // < 500\r\n\r\n\t\t//*****notice: */\r\n\t\t//remove some oftheese errors... because they need to be costomized in every use in each components\r\n\t\t// change to switch\r\n\t\tif (error.response.status === Status.BadRequest) {\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی در ارسال درخواست شما به سرور وجود داشت، لطفا دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.Unauthorized) {\r\n\t\t\t// is this needed? browserStorage.reset();\r\n\t\t\tSorry(\r\n\t\t\t\t\"احراز هویت موفقیت آمیز نبود. لطفا وارد حساب کاربری خود شوید\"\r\n\t\t\t);\r\n\t\t\tbrowserStorage.reset();\r\n\t\t} else if (error.response.status === Status.Forbidden) {\r\n\t\t\tSorry(\"شماره دانشجویی یا رمز عبور نادرست است\");\r\n\t\t} else if (error.response.status === Status.NotAcceptable) {\r\n\t\t\t//or used Locked: 423\r\n\t\t\tSorry(\"این قسمت فقط مختص کاربران ادمین می باشد\");\r\n\t\t} else if (error.response.status === Status.Conflict) {\r\n\t\t\tAttention(\r\n\t\t\t\t\"کاربری با این شماره دانشجویی یا ایمیل قبلا ثبت نام کرده است\"\r\n\t\t\t);\r\n\t\t} else if (error.response.status === Status.SessionExpired) {\r\n\t\t\tSorry(\"نشست شما منقضی شده است، لطفا دوباره وارد حساب خود شوید.\");\r\n\t\t\tbrowserStorage.reset();\r\n\t\t\t//redirect to sign in page !\r\n\t\t} else if (error.response.status === Status.UnprocessableEntity) {\r\n\t\t\tSorry(\"ورودی شما با استانداردهای سایت مطابقت ندارد\");\r\n\t\t} else if (!expectedErrors) {\r\n\t\t\t// console.log(error);\r\n\t\t\tSorry(\r\n\t\t\t\t\"مشکلی از سمت سرور پیش آمده است ... لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n        console.log(error);\r\n    }\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n\tget: axios.get,\r\n\tpost: axios.post,\r\n\tput: axios.put,\r\n\tdelete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst userServices = {\r\n\tsignUp: (user) => {\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignUp}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t);\r\n\t},\r\n\tsignIn: (user) => {\r\n\t\tconsole.log(`${Server.Root}/${Server.Users}/${Server.SignIn}`);\r\n\t\treturn http.post(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.SignIn}`,\r\n\t\t\tJSON.stringify(user)\r\n\t\t);\r\n\t},\r\n\tgetPlayer: (userID) => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Public}/${userID}`\r\n\t\t);\r\n\t},\r\n\tgetAllPlayers: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Users}/${Server.Public}`);\r\n\t},\r\n\tgetMe: () => {\r\n\t\tconsole.log(\"IAM CALLED\");\r\n\t\treturn http.get(`${Server.Root}/${Server.Users}/${Server.Private}`);\r\n\t},\r\n\tgetMyCredentials: () => {\r\n\t\t//token will be sent automatically, o.w. method doesnt return anything\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`\r\n\t\t);\r\n\t},\r\n\teditMyCredentials: (newMe) => {\r\n\t\treturn http.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}`,\r\n\t\t\tJSON.stringify(newMe)\r\n\t\t);\r\n\t},\r\n\tchangeMyPassword: (passwords) => {\r\n\t\treturn http.put(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.PasswordChange}`,\r\n\t\t\tJSON.stringify(passwords)\r\n\t\t);\r\n\t},\r\n\tgetMyFriends: () => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}`\r\n\t\t);\r\n\t},\r\n\tisMyFriend: (targetID) => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Private}/${Server.Credentials}/${Server.Friends}/${targetID}`\r\n\t\t);\r\n\t},\r\n\tisAdministrator: (userID) => {\r\n\t\treturn http.get(\r\n\t\t\t`${Server.Root}/${Server.Users}/${Server.Administrators}/${userID}`\r\n\t\t);\r\n\t},\r\n};\r\n\r\nexport default userServices;\r\n","import { Status } from \"../../../services/configs\";\r\nimport userServices from \"./../../../services/http/userServices\";\r\n\r\nexport const ResetOpponent = () =>{\r\n    return async (dispatch) => {\r\n        await dispatch({type: \"RESET_OPPONENT\"})\r\n    }\r\n}\r\n\r\nexport const ResetMyPlayer = () => {\r\n    return async (dispatch) => {\r\n        await dispatch({ type: \"RESET_MINE\" });\r\n    };\r\n};\r\n\r\nexport const LoadThisPlayer = (userID) => {\r\n\treturn async (dispatch) => {\r\n\t\tif (userID) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data, status } = await userServices.getPlayer(userID);\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\tconst { player } = data;\r\n\t\t\t\t\tawait dispatch({ type: \"LOAD_OPPONENT\", payload: player });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t// ... toast proper message?\r\n\t\t\t\tawait dispatch(ResetOpponent());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ...propere message\r\n\t\t\tawait dispatch(ResetOpponent());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LoadMyPlayer = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { data, status } = await userServices.getMe();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { player } = data;\r\n\t\t\t\tawait dispatch({ type: \"LOAD_MINE\", payload: player });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// ... toast proper message?\r\n\t\t\tawait dispatch(ResetMyPlayer());\r\n\t\t}\r\n\t};\r\n};\r\n","export const EnterRoom = (room) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"ENTER_ROOM\",\r\n\t\t\tpayload: room,\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const ExitRoom = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"EXIT_ROOM\",\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const CleanScoreboard = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"CLEAN_SCOREBOARD\" });\r\n\t};\r\n};\r\n\r\nexport const UpdateScoreboard = (details) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_SCOREBOARD\",\r\n\t\t\tpayload: details,\r\n\t\t});\r\n\t};\r\n};\r\n\r\n/*export const SetGameID = (gameID) => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"SET_GAME_ID\",\r\n\t\t\tpayload: gameID,\r\n\t\t});\r\n\t};\r\n};*/\r\n","import { useMediaQuery } from \"react-responsive\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { withRouter } from \"react-router\";\r\nimport { browserStorage, Routes } from \"../../services/configs\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { ResetMyPlayer } from './../redux/actions/player';\r\nimport { EnterRoom } from './../redux/actions/game';\r\nconst GlobalStates = ({ children, history }) => {\r\n\tconst isDesktop = useMediaQuery({ query: \"(min-width: 1200px)\" });\r\n\tconst isSmartPhone = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\tconst isTablet = !isDesktop && !isSmartPhone;\r\n\tconst [device, setDevice] = useState(null);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(\"GlobalStates rendered\"); //s\r\n\tuseEffect(() => {\r\n\t\t// find device mode\r\n\t\t// array is sorted according to Configs.Devices\r\n\t\tsetDevice(\r\n\t\t\t[isDesktop, isTablet, isSmartPhone].findIndex((mode) => mode)\r\n\t\t); //return the index of the one that is true -> wich is the curret device mode\r\n\t}, [isDesktop, isTablet, isSmartPhone]);\r\n\r\n\tconst signOut = () => {\r\n\t\ttry {\r\n\t\t\tbrowserStorage.reset(); //sign out\r\n\t\t\thistory.push(Routes.Client.SignUp);\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t\t// edit .replace; use a function that doesnt recent BACK key on browser\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst redirectToGamePlay = (room) => {\r\n\t\tdispatch(EnterRoom(room));\r\n\t\thistory.push(Routes.Client.GameDeck);\r\n\t}\r\n\r\n\tconst goTo = (destination) => {\r\n\t\thistory.push(destination);\r\n\t}  \r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider value={{ device, signOut, redirectToGamePlay, goTo }}>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(GlobalStates);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from './../../globals/state/GlobalContext';\r\n\r\nconst ProfilePanel = (props) => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n\r\n    return (\r\n            <Row className=\"profile-panel-sidebar d-flex flex-column flex-shrink-0\">\r\n                <Button\r\n                    style={{ border: \"none\" }}\r\n                    variant=\"outline-warning\"\r\n                    className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <i className=\"fa fa-cogs px-2\" aria-hidden=\"true\"></i>\r\n                    پنل کاربری\r\n                </Button>\r\n                <hr />\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink\r\n                            exact\r\n                            to={Configs.Routes.Client.Profile}\r\n                            className=\"nav-link\"\r\n                            aria-current=\"page\">\r\n                            <i\r\n                                className=\"fa fa-user-o px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            مشخصات\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                            <i\r\n                                className=\"fa fa-users px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            دوستان و بازی ها\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"nav-link link-dark\"\r\n                            to={Configs.Routes.Client.ChatRoom}>\r\n                            <i\r\n                                className=\"fa fa-comment px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            چت روم\r\n                        </NavLink>\r\n                    </li>\r\n                    <hr />\r\n                    {me && me.isAdmin && (\r\n                        <Fragment>\r\n                            {/* admin tools */}\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark border-top\"\r\n                                    to={Configs.Routes.Client.Notices}>\r\n                                    <i\r\n                                        className=\"fa fa-newspaper-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    اطلاعیه ها\r\n                                </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink\r\n                                    className=\"nav-link link-dark\"\r\n                                    to=\"/controlPanel/admin/whatever\">\r\n                                    <svg\r\n                                        className=\"bi me-2\"\r\n                                        width=\"16\"\r\n                                        height=\"16\"></svg>\r\n                                    امکانات ادمین\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <Button variant=\"outline-danger\" onClick={context.signOut}>\r\n                    <i className=\"fa fa-sign-out px-2\" aria-hidden=\"true\"></i>\r\n                    خروج از حساب کاربری\r\n                </Button>\r\n            </Row>\r\n    );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Button, Row } from \"react-bootstrap\";\r\nimport \"../profile.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport Configs from \"../../services/configs\";\r\nimport GlobalContext from \"../../globals/state/GlobalContext\";\r\n\r\nconst CollapsedPanel = (props) => {\r\n    const me = useSelector((state) => state.me);\r\n    const context = useContext(GlobalContext);\r\n    return (\r\n        <Row bg=\"light\" className=\"profile-panel-sidebar-collapsed w-100 mx-auto pl-5\">\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                exact\r\n                to={Configs.Routes.Client.Profile}\r\n                className=\"nav-link\"\r\n                aria-current=\"page\">\r\n                <i className=\"fa fa-user-o\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link\"\r\n                to={Configs.Routes.Client.MyGamesAndFriends}>\r\n                <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n            <NavLink activeClassName=\"btn btn-primary\"\r\n                className=\"nav-link\"\r\n                to={Configs.Routes.Client.ChatRoom}>\r\n                <i className=\"fa fa-weixin\" aria-hidden=\"true\"></i>\r\n            </NavLink>\r\n\r\n            {me && me.isAdmin && (\r\n                <Fragment>\r\n                    {/* admin tools */}\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link border-top\"\r\n                        to={Configs.Routes.Client.Notices}>\r\n                        <i className=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\r\n                    </NavLink>\r\n                    <NavLink activeClassName=\"btn btn-primary\"\r\n                        className=\"nav-link\"\r\n                        to=\"/controlPanel/admin/whatever\">\r\n                        <svg className=\"bi me-2\" width=\"16\" height=\"16\"></svg>\r\n                    </NavLink>\r\n                </Fragment>\r\n            )}\r\n\r\n            <Button\r\n                variant=\"outline-danger\"\r\n                onClick={context.signOut}>\r\n                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n            </Button>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CollapsedPanel;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { browserStorage } from \"../services/configs\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LoadMyPlayer } from \"../globals/redux/actions/player\";\r\nimport { ResetMyPlayer } from './../globals/redux/actions/player';\r\n\r\n// auto-sign in if store sign in data was reset\r\nconst AutoSignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst opponent = useSelector((state) => state.opponent); //this is just to add opponent to useEffect dependencies\r\n\t// tis way, every time player game ends ( opponent resets ), player records will update\r\n\tconst storageToken = browserStorage.TOKEN();\r\n\tuseEffect(() => {\r\n\t\tif (storageToken) {\r\n\t\t\tconsole.log(`auth called then `);\r\n\t\t\tdispatch(LoadMyPlayer());\r\n\t\t} else {\r\n\t\t\tdispatch(ResetMyPlayer());\r\n\t\t}\r\n\t}, [storageToken, opponent, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default AutoSignIn;\r\n","import { Routes } from '../configs';\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst {Server} = Routes;\r\n\r\nconst chatServices = {\r\n    \r\n    getOurChat: (friendID) => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.SingleChat}/${friendID}`);\r\n    },\r\n    getMyInteractions: () => {\r\n        return http.get(`${Server.Root}/${Server.Chats}/${Server.Interactions}`);\r\n    }\r\n};\r\n\r\nexport default chatServices;","import { Fragment, useContext, useEffect } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ProfilePanel from \"../profile/panel/ProfilePanel\";\r\nimport CollapsedPanel from \"../profile/panel/CollapsedPanel\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { LoadMyFriendsChats, ResetMyFriendsChats } from \"../globals/redux/actions/friends\";\r\n\r\nconst ProfilePanelLayout = ({ children }) => {\r\n    const context = useContext(GlobalContext);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\t\tdispatch(LoadMyFriendsChats());\r\n\t\t// profile unmounted\r\n\t\treturn () => {\r\n\t\t\t// remove chat list from redux to save memory\r\n            dispatch(ResetMyFriendsChats());\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <AutoSignIn />\r\n            {(context.device === Devices.Desktop) ? (\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <Col lg={3}>\r\n                        <ProfilePanel />\r\n                    </Col>\r\n                    <Col lg={9}>{children}</Col>\r\n                </Row>\r\n            ) : (\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <Col className=\"mx-auto\" sm={12}>\r\n                        <CollapsedPanel />\r\n                    </Col>\r\n                    <Col sm={12}>{children}</Col>\r\n                </Row>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ProfilePanelLayout;\r\n","import { Status } from \"../../../services/configs\";\r\nimport chatServices from \"../../../services/http/chatServices\";\r\nimport { Sorry } from \"./../../../tools/notification\";\r\n\r\n// chats and friends\r\nexport const LoadMyFriendsChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tvar myFriends = [],\r\n\t\t\t\tmyChats = [];\r\n\t\t\tconst { status, data } = await chatServices.getMyInteractions();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst { interactions } = data;\r\n\t\t\t\tif (!(interactions instanceof Array))\r\n\t\t\t\t\tthrow new Error(\"server response is not an array!\");\r\n\t\t\t\tinteractions.forEach((interact) => {\r\n\t\t\t\t\tconst { friend, messages, ownerOf } = interact;\r\n\t\t\t\t\tmyFriends.push(friend);\r\n\t\t\t\t\tmyChats.push({\r\n\t\t\t\t\t\twith: friend.ID,\r\n\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t? { me: msg.text, friend: null, date: msg.date }\r\n\t\t\t\t\t\t\t\t: { me: null, friend: msg.text, date: msg.date }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"LOAD_FRIENDS\",\r\n\t\t\t\t\tpayload: myFriends,\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: myChats });\r\n\t\t\t\t// dispatch friends here\r\n\t\t\t\t// myChats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetMyFriendsChats = () => {\r\n\treturn async(dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t}\r\n}","import { Fragment, useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { Planets, Circle2, Sugar } from \"react-preloaders2\";\r\n\r\nconst LoadingBar = ({ loading }) => {\r\n    const [whichOne, setWhichOne] = useState(0);\r\n    useEffect(() => {\r\n        setWhichOne(Math.floor(Math.random() * 100)); //randomize animation\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        document.body.style = { overflowY: \"auto\" };\r\n        document.body.style = { height: \"auto\" };\r\n    }, [loading, whichOne]); //may have bug yet!!\r\n    //random animation\r\n    const selectedLoader =\r\n        whichOne % 3 === 0 ? (\r\n            <Circle2 time={0} customLoading={loading} />\r\n        ) : whichOne % 3 === 1 ? (\r\n            <Planets time={0} customLoading={loading} />\r\n        ) : (\r\n            <Sugar time={0} customLoading={loading} />\r\n        );\r\n\r\n    return <Fragment>{loading ? selectedLoader : null}</Fragment>;\r\n};\r\n\r\nexport default LoadingBar;\r\n","import { Routes } from \"../configs\";\r\n\r\nimport http from \"./httpService\";\r\n\r\nconst { Server } = Routes;\r\n\r\nconst gameServices = {\r\n\tgetAllGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}`);\r\n\t},\r\n\tgetMyGames: () => {\r\n\t\treturn http.get(`${Server.Root}/${Server.Games}/${Server.Mine}`);\r\n\t}\r\n};\r\n\r\nexport default gameServices;\r\n","import DateObject from \"react-date-object\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\nconst objectify = (date) => {\r\n    return new DateObject({\r\n\t\tdate: new Date(date),\r\n\t\tcalendar: persian,\r\n\t\tlocale: persian_fa,\r\n\t});\r\n}\r\nexport const toHijri = (date) => {\r\n\treturn [\r\n\t\tobjectify(date).format(\"dddd DD MMMM YYYY\"),\r\n\t\tobjectify(date).format(\"hh:mm\"),\r\n\t];\r\n};\r\n\r\nexport const toTimeShort = (date) => {\r\n\treturn objectify(date).format(\"hh:mm\");\r\n};\r\n","import { Button, Card, Row } from \"react-bootstrap\";\r\nimport \"./scores.css\";\r\nimport { useEffect, useState } from 'react';\r\nimport { toHijri } from \"../../tools/format\";\r\n\r\nconst SingleScoreCard = ({\r\n    Type,\r\n    date,\r\n    playerXName,\r\n    playerOName,\r\n    xScore,\r\n    oScore,\r\n}) => {\r\n    // format score text:\r\n    const [xBadge, setXBadge] = useState(null);\r\n    const [oBadge, setOBadge] = useState(null);\r\n    const [hijriDate, setHijriDate] = useState(null);\r\n    useEffect(() => {\r\n        setHijriDate(toHijri(date)[0]);//toHijri = [date, time]\r\n        if (xScore > oScore) {\r\n            // x won\r\n            setXBadge(\"badge-success\");\r\n            setOBadge(\"badge-danger\");\r\n        } else if (xScore === oScore) {\r\n            //draw\r\n            setXBadge(\"badge-warning\");\r\n            setOBadge(\"badge-warning\");\r\n        } else {\r\n            // o won\r\n            setOBadge(\"badge-success\");\r\n            setXBadge(\"badge-danger\");\r\n        }\r\n    }, [date, xScore, oScore]);\r\n    // make this card 'bg-transparent' too?\r\n    return (\r\n        <Card border=\"dark\" className=\"single-score-card\">\r\n            {/* <Card.Header className=\"text-center border-dark\">{`T3D ${Type}x${Type}x${Type}`}</Card.Header> */}\r\n            <Card.Body>\r\n                <Row className=\"text-center mx-auto\">\r\n                    <span className=\"col-5\">{playerXName}</span>\r\n                    <span\r\n                        className={`badge badge-pill ${xBadge} single-score-badge col-1`}>\r\n                        {xScore}\r\n                    </span>\r\n\r\n                    <span\r\n                        className={`badge badge-pill ${oBadge} single-score-badge col-1`}>\r\n                        {oScore}\r\n                    </span>\r\n                    <span className=\"col-5\">{playerOName}</span>\r\n                </Row>\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-0\">\r\n                <Button\r\n                    variant=\"outline-dark\"\r\n                    block\r\n                    size=\"lg\"\r\n                    className=\"replay-game-button\">\r\n                        {hijriDate} \r\n                        <i className=\"fa fa-pie-chart px-3\" aria-hidden=\"true\"></i>\r\n                </Button>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SingleScoreCard;\r\n","import { Fragment } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport SingleScoreCard from \"./SingleScoreCard\";\r\n\r\nconst AllScores = ({scores}) => {\r\n    return ( \r\n        <Fragment>\r\n            { scores.length ? scores.map(score => (\r\n                <SingleScoreCard key={score.gameID}\r\n                    Type={score.Type}\r\n                    date={score.date}\r\n                    playerXName={score.players[0].name}\r\n                    playerOName={score.players[1].name}\r\n                    xScore={score.players[0].score}\r\n                    oScore={score.players[1].score}\r\n                ></SingleScoreCard>\r\n            )) :\r\n            <Card className=\"bg-transparent mx-auto mt-3\" border=\"danger\">\r\n                <Card.Body className=\"text-center\">\r\n                    <Card.Text>\r\n                        هیچ بازی ای انجام نگرفته است\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                </Card>}\r\n        </Fragment>\r\n     );\r\n};\r\n \r\nexport default AllScores;","export default __webpack_public_path__ + \"static/media/no-avatar.5e7c913e.png\";","\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Badge } from 'react-bootstrap';\r\nimport '../profile.css';\r\n\r\nconst Record = ({children,title, small}) => {\r\n    return (\r\n        <ListGroup.Item className=\"h-100 bg-transparent\">\r\n            <Row className={!small && \"h-100 py-2\"}>\r\n                <Col className=\"text-center\">\r\n                    <Card.Text>{title}</Card.Text>\r\n                </Col>\r\n                <Col className={small ? \"text-left\" : \"text-center\"}>\r\n                    <Badge\r\n                        className=\"friend-badge-font-size\"\r\n                        pill\r\n                        variant=\"primary\">\r\n                        {children}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n};\r\n\r\nexport default Record;\r\n","export const TriggerRandomSearch = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.randomSearchTriggered = !previous.randomSearchTriggered;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const SendFriendRequestTo = (targetID) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendRequestTarget = targetID;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendRequest = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendRequestTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const InviteToFriendlyGame = (targetID, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendlyGameTarget = { targetID, type: gameType };\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const EndFriendlyInvitation = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.friendlyGameTarget = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RecieveGameInvitation = (ID, name, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.gameInvitation = { ID, name, type: gameType };\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const RejectGameInvitation = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\nexport const AcceptInvitation = (inviterID, gameType) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst previous = { ...getState() };\r\n\t\tprevious.acceptedGame = {inviterID, type: gameType};\r\n\t\tprevious.gameInvitation = null;\r\n\t\tawait dispatch({ type: \"UPDATE_TOOLS\", payload: previous });\r\n\t};\r\n};\r\n\r\n// reject invitation by nulling the field\r\n","import { Button, Card, Col, ListGroup, Row, InputGroup } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../profile.css\";\r\nimport noAvatar from \"./no-avatar.png\"; // definitely must be changed bro!\r\nimport Record from \"./Record\";\r\nimport Avatar from \"react-avatar\";\r\nimport { Sorry } from \"./../../tools/notification\";\r\nimport { useState } from 'react';\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tInviteToFriendlyGame,\r\n} from \"../../globals/redux/actions/tools\";\r\n\r\nconst FriendRecords = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst [gameType, setGameType] = useState(4);\r\n\tconst dispatch = useDispatch();\r\n\tif (!me) return null; //because of time delay to load player data, component crashes below\r\n\t//fix the bug in a better way\r\n\tconst { records } = props.friend ? props.friend : me;\r\n\tconst currentID = props.friend ? props.friend.ID : me.userID; //need to edit?\r\n\tconst onInviteToGameClick = () => {\r\n\t\tif (!room.type && !room.type && currentID !== me.userID) {\r\n\t\t\t//if you want to enable players play multiple games then remove this\r\n\t\t\t// if player isnt still in a game\r\n\t\t\t//check room info?\r\n\t\t\tdispatch(InviteToFriendlyGame(currentID,gameType));\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t//Notify('دوست مورد نظر درخواست شما را نپذیرفت')\r\n\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t}, 10000);\r\n\t\t} else {\r\n\t\t\tSorry(\"برای شروع بازی جدید، باید بازی قبلی شما به اتمام برسد\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"success\" bg=\"transparent\" className=\"friend-records\">\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Row className=\"w-100 p-0 mx-auto\">\r\n\t\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\tclassName=\"text-center mx-auuto\">\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmargin: \"auto\",\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize=\"128\"\r\n\t\t\t\t\t\t\tround={true}\r\n\t\t\t\t\t\t\tsrc={noAvatar}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={9}>\r\n\t\t\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد بردها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"h-100\">\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"p-0 h-100 w-100\">\r\n\t\t\t\t\t\t\t\t\t<Record title=\"تعداد باختها\">\r\n\t\t\t\t\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t\t\t\t\t</Record>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t\t{props.friend && (\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={4} xs={12}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={onInviteToGameClick}>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\tدرخواست بازی\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm={8} xs={12}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"3\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={gameType === 3}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(3)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={gameType === 4}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(4)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Radio\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"5\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"tableDimension\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={gameType === 5}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setGameType(5)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default FriendRecords;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from \"../../services/configs\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport { Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport AllScores from \"../../tables/scores/AllScores\";\r\nimport \"../profile.css\";\r\nimport FriendRecords from \"./FriendRecords\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyGamesAndFriends = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [myGames, setMyGames] = useState([]);\r\n\tconst [filterID, setFilterID] = useState(\"me\");\r\n\tconst [selectedFriendIndex, setSelectedFriendIndex] = useState(-1);\r\n\tconst myFriends = useSelector((state) => state.friends);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true); // use preloader here?\r\n\t\t\t\tlet serverResponse = await gameServices.getMyGames();\r\n\t\t\t\tif (serverResponse.status === Configs.Status.Successful)\r\n\t\t\t\t\tsetMyGames(serverResponse.data.myGames.reverse());\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedFriendIndex(\r\n\t\t\tfilterID !== \"me\"\r\n\t\t\t\t? myFriends.findIndex((friend) => friend.ID === filterID)\r\n\t\t\t\t: -1\r\n\t\t);\r\n\t\t// if filterID === \"me\" || frined id wia .findIndex not found ---> returns -1\r\n\t}, [filterID, myFriends]);\r\n\r\n\tconst unfriend = (friend) => {\r\n\t\t//... show a modal or sth to ask if user's sure\r\n\t\t// send proper http request to clear both from each others friend list\r\n\t};\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"big-single-card\">\r\n\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\tلیست دوستان و آمار بازی ها\r\n\t\t\t</Card.Header>\r\n\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t\tdefaultActiveKey={filterID}\r\n\t\t\t\t\tonSelect={(key) => setFilterID(key)}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tlg={3}\r\n\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\tsm={12}\r\n\t\t\t\t\t\t\tclassName=\"friend-list-name-length tabs-list-friends-in-games-scrollable\">\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t\tهمه بازی ها\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link eventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row className=\"m-0 w-100\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>{friend.name}</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunfriend(friend)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-unfriend fa fa-times pl-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tarea-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={8} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t<Tab.Pane eventKey=\"me\">\r\n\t\t\t\t\t\t\t\t\t<FriendRecords friend={null} />\r\n\t\t\t\t\t\t\t\t\t<AllScores scores={myGames} />\r\n\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t{myFriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Tab.Pane\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\teventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t<FriendRecords\r\n\t\t\t\t\t\t\t\t\t\t\tfriend={\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex !== -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? myFriends[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFriendIndex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AllScores \r\n\t\t\t\t\t\t\t\t\t\t\tscores={myGames.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(game) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.ID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[0].id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfriend.ID ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgame.players[1].id\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default MyGamesAndFriends;\r\n","import http from \"./httpService\";\r\nimport { Routes } from \"../configs\";\r\n\r\nconst {Server} = Routes;\r\nconst noticeServices = {\r\n    createNotice: (notice) => {\r\n        return http.post(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    },\r\n    getAdvancedNotics: () => { //returns all notices with complete data esp. with ID\r\n        return http.get(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}`\r\n        );\r\n    },\r\n    getShortNotices: () => {\r\n        return http.get(`${Server.Root}/${Server.Notices}`);\r\n    },\r\n    editNotice: (noticeID, notice) => {\r\n        return http.put(\r\n            `${Server.Root}/${Server.Notices}/${Server.NoticeManagement}/${noticeID}`,\r\n            JSON.stringify(notice)\r\n        );\r\n    }\r\n};\r\n\r\nexport default noticeServices;\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Card, Col, Row, Button, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport { Status, browserStorage } from \"../services/configs\";\r\nimport \"./profile.css\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nconst NoticeManager = () => {\r\n\t//u can create another component for listing notices ?\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst [isAllowed, setAllowed] = useState(undefined);\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(null);\r\n\tconst [endDate, setEndDate] = useState(null);\r\n\tconst [notices, setNotices] = useState([]);\r\n\tconst [selectedNoticeID, setSelectedNoticeID] = useState(null);\r\n\tconst [updateTrigger, setUpdateTrigger] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst resetStates = () => {\r\n\t\tsetTitle(\"\");\r\n\t\tsetText(\"\");\r\n\t\tsetStartDate(null);\r\n\t\tsetEndDate(null);\r\n\t\tsetSelectedNoticeID(null);\r\n\t\tsetUpdateTrigger(!updateTrigger); // updateTrigger: true <===> false -> chane -> useEffects calls\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//use another simpler preloader\r\n\t\t//load all notices in left side for selecting: load all and push them in notices state\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst { status, data } =\r\n\t\t\t\t\tawait noticeServices.getAdvancedNotics();\r\n\t\t\t\tif (status === Status.Successful) {\r\n\t\t\t\t\t//return data.notices;\r\n\t\t\t\t\tif (data.notices.length) setNotices(data.notices.reverse());\r\n\t\t\t\t\t//if all is empty\r\n\t\t\t\t\tif (data.notices.length === 0) {\r\n\t\t\t\t\t\tsetNotices([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttitle: \"پیام\",\r\n\t\t\t\t\t\t\t\ttext: \"اطلاعیه جدیدی وجود ندارد\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetNotices([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"خطا\",\r\n\t\t\t\t\t\ttext: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t})();\r\n\t}, [updateTrigger]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = browserStorage.TOKEN();\r\n        let isAdmin = undefined;\r\n\t\tif (token) {\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\t\t\tisAdmin = decoded_token &&\r\n\t\t\t\tdecoded_token.user.admin &&\r\n\t\t\t\tdecoded_token.exp > Date.now() / 1000; //user is admin and token not expired\r\n\t\t\t// show proper message for simple users\r\n\t\t\tif (!me || isAdmin === false) {\r\n\t\t\t\t//in first render a wronge message will be shown! find a fix\r\n\t\t\t\t//2nd condition must be exactly the same\r\n\t\t\t\tSorry(\"متاسفانه شما مجوز دسترسی به این صفحه را ندارید.\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n        else isAdmin = false;\r\n\t\tsetAllowed(isAdmin);\r\n\t}, [me]);\r\n\t//***** in server implemented a middleware for this, is this needed? */\r\n\r\n\t//runs when create notice button clicks\r\n\tconst createNewNotice = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst { status } = await noticeServices.createNotice({\r\n\t\t\t\ttitle,\r\n\t\t\t\ttext,\r\n\t\t\t\tstartDate: new Date(startDate),\r\n\t\t\t\tendDate: new Date(endDate),\r\n\t\t\t});\r\n\t\t\t//*********** */\r\n\t\t\t//COMPLETELY CHECK NOTICE IN CLIENT AND SERVER\r\n\t\t\tif (status === Status.CreatedSuccessfully) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با موفقیت ساخته شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره اطلاعیه بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst selecteNotice = (notice) => {\r\n\t\t// console.log(notice);\r\n\t\tsetSelectedNoticeID(notice._id);\r\n\t\tsetTitle(notice.title);\r\n\t\tsetText(notice.text);\r\n\t\tsetStartDate(new Date(notice.startDate));\r\n\t\tsetEndDate(new Date(notice.endDate));\r\n\t};\r\n\r\n\tconst cancelEditing = () => {\r\n\t\tresetStates();\r\n\t};\r\n\r\n\tconst saveChanges = async () => {\r\n\t\t//add patern and stuff to states and inputs\r\n\t\tif (!selectedNoticeID) return;\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst { status } = await noticeServices.editNotice(\r\n\t\t\t\tselectedNoticeID,\r\n\t\t\t\t{ title, text, startDate, endDate }\r\n\t\t\t);\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tOK(`اطلاعیه ی ${title} با مورفقیت ویرایش شد`);\r\n\t\t\t\tresetStates();\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tif (!Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\r\n\t\t\t\t\t\"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\t// if admin status is checked directly by server then start rendering the page\r\n\t//consists two part\" right part => used for creating and editing notices\r\n\t//left part lists all notices and allows admin to select one => after selecting the notice will be ready to be edited on right side\r\n\r\n\t//edit all heights in control panel\r\n\t//add patern and stuff to states and inputs\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{me && isAllowed && (\r\n\t\t\t\t<Row style={{ height: \"100%\" }}>\r\n\t\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t\t<Col lg={6} md={5} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"success\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه جدید\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tعنوان اطلاعیه\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tpattern=\".{3,30}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"عنوان اطلاعیه باید حداقل 3 و حداکثر 30 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"عنوان\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-auto\">\r\n\t\t\t\t\t\t\t\t\tتوضیحات\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{5,200}\"\r\n\t\t\t\t\t\t\t\t\tonInput={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\"\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\t\"متن اطلاعیه باید حداقل 5 و حداکثر 200 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto h-25\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"متن کامل اطلاعیه را وارد کنید\"\r\n\t\t\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ شروع نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto w-100\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={startDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setStartDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"my-1 mx-2\">\r\n\t\t\t\t\t\t\t\t\tتاریخ پایان نمایش\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tcalendar={persian}\r\n\t\t\t\t\t\t\t\t\tlocale={persian_fa}\r\n\t\t\t\t\t\t\t\t\tcalendarPosition=\"bottom-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={endDate}\r\n\t\t\t\t\t\t\t\t\tonChange={setEndDate}\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t{!selectedNoticeID ? (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={createNewNotice}>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\tایجاد اطلاعیه\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={saveChanges}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tذخیره تغییرات\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col lg={6} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-warning text-secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelEditing}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-floppy-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\tلغو ویرایش\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={6} md={7} sm={12}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tborder=\"info\"\r\n\t\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\t\tclassName=\"mx-auto notice-manager-card\">\r\n\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\r\n\t\t\t\t\t\t\t\tاطلاعیه های قبلی\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body\r\n\t\t\t\t\t\t\t\tstyle={{ overflowY: \"scroll\" }}\r\n\t\t\t\t\t\t\t\tclassName=\"text-right\">\r\n\t\t\t\t\t\t\t\t{notices.map((notice) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t<Alert variant=\"secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-info-circle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{notice.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: {notice.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"icon-edit-notice fa fa-pencil-square-o px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselecteNotice(notice)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default NoticeManager;\r\n","\r\nexport const UpdateMyChatList = (name, friendID, text, { sent, recieved }) => {\r\n\t// one time u load from server, then new messages are simply pushed to previous data\r\n\treturn async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst previous = [...getState().chats];\r\n\t\t\t// is it ok to use by refrence ?\r\n\t\t\tconsole.log(\"recieve update\");\r\n\t\t\tprevious.find(chat => chat.with === friendID).messages.push({\r\n\t\t\t\tname: name, //is name needed?\r\n\t\t\t\tme: sent ? text : null,\r\n\t\t\t\tfriend: recieved ? text : null,\r\n\t\t\t\tdate: new Date(),\r\n\t\t\t});\r\n\t\t\tawait dispatch({\r\n\t\t\t\ttype: \"LOAD_CHATS\",\r\n\t\t\t\tpayload: previous,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t//..propeer message\r\n\t\t\t// ...reset?\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ResetMyChats = () => {\r\n\treturn async(dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t}\r\n}\r\n/*\r\n// load all chats\r\nexport const LoadMyChats = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await chatServices.getMyChats();\r\n\t\t\tif (status === Status.Successful) {\r\n\t\t\t\tconst {myChats} = data;\r\n\t\t\t\tconsole.log(myChats);\r\n\t\t\t\tconst chats = myChats.map((chat) => {\r\n\t\t\t\t\tconst { ownerOf, friendID, messages } = chat;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twith: friendID,\r\n\t\t\t\t\t\tmessages: messages.map((msg) =>\r\n\t\t\t\t\t\t\townerOf === msg.owner\r\n\t\t\t\t\t\t\t\t? { me: msg.text, friend: null, date: msg.date }\r\n\t\t\t\t\t\t\t\t: { me: null, friend: msg.text, date: msg.date }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait dispatch({ type: \"LOAD_CHATS\", payload: chats });\r\n\t\t\t\t// dispatch friends here\r\n\t\t\t\t// chats key-value array: its keys are friendID that is relative to a special chat\r\n\t\t\t\tawait dispatch({ type: \"LOAD_FRIENDS\", payload: chats });\r\n\t\t\t} else throw new Error(\"Error happened while forming chats list\");\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Loading chats interrupted cause of this error: ${err}`\r\n\t\t\t);\r\n\t\t\t//show proper message\r\n\t\t\tSorry(\r\n\t\t\t\t\"حین بارگذاری پیام ها مشکلی پیش آمد. لطفا لحظاتی بعد دوباره تلاش کنید\"\r\n\t\t\t);\r\n\t\t\tawait dispatch({ type: \"RESET_CHATS\" });\r\n\t\t\tawait dispatch({ type: \"RESET_FRIENDS\" });\r\n\t\t}\r\n\t};\r\n};*/","import { UpdateMyChatList } from \"./chats\";\r\n\r\nexport const SendMessageTo = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: \"SEND_MESSAGE\",\r\n\t\t\t\t\tpayload: { name, friendID, text },\r\n\t\t\t\t});\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {sent: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not sent: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const RecieveMessageFrom = (name, friendID, text) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tif (text && friendID && name) {\r\n\t\t\t\tawait dispatch({\r\n                    type: \"RECIEVE_MESSAGE\",\r\n                    payload: { name, friendID, text },\r\n                });\r\n\t\t\t\tawait dispatch(UpdateMyChatList(name, friendID, text, {recieved: true}));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"msg not recieved: data missing...\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n};","import { Fragment, useState, useEffect } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport \"./chat.css\";\r\nimport { toHijri } from \"../tools/format\";\r\nconst Message = ({ msg, previousDay }) => {\r\n\tconst { date } = msg; // destructure date from msg then make a new date object\r\n\t// reason for making new Date objects is that react throws error some time when you use it without new Date :|\r\n\tconst [showDate, setShowDate] = useState(false); //for each day, the first message in that day has persian date above it\r\n\tconst [time, setTime] = useState(null);\r\n\tconst [hijriDate, setHijriDate] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst [hDate, hTime] = toHijri(date);\r\n\t\tsetTime(hTime);\r\n\t\tsetHijriDate(hDate);\r\n\t\tsetShowDate(\r\n\t\t\tnew Date(date).getDate() !== previousDay || previousDay === 0\r\n\t\t); //     0 means this is the first message in the chat\r\n\t}, [date, previousDay]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{!showDate ? null : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"message-date\">{hijriDate}</p>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6} sm={msg.me ? 8 : 4} xs={msg.me ? 9 : 3}>\r\n\t\t\t\t\t{msg.me && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.me}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6} sm={msg.friend ? 8 : 4} xs={msg.friend ? 9 : 3}>\r\n\t\t\t\t\t{msg.friend && (\r\n\t\t\t\t\t\t<Alert className=\"text-right\" variant=\"primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={9} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{msg.friend}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"message-time\" lg={3} xs={12}>\r\n\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { Button, Card, Container, Form, Row, Tab, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.css\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nimport Message from \"./Message\";\r\n\r\nconst ChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst mostRecentMessageRef = useRef(null);\r\n\tconst chats = useSelector((state) => state.chats);\r\n\tconst [ourChat, setOurChat] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet ours = chats.find((chat) => chat.with === friendID);\r\n\t\tsetOurChat(ours && ours.messages ? ours.messages : []);\r\n\t}, [chats, friendID]);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// init state vears ro get chat\r\n\t\tif (myMessage) {\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\r\n\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { recieved } = message;\r\n\t\tif (!message.sent && recieved && recieved.friendID === friendID) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (mostRecentMessageRef && mostRecentMessageRef.current)\r\n\t\t\t\t\tmostRecentMessageRef.current.scrollIntoView({\r\n\t\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\t\ttop: mostRecentMessageRef.current.offsetTop,\r\n\t\t\t\t\t});\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t}, [message, ourChat, friendID, dispatch]);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane eventKey={friendID}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tborder=\"dark\"\r\n\t\t\t\t\t\tbg=\"transparent\"\r\n\t\t\t\t\t\tclassName=\"big-single-card chat-box-scrollable\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t{ourChat &&\r\n\t\t\t\t\t\t\t\tourChat instanceof Array &&\r\n\t\t\t\t\t\t\t\tourChat.map((msg, index) => (\r\n\t\t\t\t\t\t\t\t\t<div ref={mostRecentMessageRef}>\r\n\t\t\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\t\t\t// key={msg.key}\r\n\t\t\t\t\t\t\t\t\t\t\tmsg={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tpreviousDay={\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? new Date(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tourChat[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex - 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].date\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ).getDate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tonSubmit={(event) => composeMessage(event)}\r\n\t\t\t\t\t\tclassName=\"w-100 mt-3\">\r\n\t\t\t\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-paper-plane\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tsetMyMessage(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Card, Row, Col, Nav, Tab } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Devices } from \"../services/configs\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport \"./chat.css\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n\tconst context = useContext(GlobalContext);\r\n\r\n\tconst myfriends = useSelector((state) => state.friends);\r\n\t\r\n\treturn (\r\n\t\t<Card border=\"secondary\" bg=\"transparent\" className=\"chat-main-card\">\r\n\t\t\t<Card.Header className=\"text-center\">چت روم شما</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Tab.Container\r\n\t\t\t\t// id=\"left-tabs-example\"\r\n\t\t\t\t// defaultActiveKey={filterID}\r\n\t\t\t\t// onSelect={(key) => setFilterID(key)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcontext.device !== Devices.SmartPhone\r\n\t\t\t\t\t\t\t\t\t? \"chat-room-devider chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t\t\t: \"smartphone-chat-scrollable-friends\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlg={3} md={3} sm={12}>\r\n\t\t\t\t\t\t\t<Nav\r\n\t\t\t\t\t\t\t\tvariant=\"pills\"\r\n\t\t\t\t\t\t\t\tclassName=\"flex-column text-right\">\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\t\t// key={friend.ID}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={friend.ID}>\r\n\t\t\t\t\t\t\t\t\t\t\t{friend.name}\r\n\t\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* EDIT MAIL LAYOUT <Col> LIKE THIS */}\r\n\t\t\t\t\t\t<Col lg={9} md={9} sm={12}>\r\n\t\t\t\t\t\t\t<Tab.Content>\r\n\t\t\t\t\t\t\t\t{myfriends.map((friend) => (\r\n\t\t\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\t\t\t// key={uuidv1()}\r\n\t\t\t\t\t\t\t\t\t\tfriendID={friend.ID}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tab.Content>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Tab.Container>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Button, Card, Form, Col, Row } from \"react-bootstrap\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport \"./profile.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { OK, Sorry } from \"../tools/notification\";\r\nimport GlobalContext from './../globals/state/GlobalContext';\r\n\r\nconst MODES = { READ_ONLY: 0, EDIT: 1, CHANGE_PASS: 2 };\r\nconst AccountCredentials = () => {\r\n    //states\r\n\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [studentID, setStudentID] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(\"\");\r\n    const [pageMode, setPageMode] = useState(MODES.READ_ONLY); //  0 => read only, 1 => edit mode, 2 => change password\r\n    const [pageUpdateTrigger, triggerPageUpdate] = useState(false); // true <=> false -> triggers page , ==> see useEffect\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n    const context = useContext(GlobalContext);\r\n    //on component mount download user credentials\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                setLoading(true);\r\n                const { status, data } = await userServices.getMyCredentials();\r\n                if (status === Configs.Status.Successful) {\r\n                    const { me } = data;\r\n                    setFullname(me.fullname);\r\n                    setStudentID(me.studentID);\r\n                    setEmail(me.email);\r\n                }\r\n            } catch (err) {\r\n                if (!Configs.Status.isErrorExpected(err))\r\n                    Error(\r\n                        \"حین دریافت اطلاعات کاربر ایرادی پیش آمد. ... لطفا دوباره تلاش کنید.\"\r\n                    );\r\n                setLoading(false);\r\n            }\r\n            setLoading(false);\r\n        })();\r\n    }, [pageUpdateTrigger]);\r\n\r\n    const reloadPage = () => {\r\n        setLoading(false);\r\n        setPageMode(MODES.READ_ONLY);\r\n        triggerPageUpdate(!pageUpdateTrigger);\r\n    };\r\n    const saveChanges = async () => {\r\n        //add patern and stuff to states and inputs\r\n        // check all inputs plz\r\n        setLoading(true);\r\n        try {\r\n            const { status } = await userServices.editMyCredentials({\r\n                studentID,\r\n                fullname,\r\n                email,\r\n                password,\r\n            });\r\n            if (status === Configs.Status.Successful) {\r\n                OK(`تغییرات با موفقیت اعمال شد`);\r\n                // dispatch(TriggerRecordUpdate());\r\n                // find another way to update\r\n\r\n                reloadPage();\r\n            }\r\n        } catch (err) {\r\n            if (!Configs.Status.isErrorExpected(err))\r\n                Error(\r\n                    \"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\",\r\n                    { position: \"top-left\", closeOnClick: true }\r\n                );\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const changeMyPassword = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { status } = await userServices.changeMyPassword({\r\n                studentID,\r\n                password,\r\n                newPassword,\r\n            });\r\n            if (status === Configs.Status.Successful) {\r\n                OK(\"رمز شما با موفقیت تغییر داده شد\");\r\n                context.signOut();\r\n            }\r\n        } catch (err) {\r\n            if (!Configs.Status.isErrorExpected(err))\r\n                Sorry(\r\n                    \"خطایی در ذخیره تغییرات بوجود امد ... لطفا دوباره تلاش کنید\"\r\n                );\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const selectMode = (e) => {\r\n        e.preventDefault();\r\n        switch (pageMode) {\r\n            case MODES.EDIT:\r\n                saveChanges();\r\n                return;\r\n            case MODES.CHANGE_PASS:\r\n                changeMyPassword();\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n    const checkConfirmPassword = (event) => {\r\n        setConfirmNewPassword(event.target.value);\r\n        if (newPassword !== event.target.value) {\r\n            event.target.setCustomValidity(\r\n                \"تایید رمز عبور جدید باید با خود رمز عبور جدید مطابقت کامل داشته باشد\"\r\n            );\r\n            //console.log(password, confirmPassword);\r\n        } else event.target.setCustomValidity(\"\");\r\n    };\r\n\r\n    // *************************** DESIGN NOTE *******/\r\n    // HOW ABOUT USING TABS ? <Tabs>\r\n    return (\r\n        <Fragment>\r\n            <Card\r\n                border=\"secondary\"\r\n                bg=\"transparent\"\r\n                className=\"big-single-card\">\r\n                <Card.Header className=\"text-center\">\r\n                    <Row className=\"w-100 mx-auto\">\r\n                        <Col>\r\n                            <Button\r\n                                block\r\n                                onClick={() => setPageMode(MODES.READ_ONLY)}\r\n                                variant={`${\r\n                                    !pageMode\r\n                                        ? \"outline-primary\"\r\n                                        : \"outline-secondary\"\r\n                                }`}>\r\n                                {pageMode === MODES.READ_ONLY && (\r\n                                    <i\r\n                                        className=\"fa fa-dot-circle-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                )}\r\n                                فقط مشاهده\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                block\r\n                                onClick={() => setPageMode(MODES.EDIT)}\r\n                                variant={`${\r\n                                    pageMode === MODES.EDIT\r\n                                        ? \"outline-primary\"\r\n                                        : \"outline-secondary\"\r\n                                }`}>\r\n                                {pageMode === MODES.EDIT && (\r\n                                    <i\r\n                                        className=\"fa fa-dot-circle-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                )}\r\n                                ویرایش\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                block\r\n                                onClick={() => setPageMode(MODES.CHANGE_PASS)}\r\n                                variant={`${\r\n                                    pageMode === MODES.CHANGE_PASS\r\n                                        ? \"outline-primary\"\r\n                                        : \"outline-secondary\"\r\n                                }`}>\r\n                                {pageMode === MODES.CHANGE_PASS && (\r\n                                    <i\r\n                                        className=\"fa fa-dot-circle-o px-2\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                )}\r\n                                تغییر رمز عبور\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <Form onSubmit={(e) => selectMode(e)}>\r\n                    <Card.Body className=\"w-75 text-center mx-auto\">\r\n                        <LoadingBar loading={loading} />\r\n\r\n                        {pageMode !== MODES.CHANGE_PASS && (\r\n                            <Fragment>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        شماره دانشجویی\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        disabled\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"Student ID\"\r\n                                        value={studentID}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        نام کاربر\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        disabled={!pageMode}\r\n                                        type=\"text\"\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        pattern=\"[آ-ی ]{6,}\" // persian characters and space\r\n                                        onInput={(e) =>\r\n                                            e.target.setCustomValidity(\"\")\r\n                                        }\r\n                                        onInvalid={(e) =>\r\n                                            e.target.setCustomValidity(\r\n                                                \"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n                                            )\r\n                                        }\r\n                                        placeholder=\"Full Name\"\r\n                                        value={fullname}\r\n                                        required=\"required\"\r\n                                        onChange={(e) =>\r\n                                            setFullname(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        ایمیل\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        disabled={!pageMode}\r\n                                        pattern=\".{6,}\"\r\n                                        onInput={(e) =>\r\n                                            e.target.setCustomValidity(\"\")\r\n                                        }\r\n                                        onInvalid={(e) =>\r\n                                            e.target.setCustomValidity(\r\n                                                \"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n                                            )\r\n                                        }\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"E-mail\"\r\n                                        value={email}\r\n                                        required=\"required\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                            </Fragment>\r\n                        )}\r\n                        {pageMode !== MODES.READ_ONLY && (\r\n                            <Form.Group className=\"form-inline\">\r\n                                <Form.Label className=\"w-25\">\r\n                                    {`رمز عبور ${\r\n                                        pageMode === MODES.CHANGE_PASS\r\n                                            ? \"فعلی\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    className=\"account-info-textbox w-75\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        setPassword(e.target.value)\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                        )}\r\n                        {pageMode === MODES.CHANGE_PASS && (\r\n                            <>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        رمز عبور جدید\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        pattern=\".{6,15}\"\r\n                                        onInput={(e) =>\r\n                                            e.target.setCustomValidity(\"\")\r\n                                        }\r\n                                        onInvalid={(e) =>\r\n                                            e.target.setCustomValidity(\r\n                                                \"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n                                            )\r\n                                        }\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"New Password\"\r\n                                        value={newPassword}\r\n                                        required=\"required\"\r\n                                        onChange={(e) =>\r\n                                            setNewPassword(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"form-inline\">\r\n                                    <Form.Label className=\"w-25\">\r\n                                        تایید رمز عبور جدید\r\n                                    </Form.Label>\r\n\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        className=\"account-info-textbox w-75\"\r\n                                        placeholder=\"Confirm New Password\"\r\n                                        value={confirmNewPassword}\r\n                                        required=\"required\"\r\n                                        onChange={(event) =>\r\n                                            checkConfirmPassword(event)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                            </>\r\n                        )}\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            disabled={!pageMode}\r\n                            block\r\n                            variant=\"success\"\r\n                            className=\"w-50 mx-auto\">\r\n                            <i\r\n                                className=\"fa fa-wrench px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            ثبت تغییرات\r\n                        </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AccountCredentials;\r\n","import { Component } from \"react\";\r\nimport \"./sidebars.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Sorry } from \"../tools/notification\";\r\n\r\nclass SignInSideBar extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tconsole.log(err);\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { studentID, password, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<Card border=\"primary\" className=\"sign-in-sidebar\">\r\n\t\t\t\t<Card.Header\r\n\t\t\t\t\tborder=\"primary\"\r\n\t\t\t\t\tclassName=\"text-center text-primary\">\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Body className=\"text-primary\">\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"شماره دانشجویی\"\r\n\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ studentID: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-textBox\"\r\n\t\t\t\t\t\t\tplaceholder=\"رمز عبور\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tthis.setState({ password: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Footer className=\"bg-transparent border-primary\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col lg={6}>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"sign-in-sidebar-buttons\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-3\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignInSideBar);\r\n","import \"./sidebars.css\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport noticeServices from \"../services/http/noticeServices\";\r\nimport Configs from \"../services/configs\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nconst NoticeSideBar = () => {\r\n    const [notices, setNotices] = useState([]);\r\n\r\n    // oncomponentMount or update\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { status, data } = await noticeServices.getShortNotices();\r\n                if (status === Configs.Status.Successful) {\r\n                    //return data.notices;\r\n                    \r\n                    if (data.notices.length) setNotices(data.notices.reverse());\r\n                    //if all is empty\r\n                    if(data.notices.length === 0) {\r\n                        setNotices([{\r\n                            title: \"پیام\",\r\n                            text: \"اطلاعیه جدیدی وجود ندارد\",\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setNotices([\r\n                    {\r\n                        title: \"خطا\",\r\n                        text: \"...مشکلی حین بارگذاری اطلاعیه ها پیش آمد. دوباره امتحان کنید\",\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"notice-sidebar\" border=\"success\">\r\n            <Card.Header className=\"text-center text-success\">\r\n                اطلاعیه ها\r\n            </Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                {notices.length && notices.map((notice) => {\r\n                    return (\r\n                        <Fragment key={uuidv1()}>\r\n                            <Alert variant=\"info\">\r\n                                <i\r\n                                    className=\"fa fa-rss px-3\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span\r\n                                    style={{ color: \"red\", fontSize: \"18px\" }}>\r\n                                    {notice.title}\r\n                                </span>\r\n                                : {notice.text}\r\n                            </Alert>\r\n                            <hr />\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoticeSideBar;\r\n","export default __webpack_public_path__ + \"static/media/no-avatar.5e7c913e.png\";","import { Badge, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst OnlineStatistics = () => {\r\n    const {players, games} = useSelector((state) => state.statistics);\r\n    return (\r\n        <ListGroup className=\"list-group list-group-flush\">\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-wifi px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            کاربران آنلاین\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {players}\r\n                        </Badge>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"bg-transparent\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Text className=\"text-center\">\r\n                            <i\r\n                                className=\"fa fa-gamepad px-2\"\r\n                                aria-hidden=\"true\"></i>\r\n                            بازی های فعال\r\n                        </Card.Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <Badge className=\"player-badge-font-size\" variant=\"success\" pill>\r\n                            {games}\r\n                        </Badge>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default OnlineStatistics;\r\n","import { Alert, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SendMessageTo } from \"../globals/redux/actions/message\";\r\nconst GameChatBox = ({ friendID }) => {\r\n\tconst [myMessage, setMyMessage] = useState(\"\");\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst me = useSelector((state) => state.me);\r\n\r\n\tconst composeMessage = (event) => {\r\n\t\tif (myMessage) {\r\n\t\t\t//if message is not empty\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdispatch(SendMessageTo(me.fullname, friendID, myMessage));\r\n\t\t\tsetMyMessage(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={(event) => composeMessage(event)}>\r\n\t\t\t<Row className=\"w-100 mt-3 mx-auto\">\r\n\t\t\t\t<Alert className=\"w-100 text-right\" variant=\"info\">\r\n\t\t\t\t\t{message && message.recieved ? (\r\n\t\t\t\t\t\tmessage.recieved.text\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"p-1\"> </p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"w-100 p-0 m-0\">\r\n\t\t\t\t<Col xs={1} className=\"m-0 p-0 text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"w-100 mx-auto\"\r\n\t\t\t\t\t\tvariant=\"outline-info\">\r\n\t\t\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={11} className=\"m-0 p-0 w-100\">\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tclassName=\"p-0 w-100 bg-transparent chat-room-message-box\r\n                                    mx-auto text-right\"\r\n\t\t\t\t\t\tvalue={myMessage}\r\n\t\t\t\t\t\tonChange={(e) => setMyMessage(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"پیام...\"></Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default GameChatBox;\r\n","import noAvatar from \"./no-avatar.png\"; // definitely must be changed bro!\r\nimport { Card, Col, Alert, ListGroup, Button } from \"react-bootstrap\";\r\nimport OnlineStatistics from \"./OnlineStatistics\";\r\nimport { SendFriendRequestTo } from \"../globals/redux/actions/tools\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport userServices from \"./../services/http/userServices\";\r\nimport Configs from \"../services/configs\";\r\nimport GameChatBox from \"../chat/GameChatBox\";\r\nimport Record from \"../profile/friendgames/Record\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nconst PlayerInfoSideBar = (props) => {\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst scoreboard = useSelector((state) => state.scoreboard);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [personIsFriend, setPersonIsFriend] = useState(false);\r\n\r\n\tconst person = props.person ? props.person : me;\r\n\tconst onFriendRequestClick = (event) => {\r\n\t\tevent.target.innerHTML = \"ارسال شد...\";\r\n\t\tevent.target.disabled = true;\r\n\t\tdispatch(SendFriendRequestTo(person.userID));\r\n\t};\r\n\tconst [piece, setPiece] = useState(null); //piece === mohreh\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(scoreboard);\r\n\t\tsetPiece(\r\n\t\t\tme && person.userID !== me.userID ? scoreboard.opp : scoreboard.me\r\n\t\t);\r\n\t}, [person, me, scoreboard]);\r\n\tuseEffect(() => {\r\n\t\tif (me && person.userID !== me.userID) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { status, data } = await userServices.isMyFriend(\r\n\t\t\t\t\t\tperson.userID\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\t\t\tsetPersonIsFriend(data.isFriend);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// handle error.\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [me, person]);\r\n\tif (!person) return null;\r\n\tconst { records } = person;\r\n\treturn (\r\n\t\t<Card border=\"info\" className=\"player-info-sidebar\">\r\n\t\t\t<Card.Header className=\"text-center text-info form-inline\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card.Text className=\"text-left\">\r\n\t\t\t\t\t\t{person.fullname}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tmargin: \"auto\",\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsize=\"60\"\r\n\t\t\t\t\t\tround={true}\r\n\t\t\t\t\t\tsrc={noAvatar}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Card.Header>\r\n\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<ListGroup className=\"list-group list-group-flush\">\r\n\t\t\t\t\t{piece && (\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Alert variant={piece.index ? \"danger\" : \"primary\"}>\r\n\t\t\t\t\t\t\t\t<Alert.Heading className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t{piece.score} : {piece.shape}\r\n\t\t\t\t\t\t\t\t</Alert.Heading>\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Record small title=\"امتیاز بازیکن\">\r\n\t\t\t\t\t\t{records.points}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد بردها\">\r\n\t\t\t\t\t\t{records.wins}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد تساوی\">\r\n\t\t\t\t\t\t{records.draws}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t\t<Record small title=\"تعداد باختها\">\r\n\t\t\t\t\t\t{records.loses}\r\n\t\t\t\t\t</Record>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Card.Body>\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t{me === person ? (\r\n\t\t\t\t\t<OnlineStatistics />\r\n\t\t\t\t) : personIsFriend ? (\r\n\t\t\t\t\t<GameChatBox friendID={person.userID} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={\"outline-info\"}\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={(event) => onFriendRequestClick(event)}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa fa-handshake-o px-2\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\tدرخواست دوستی\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PlayerInfoSideBar;\r\n","import SignInSideBar from \"../sidebars/SignInSideBar\";\r\nimport NoticeSideBar from \"../sidebars/NoticeSideBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport PlayerInfoSideBar from \"../sidebars/PlayerInfoSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Devices, Routes } from \"../services/configs\";\r\nimport AutoSignIn from \"../users/AutoSignIn\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst MainLayout = (props) => {\r\n\tconst context = useContext(GlobalContext);\r\n\tconst { pathname } = props.location;\r\n\t//redux\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst opponent = useSelector((state) => state.opponent);\r\n\r\n\tconst [leftSideBar, setLeftSideBar] = useState(null);\r\n\tconst [rightSideBar, setRightSideBar] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tsetLeftSideBar(<NoticeSideBar />);\r\n\t}, []);\r\n\r\n\t//teste\r\n\t//determine sidebar\r\n\tconst {device} = context;\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"sidebar manager called\");\r\n\t\tconst setPrimaryRightSideBar = () => {\r\n\t\t\tif (device !== Devices.Tablet)\r\n\t\t\t\tsetRightSideBar(\r\n\t\t\t\t\tme ? <PlayerInfoSideBar /> : <SignInSideBar />\r\n\t\t\t\t);\r\n\t\t\telse setRightSideBar(null);\r\n\t\t};\r\n\t\tif (pathname === Routes.Client.SignUp) {\r\n\t\t\tsetRightSideBar(null);\r\n\t\t\tsetLeftSideBar(null);\r\n\t\t} else if (pathname === Routes.Client.GameDeck) {\r\n\t\t\t// EDIT THIS..\r\n\t\t\t// ON REFRESH -> rightSideBar is null!\r\n\t\t\t// SOMETIMES: ERROR: cannout read .fullname of undefined person\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t\tif (opponent) {\r\n\t\t\t\tif (device !== Devices.SmartPhone) {\r\n\t\t\t\t\tsetLeftSideBar(<PlayerInfoSideBar person={opponent} />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLeftSideBar(null);\r\n\t\t\t\t\tsetRightSideBar(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetLeftSideBar(<NoticeSideBar />); //EDIT THIS\r\n\t\t\tsetPrimaryRightSideBar();\r\n\t\t}\r\n\t}, [me, opponent, pathname, device]);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<AutoSignIn />\r\n\t\t\t\r\n\r\n\t\t\t{context.device !== Devices.SmartPhone ? (\r\n\t\t\t\t<Row className=\"w-100 mx-auto\">\r\n\t\t\t\t\t{rightSideBar && <Col md={3}>{rightSideBar}</Col>}\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tclassName=\"mx-auto\"\r\n\t\t\t\t\t\tmd={pathname !== Routes.Client.SignUp ? null : 7}>\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{leftSideBar && (\r\n\t\t\t\t\t\t<Col md={context.device !== Devices.Tablet ? 3 : 4}>\r\n\t\t\t\t\t\t\t{leftSideBar}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t) : (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* what to do for control panelk sidebar in smartphone */}\r\n\t\t\t\t\t{me ? (\r\n\t\t\t\t\t\t<Row className=\"w-100 mx-auto\">{rightSideBar}</Row>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{leftSideBar}</Row>\r\n\t\t\t\t\t<Row className=\"w-100 mx-auto\">{props.children}</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MainLayout);\r\n","import {browserStorage, Routes} from '../configs';\r\n\r\nexport const createSocketRequest = (request, rname, msg) =>\r\n    JSON.stringify({\r\n        request,\r\n        rname,\r\n        token: browserStorage.TOKEN(),\r\n        msg,\r\n    });\r\n\r\nexport const connect = (roomName, gameType) => {\r\n    return new Promise((resolve, reject) => {\r\n        var server = new WebSocket(`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGamePlayRoute}`);\r\n        server.onopen = () => {\r\n            server.send(createSocketRequest(\"join\", roomName, gameType)); //temp\r\n            resolve(server);\r\n        };\r\n\r\n        server.onerror = (error) => {\r\n            // console.log(`WebSocket error: ${error}`);\r\n            server.close();\r\n            reject(error);\r\n        };\r\n\r\n        server.onclose = () => {\r\n            \r\n            resolve(null);\r\n            // this part needs editing ? maybe not\r\n        };\r\n    });\r\n};\r\n","//ONLY for class components: purpose: using redux in class components\r\nimport { connect } from \"react-redux\";\r\nimport { UpdateScoreboard, CleanScoreboard } from \"./actions/game\";\r\nimport { LoadThisPlayer, ResetOpponent } from \"./actions/player\";\r\nimport { EnterRoom, ExitRoom } from \"./actions/game\";\r\n// useSelector for functional components\r\n// state==>props : redux\r\n\r\nfunction withReduxDashboard(component) {\r\n\tconst mapStateToProps = (state) => ({\r\n\t\tme: state.me,\r\n\t\topponent: state.opponent,\r\n\t\troom: state.room,\r\n\t\tscoreboard: state.scoreboard,\r\n\t\ttools: state.tools,\r\n\t});\r\n\r\n\tconst mapDispatchToProps = (dispatch) => ({\r\n\t\tLoadThisPlayer: (userID) => dispatch(LoadThisPlayer(userID)),\r\n\t\tResetOpponent: () => dispatch(ResetOpponent()),\r\n\t\tEnterRoom: (room) => dispatch(EnterRoom(room)),\r\n\t\tExitRoom: () => dispatch(ExitRoom()),\r\n\t\t// SetGameID: (gameID) => dispatch(SetGameID(gameID)),\r\n\t\tUpdateScoreboard: (details) => dispatch(UpdateScoreboard(details)),\r\n\t\tCleanScoreboard: () => dispatch(CleanScoreboard()),\r\n\t});\r\n\treturn connect(mapStateToProps, mapDispatchToProps)(component);\r\n}\r\n\r\nexport default withReduxDashboard;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { GameSetting } from \"../../services/configs\";\r\n\r\nconst BriefScoreboard = ({ timeRemaining, players }) => {\r\n    const [timeStamp, setTimeStamp] = useState(null);\r\n    const aThird = GameSetting.T3D.TurnTimeOut / 3;\r\n    useEffect(() => {\r\n        let color = null,\r\n            icon = null;\r\n        if (timeRemaining) {\r\n            if (timeRemaining >= aThird) {\r\n                color = \"text-success\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-start px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            } else {\r\n                color = \"text-danger\";\r\n                icon = (\r\n                    <i className=\"fa fa-hourglass-half px-2\" aria-hidden=\"true\"></i>\r\n                );\r\n            }\r\n        } else {\r\n            color = \"text-dark\";\r\n            icon = <i className=\"fa fa-hourglass-end px-2\" aria-hidden=\"true\"></i>;\r\n        }\r\n        setTimeStamp(<div className={color}>{icon}{timeRemaining}</div>);\r\n    }, [timeRemaining, aThird]);\r\n\r\n    return (\r\n        <Card.Header className=\"w-100 text-center\">\r\n            <Row style={{ fontSize: \"20px\" }}>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"right\",\r\n                        color: players[1].color,\r\n                    }}>\r\n                    {players[1].shape} : {players[1].score}\r\n                </Col>\r\n                <Col>{timeStamp}</Col>\r\n                <Col\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        color: players[0].color,\r\n                    }}>\r\n                    {players[0].score} : {players[0].shape}\r\n                </Col>\r\n            </Row>\r\n        </Card.Header>\r\n    );\r\n};\r\n\r\nexport default BriefScoreboard;\r\n","import { Fragment } from \"react\";\r\nimport { Button, Card, Row } from \"react-bootstrap\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport BriefScoreboard from \"./BriefScoreboard\";\r\nimport \"../games.css\";\r\n\r\nconst TableDesign = ({ timeRemaining, dimension, players, table, onEachCellClick,normalCell }) => {\r\n    let dimens = [];\r\n    for (let i = 0; i < dimension; i++) dimens.push(i);\r\n\r\n    //prop drilling in BriefScoreBoard\r\n    return (\r\n        <Card\r\n            bg=\"transparent\"\r\n            border=\"dark\"\r\n            className=\"w-100 mx-auto\">\r\n            <BriefScoreboard timeRemaining={timeRemaining} players={players} />\r\n            <Card.Body className=\"game-border-card\">\r\n                {table ? (\r\n                    dimens.map((floor) => (\r\n                        <Fragment>\r\n                            {dimens.map((row) => (\r\n                                <Row\r\n                                    style={{\r\n                                        direction: \"ltr\",\r\n                                        marginLeft: `${GameSetting.T3D.TableRowMargings[row]}px`,\r\n                                    }}>\r\n                                    {dimens.map((column) => (\r\n                                        <Button\r\n                                            key={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            variant={normalCell}\r\n                                            className=\"game-table-cells\"\r\n                                            style={\r\n                                                table[floor][row][column] !==\r\n                                                null\r\n                                                    ? {\r\n                                                          color: players[\r\n                                                              table[floor][row][\r\n                                                                  column\r\n                                                              ]\r\n                                                          ].color,\r\n                                                      }\r\n                                                    : null\r\n                                            }\r\n                                            id={\r\n                                                floor * dimension * dimension +\r\n                                                row * dimension +\r\n                                                column\r\n                                            }\r\n                                            onClick={(event) =>\r\n                                                onEachCellClick(event)\r\n                                            }>\r\n                                            {table[floor][row][column] !==\r\n                                                null &&\r\n                                                players[\r\n                                                    table[floor][row][column]\r\n                                                ].shape}\r\n                                        </Button>\r\n                                    ))}\r\n                                </Row>\r\n                            ))}\r\n                            <br />\r\n                        </Fragment>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"text-center\"> در حال اتصال... </p>\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n","import { Component } from \"react\";\r\nimport \"../games.css\";\r\nimport {\r\n\tconnect,\r\n\tcreateSocketRequest,\r\n} from \"../../services/ws/gamePlaySocketServices\";\r\nimport withReduxDashboard from \"../../globals/redux/withReduxDashboard\";\r\nimport { withRouter } from \"react-router\";\r\nimport TableDesign from \"./TableDesign\";\r\nimport { GameSetting } from \"../../services/configs\";\r\nimport { Attention, Notify, Sorry } from \"../../tools/notification\";\r\nimport { toTimeShort } from \"../../tools/format\";\r\n\r\nclass GamePlay extends Component {\r\n\t//**** game resets on device change. fix it */\r\n\tstate = {\r\n\t\tnormalCell: \"outline-dark\",\r\n\t\tplayers: [\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-times\" aria-hidden=\"true\" />, // \"X\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"blue\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"primary\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// ID: '',\r\n\t\t\t\tshape: <i className=\"fa fa-sun-o\" aria-hidden=\"true\" />, // \"O\" : some device may not support font-awsome\r\n\t\t\t\tcolor: \"darkred\",\r\n\t\t\t\tselected: \"warning\",\r\n\t\t\t\tlineColor: \"danger\",\r\n\t\t\t\tscore: 0,\r\n\t\t\t},\r\n\t\t], // maybe use player actual user name and change this item to an object of objects?\r\n\t\tturn: 0, // start turn is decided by throwning dices\r\n\t\tdimension: 3,\r\n\t\ttable: null,\r\n\t\tmyTurn: undefined, // change this\r\n\t\tgameID: null,\r\n\t\tsocketGamePlay: undefined,\r\n\t\tplayerOnline: true,\r\n\t\ttimeRemaining: 0, //create a config\r\n\t\ttimerID: null,\r\n\t\tconnectionCheckTimerID: null,\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.cellButtons = [];\r\n\t}\r\n\r\n\tupdateGameScorebaord = () => {\r\n\t\tconst { myTurn, players } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\r\n\t\tthis.props.UpdateScoreboard({\r\n\t\t\tme: {\r\n\t\t\t\tindex: myTurn,\r\n\t\t\t\tshape: players[myTurn].shape,\r\n\t\t\t\tscore: players[myTurn].score,\r\n\t\t\t},\r\n\t\t\topp: {\r\n\t\t\t\tindex: oppTurn,\r\n\t\t\t\tshape: players[oppTurn].shape,\r\n\t\t\t\tscore: players[oppTurn].score,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tenableTimerForMyMove = (timeout = GameSetting.T3D.TurnTimeOut) => {\r\n\t\tthis.setState({ timeRemaining: timeout });\r\n\t\t//is it needed to declare timerID as state?\r\n\t\tclearInterval(this.state.timerID);\r\n\t\tconst timerID = setInterval(() => {\r\n\t\t\tconst { timeRemaining, timerID } = this.state;\r\n\t\t\tif (timeRemaining <= 0) {\r\n\t\t\t\tclearInterval(timerID);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({ timeRemaining: this.state.timeRemaining - 1 });\r\n\t\t}, 1000);\r\n\t\tthis.setState({ timerID });\r\n\t};\r\n\r\n\tupdatePlayerStates = ({ turn, xScore, oScore }) => {\r\n\t\tconst players = [...this.state.players];\r\n\t\tplayers[0].score = xScore;\r\n\t\tplayers[1].score = oScore;\r\n\t\tthis.setState({\r\n\t\t\tplayers,\r\n\t\t\tturn,\r\n\t\t});\r\n\t\tthis.updateGameScorebaord();\r\n\t};\r\n\r\n\tdisableAllTimers = () => {\r\n\t\tconst { connectionCheckTimerID, timerID } = this.state;\r\n\t\tclearTimeout(connectionCheckTimerID);\r\n\t\tclearTimeout(timerID); //move time out timer\r\n\t};\r\n\r\n\tsocketOnMessage = (response) => {\r\n\t\tconst { data } = response;\r\n\t\tconst { cmd, msg } = JSON.parse(data);\r\n\t\tif (cmd === \"START\") {\r\n\t\t\tconst startTime = toTimeShort(msg);\r\n\t\t\tAttention(`بازی راس ساعت ${startTime} آغاز شد.`);\r\n\t\t} else if (cmd === \"GAME\") {\r\n\t\t\tconst { IDs, dimension, myTurn } = msg;\r\n\t\t\tthis.setState({ dimension, myTurn });\r\n\t\t\tconst opponentID = IDs[Number(!myTurn)];\r\n\t\t\tconst { opponent, LoadThisPlayer } = this.props;\r\n\t\t\tif (!opponent && opponentID)\r\n\t\t\t\t//if opponent is not null -> means this was called before and there's no need to run again\r\n\t\t\t\tLoadThisPlayer(opponentID);\r\n\t\t} else if (cmd === \"LOAD\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tconst { table } = msg;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttable,\r\n\t\t\t});\r\n\t\t\tthis.updateGameScorebaord();\r\n\t\t} else if (cmd === \"TIMER\") {\r\n\t\t\t//you can calculate request respone time -> then minimize it from tiem sent by server -> to gain acurate time\r\n\t\t\t//but its real neccessary, Math.floor on the server side does this nearly\r\n\t\t\t//but for accurate approach remember: remove Math.floor from server side\r\n\t\t\tconsole.log(\"time updated: \", msg);\r\n\t\t\tthis.setState({ timeRemaining: msg });\r\n\t\t\tclearTimeout(this.state.timerID); //clear move time out timers, though their disabled before, this is for assurance\r\n\t\t\tthis.enableTimerForMyMove(msg);\r\n\t\t} else if (cmd === \"SCORES\") this.updatePlayerStates(msg);\r\n\t\telse if (cmd === \"UPDATE\") {\r\n\t\t\tconst { room } = this.props;\r\n\t\t\tconst { dimension } = this.state;\r\n\t\t\tconst cellID = Number(msg.nextMove);\r\n\r\n\t\t\t//*************** */\r\n\t\t\t//is this needed to check the move in client? considering that complete check has been made in client\r\n\t\t\t//and consder that: checking move in client may cause some bugs\r\n\t\t\t//for ex: new move is sent -> and 'cause of some error the cell is not empty\r\n\t\t\t//turn is not updated and this player can not make new moves to recieve server's table!!!\r\n\t\t\tthis.verifyAndApplyTheMove(\r\n\t\t\t\tthis.getCellCoordinates(cellID, dimension),\r\n\t\t\t\tthis.cellButtons[cellID]\r\n\t\t\t);\r\n\t\t\t//wrap it up this part of UPDATE and LOAD in a method\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\r\n\t\t\tthis.cellButtons[cellID].focus();\r\n\t\t\tthis.updateGameScorebaord();\r\n\r\n\t\t\t// now inform the server that the move is recieved\r\n\t\t\t//force connect it?\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"move_recieved\", room.name, true)\r\n\t\t\t);\r\n\t\t\t// server time out is set and now setInterval for this client to show how much time left\r\n\t\t\tthis.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"MOVE_MISSED\") {\r\n\t\t\tconst { myTurn } = this.state;\r\n\t\t\t//msg --> forced set turn\r\n\t\t\tthis.setState({ turn: msg });\r\n\t\t\tif (msg === myTurn) this.enableTimerForMyMove();\r\n\t\t} else if (cmd === \"NOT_AUTHORIZED\") {\r\n\t\t\tSorry(\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\");\r\n\t\t\t// signOut();\r\n\t\t} else if (cmd === \"END\") {\r\n\t\t\tthis.updatePlayerStates(msg);\r\n\t\t\tthis.endThisGame();\r\n\t\t\tthis.disableAllTimers();\r\n\t\t} else if (cmd === \"CLOSE\") {\r\n\t\t\tAttention(\r\n\t\t\t\t\"بدلیل حاضر نبودن هیچ کدام از بازیکینان، بازی شما کنسل شد\"\r\n\t\t\t);\r\n\t\t\tthis.closeThisGame();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"wrong socket request\");\r\n\t\t}\r\n\t};\r\n\r\n\tforceConnectWS = async (nextJob) => {\r\n\t\tconst { room } = this.props;\r\n\r\n\t\ttry {\r\n\t\t\tlet socket = await connect(room.name, room.type);\r\n\t\t\tsocket.onmessage = this.socketOnMessage;\r\n\t\t\tthis.setState({ socketGamePlay: socket });\r\n\t\t\tif (nextJob) nextJob();\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// **********************\r\n\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\tsetTimeout(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconsole.log(\"rconnecting from GamePlay\");\r\n\t\t\t\t\tthis.forceConnectWS(nextJob);\r\n\t\t\t\t},\r\n\t\t\t\tnextJob ? 1000 : 3000\r\n\t\t\t);\r\n\t\t\t//if there is a next job --> then player is sending a move or something important and\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in serimport { LoadPlayer } from './../../globals/redux/actions/player';\r\n\t\t\t//time out needs to be called quicker 'cause players have timeout in server for sending moves\r\n\t\t}\r\n\t};\r\n\r\n\tenableConnectionCheckTimer = () => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (window.navigator.onLine) {\r\n\t\t\t\tif (!this.state.playerOnline) {\r\n\t\t\t\t\t//player JUST became online\r\n\t\t\t\t\tthis.setState({ playerOnline: true }); // toggle online status\r\n\t\t\t\t\tthis.forceConnectWS(null); // reconnect to gamePlayWebSocket\r\n\t\t\t\t}\r\n\t\t\t} else if (this.state.playerOnline) {\r\n\t\t\t\t//player JUST became offline\r\n\t\t\t\tthis.setState({ playerOnline: false });\r\n\t\t\t}\r\n\t\t}, 2500); //2.5 sec is it ok?\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.cellButtons = document.getElementsByClassName(\"game-table-cells\"); // pay attension to searched className! may cause an error\r\n\r\n\t\tconst { room } = this.props;\r\n\t\tconst { myTurn } = this.state;\r\n\t\tthis.setState({ dimension: room.type });\r\n\r\n\t\tthis.forceConnectWS(() => {\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"load\", room.name, null)\r\n\t\t\t);\r\n\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\tcreateSocketRequest(\"mytimer\", room.name, myTurn)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tconnectionCheckTimerID: this.enableConnectionCheckTimer(),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.disableAllTimers();\r\n\t}\r\n\tgetCellCoordinates = (cellID, dimen) => {\r\n\t\tconst cellFloor = Math.floor(cellID / (dimen * dimen));\r\n\t\tconst onFloorId = cellID % (dimen * dimen);\r\n\t\tconst cellRow = Math.floor(onFloorId / dimen);\r\n\t\tconst cellColumn = onFloorId % dimen;\r\n\t\t// just test a random id to see how above formula works!\r\n\t\treturn { floor: cellFloor, row: cellRow, column: cellColumn };\r\n\t};\r\n\tonEachCellClick = (event) => {\r\n\t\tconst { dimension, turn, timerID } = this.state;\r\n\t\tconst {opponent, room } = this.props;\r\n\t\tif (opponent) {\r\n\t\t\ttry {\r\n\t\t\t\tconst selectedCellButton = event.target;\r\n\r\n\t\t\t\t//this is just for when the connection is not automatically came back, so the user via clicking cells can initiate connection\r\n\t\t\t\tif (this.state.turn !== this.state.myTurn) {\r\n\t\t\t\t\t//is this needed really?\r\n\t\t\t\t\tthis.forceConnectWS(null);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst cell = this.getCellCoordinates(\r\n\t\t\t\t\tselectedCellButton.id,\r\n\t\t\t\t\tdimension\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (this.verifyAndApplyTheMove(cell, selectedCellButton)) {\r\n\t\t\t\t\t//send move to WebSocket Server\r\n\r\n\t\t\t\t\tthis.setState({ turn: (turn + 1) % 2 });\r\n\t\t\t\t\tthis.forceConnectWS(() => {\r\n\t\t\t\t\t\tthis.state.socketGamePlay.send(\r\n\t\t\t\t\t\t\tcreateSocketRequest(\r\n\t\t\t\t\t\t\t\t\"move\",\r\n\t\t\t\t\t\t\t\troom.name,\r\n\t\t\t\t\t\t\t\tselectedCellButton.id\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclearInterval(timerID);\r\n\t\t\t\t\tthis.setState({ timeRemaining: 0 });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\t//load again here?\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tverifyAndApplyTheMove = (cell, cellButton) => {\r\n\t\tconst { players, turn, normalCell } = this.state;\r\n\t\tlet tempTable = [...this.state.table];\r\n\t\tif (tempTable[cell.floor][cell.row][cell.column] === null) {\r\n\t\t\ttempTable[cell.floor][cell.row][cell.column] = turn; //maybe its better to use players actual Id huh?\r\n\t\t\tthis.setState({ table: tempTable });\r\n\t\t\t// cellButton.value = players[turn].shape;\r\n\t\t\t// cellButton.style.color = players[turn].color;\r\n\t\t\tcellButton.className = `game-table-cells btn btn-${players[turn].selected}`;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcellButton.className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t}, 1000);\r\n\t\t\t// time to inspect the new cell:\r\n\t\t\tthis.inspectAreaAroundTheCell(cell.floor, cell.row, cell.column);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tinspectAreaAroundTheCell = (floor, row, column) => {\r\n\t\t// inpect the table in all ways around a selected cell (new selected one), to update points and color the score routes\r\n\t\t// is it needed to write a inspectAll method ?\r\n\t\tconst { players, table, dimension } = this.state;\r\n\t\tconst playerInTheCell = table[floor][row][column];\r\n\t\tlet rowCount = 0,\r\n\t\t\tcolumnCount = 0,\r\n\t\t\tfloorMainDiagCount = 0,\r\n\t\t\tfloorSideDiagCount = 0;\r\n\t\tlet tableMainDiagCount = 0,\r\n\t\t\ttableSideDiagCount = 0,\r\n\t\t\ttableAltitudeCount = 0;\r\n\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\tif (table[floor][row][i] === playerInTheCell) rowCount++; // inspect in a row\r\n\t\t\tif (table[floor][i][column] === playerInTheCell) columnCount++; // inspect in a column\r\n\t\t\tif (table[i][row][column] === playerInTheCell) tableAltitudeCount++; // inspect in a altitude line\r\n\t\t\tif (row === column) {\r\n\t\t\t\tif (table[floor][i][i] === playerInTheCell)\r\n\t\t\t\t\tfloorMainDiagCount++; // inspect in a 2D main diagonal line through the cell's floor\r\n\t\t\t\tif (row === floor && table[i][i][i] === playerInTheCell)\r\n\t\t\t\t\ttableMainDiagCount++; // inspect in a 3D main diagonal line through the whole table\r\n\t\t\t}\r\n\t\t\tif (row + column + 1 === dimension) {\r\n\t\t\t\tif (table[floor][i][dimension - i - 1] === playerInTheCell)\r\n\t\t\t\t\tfloorSideDiagCount++; // inpect in a 2D side Diagonal line through the cell's floor\r\n\t\t\t\tif (\r\n\t\t\t\t\trow === floor &&\r\n\t\t\t\t\ttable[i][i][dimension - i - 1] === playerInTheCell\r\n\t\t\t\t)\r\n\t\t\t\t\ttableSideDiagCount++; // inspect in a 3D side diagonal line through the whole table\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// now inspect wether a line has been made and take action for it\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\trowCount,\r\n\t\t\tfloor * dimension * dimension + row * dimension,\r\n\t\t\t1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tcolumnCount,\r\n\t\t\tfloor * dimension * dimension + column,\r\n\t\t\tdimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorMainDiagCount,\r\n\t\t\tfloor * dimension * dimension,\r\n\t\t\tdimension + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\tfloorSideDiagCount,\r\n\t\t\tfloor * dimension * dimension + (dimension - 1),\r\n\t\t\tdimension - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableMainDiagCount,\r\n\t\t\t0,\r\n\t\t\tdimension * (dimension + 1) + 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableSideDiagCount,\r\n\t\t\tdimension - 1,\r\n\t\t\tdimension * (dimension + 1) - 1,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t\tthis.connectTheScoreLines(\r\n\t\t\ttableAltitudeCount,\r\n\t\t\trow * dimension + column,\r\n\t\t\tdimension * dimension,\r\n\t\t\tplayers[playerInTheCell],\r\n\t\t\tdimension\r\n\t\t);\r\n\t};\r\n\r\n\t// method below: checks each possible line(according to the condition that user gives it),\r\n\t// if the line is made colorifies the line and returns 1 ( as one single score for each line checked ), otherwise returns 0\r\n\tconnectTheScoreLines = (count, firstCell, step, player, dimension) => {\r\n\t\tconst { normalCell } = this.state;\r\n\t\tif (count === dimension) {\r\n\t\t\tfor (let i = 0; i < dimension; i++) {\r\n\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t].className = `game-table-cells btn btn-${player.lineColor}`;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.cellButtons[\r\n\t\t\t\t\t\tfirstCell + i * step\r\n\t\t\t\t\t].className = `game-table-cells btn btn-${normalCell}`;\r\n\t\t\t\t}, 1000 + i * 100);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tcloseThisGame = () => {\r\n\t\tthis.state.socketGamePlay.close();\r\n\t\tthis.setState({ socketGamePlay: null });\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.CleanScoreboard();\r\n\t\t\tthis.props.ResetOpponent();\r\n\t\t\tthis.props.ExitRoom();\r\n\t\t\tthis.props.history.replace(\"/\"); // in competition mode must be send back to competition page\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tendThisGame = () => {\r\n\t\tconst { players, myTurn } = this.state;\r\n\t\tconst oppTurn = Number(!myTurn);\r\n\t\t//NOTE: u can deliver this message to socket global to make sure toast shows all the tie but its no need really :|\r\n\t\tif (players[myTurn].score > players[oppTurn].score)\r\n\t\t\tNotify(\"شما برنده شدید و سه امتیاز کسب کردید\");\r\n\t\telse if (players[myTurn].score === players[oppTurn].score)\r\n\t\t\tNotify(\"شما مساوی شدید و یک امتیاز کسب کردید\");\r\n\t\telse Notify(\"شما باختید\");\r\n\t\t//reset everything:\r\n\t\tthis.closeThisGame();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<TableDesign\r\n\t\t\t\tdimension={this.state.dimension}\r\n\t\t\t\tplayers={this.state.players}\r\n\t\t\t\ttable={this.state.table}\r\n\t\t\t\ttimeRemaining={this.state.timeRemaining}\r\n\t\t\t\tonEachCellClick={this.onEachCellClick}\r\n\t\t\t\tnormalCell={this.state.normalCell}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withReduxDashboard(GamePlay));\r\n\r\n//another way to check online / offline status :\r\n// initiateGameTimer = () => {\r\n//     setInterval(() => {\r\n//         if (window.navigator.onLine) {\r\n//             if (this.connectionLost) {\r\n//                 console.log(\"connected\");\r\n//                 this.connectionLost = false;\r\n//                 this.forceConnectWS(null);\r\n//             }\r\n//         } else {\r\n//             console.log(\"dissconnected\");\r\n//             this.connectionLost = true;\r\n//         }\r\n//         /*this.isOnline(\r\n//             () => {\r\n//                 if (this.connectionLost) {\r\n//                     console.log(\"connected\");\r\n//                     this.connectionLost = false;\r\n//                     this.forceConnectWS(null);\r\n//                 }\r\n//             },\r\n//             () => {\r\n//                 console.log(\"dissconnected\");\r\n//                 this.connectionLost = true;\r\n//             }\r\n//         );*/\r\n//     }, 1000);\r\n// };\r\n\r\n// /*    isOnline = (success, failure) => {\r\n//     var xhr = XMLHttpRequest\r\n//         ? new XMLHttpRequest()\r\n//         : new window.ActiveXObject(\"Microsoft.XMLHttp\");\r\n//     xhr.onload = function () {\r\n//         if (success instanceof Function) {\r\n//             success();\r\n//         }\r\n//     };\r\n//     xhr.onerror = function () {\r\n//         if (failure instanceof Function) {\r\n//             failure();\r\n//         }\r\n//     };\r\n//      xhr.open(\"GET\", \"https://t3dweb.herokuapp.com/users\", true);//edit this ******************************\r\n//      xhr.send();\r\n// }; */\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport LoadingBar from '../commons/LoadingBar';\r\nimport { Notify } from \"../tools/notification\";\r\nimport { TriggerRandomSearch } from \"../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../globals/redux/actions/game\";\r\nconst SingleGame = ({ friendlyGame }) => {\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [gameType, setGameType] = useState(4);\r\n    const me = useSelector((state) => state.me);\r\n    const [searching, setSearching] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onStartGameClick = (event) => {\r\n        event.preventDefault();\r\n        if (!me) {\r\n            Notify(\"ابتدا باید وارد حساب کاربری خود شوید\");\r\n            return;\r\n        }\r\n        if (friendlyGame) dispatch(EnterRoom({ name: roomName, type: gameType }));\r\n        // random game:\r\n        else {\r\n            dispatch(EnterRoom({ name: null, type: gameType }));\r\n            dispatch(TriggerRandomSearch());\r\n            setSearching(true);\r\n        }\r\n    };\r\n\r\n    //on destroy\r\n    useEffect(() => {\r\n        return () => {\r\n            setSearching(false); //make sure preloader turns off\r\n         }\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <LoadingBar loading={searching} />\r\n            <hr />\r\n            <Form onSubmit={(event) => onStartGameClick(event)}>\r\n                <Form.Group className=\"form-inline\">\r\n                    <Form.Label className=\"w-25\">ابعاد جدول</Form.Label>\r\n                    <InputGroup\r\n                        style={{\r\n                            border: \"1px solid orange\",\r\n                            borderRadius: \"5px\",\r\n                            padding: \"2px\",\r\n                        }}>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"3\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 3}\r\n                                onChange={() => setGameType(3)}\r\n                            />\r\n                            <InputGroup.Text>3 * 3 * 3</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"4\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 4}\r\n                                onChange={() => setGameType(4)}\r\n                            />\r\n                            <InputGroup.Text>4 * 4 * 4</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Prepend className=\"mx-5\">\r\n                            <InputGroup.Radio\r\n                                value=\"5\"\r\n                                name=\"tableDimension\"\r\n                                checked={gameType === 5}\r\n                                onChange={() => setGameType(5)}\r\n                            />\r\n                            <InputGroup.Text>5 * 5 * 5</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                {friendlyGame && (\r\n                    \r\n                    <Form.Group className=\"mt-3 form-inline\">\r\n                        \r\n                        <Form.Label className=\"w-25\">نام روم</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"w-75 text-left bg-transparent\"\r\n                            placeholder=\"Room Name\"\r\n                            value={roomName}\r\n                            required=\"required\"\r\n                            onChange={(event) =>\r\n                                setRoomName(event.target.value)\r\n                            }\r\n                        />\r\n                    </Form.Group>\r\n                )}\r\n                <hr />\r\n                <Button type=\"submit\" className=\"mt-4\" block variant=\"success\">\r\n                    <i\r\n                        className={`fa ${\r\n                            friendlyGame ? \"fa-handshake-o\" : \"fa-search\"\r\n                        } px-2`}\r\n                        aria-hidden=\"true\"></i>\r\n                    {friendlyGame ? \"ارسال درخواست\" : \"جستجو\"}\r\n                </Button>\r\n            </Form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SingleGame;\r\n","import { Alert, Badge, Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst CompetitionSummary = ({ title, summary }) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" variant=\"info\">\r\n                    <Alert.Heading className=\"text-center\">\r\n                        <Badge variant=\"success p-2\" >\r\n                            {title}\r\n                        </Badge>\r\n                    </Alert.Heading>\r\n\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                    <p>{summary}</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Alert className=\"text-right w-100\" pill=\"true\" variant=\"info\">\r\n                    <p>تعداد شرکت کنندگان : 00000000</p>\r\n                    <p>نکات دیگر</p>\r\n                </Alert>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col>\r\n                    <Button block variant=\"outline-success\">شرکت در مسابقه</Button>\r\n                </Col>\r\n                <Col>\r\n                <Button block variant=\"outline-secondary\">بازیکنان حاضر</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionSummary;\r\n","import { Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport \"./competitions.css\";\r\nimport CompetitionSummary from \"./CompetitionSummary\";\r\n\r\nconst CompetitionsMain = () => {\r\n    return (\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n            <hr />\r\n\r\n            <Row>\r\n                <Col className=\"competition-menu-body\" sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"first\">\r\n                                جام حذفی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"second\">\r\n                                لیگ امتیازی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"third\">\r\n                                بازی شرطی\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"forth\">\r\n                                جدول رندوم\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link className=\"text-right\" eventKey=\"fifth\">\r\n                                و غیره\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Col>\r\n                {/* <div style={{borderLeft: '1px solid gray', height:'500px'}}></div> */}\r\n                <Col sm={9}>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"first\">\r\n                            <CompetitionSummary\r\n                                title=\"جام حذفی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"second\">\r\n                            <CompetitionSummary\r\n                                title=\"لیگ امتیازی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"third\">\r\n                            <CompetitionSummary\r\n                                title=\"بازی شرطی\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"forth\">\r\n                            <CompetitionSummary\r\n                                title=\"جدول رندوم\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"fifth\">\r\n                            <CompetitionSummary\r\n                                title=\"و غیره\"\r\n                                summary=\"توضیحات این نوع مسابقه\"\r\n                            />\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Col>\r\n            </Row>\r\n        </Tab.Container>\r\n    );\r\n};\r\n\r\nexport default CompetitionsMain;\r\n","import GamePlay from \"./gameplay/GamePlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleGame from \"./SingleGame\";\r\nimport { Tab, Tabs, Card, Fade } from \"react-bootstrap\";\r\nimport { Fragment } from \"react\";\r\nimport CompetitionsMain from \"./competitions/CompetitionsMain\";\r\n\r\nconst GameDeck = () => {\r\n    const room = useSelector((state) => state.room);\r\n\r\n    return (\r\n        <Fragment>\r\n            {room.name ? (\r\n                <GamePlay />\r\n            ) : (\r\n                <Card\r\n                    border=\"secondary\"\r\n                    bg=\"transparent\"\r\n                    className=\"game-deck-card\">\r\n                    <Card.Body>\r\n                        <Tabs\r\n                            defaultActiveKey=\"randomGame\"\r\n                            transition={false}\r\n                            id=\"noanim-tab-example\"\r\n                            variant=\"pills\"\r\n                            // transition={Fade}\r\n                            className=\"mb-3\">\r\n                            \r\n                            <Tab eventKey=\"randomGame\" title=\"بازی تصادفی\">\r\n                                <SingleGame friendlyGame={false} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"competitions\" title=\"مسابقات\">\r\n                                <CompetitionsMain />\r\n                            </Tab>\r\n                            <Tab eventKey=\"friendlyGame\" title=\"بازی با دوستان\">\r\n                                <SingleGame friendlyGame={true} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GameDeck;\r\n","import './info.css'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameGuide = () => {\r\n    return ( \r\n        <Card border=\"warning\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">راهنمای بازی</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default GameGuide;","import { Card } from 'react-bootstrap';\r\nimport './info.css'\r\n\r\nconst ContactUs = () => {\r\n    return ( \r\n        <Card border=\"dark\" className=\"simple-single-card\" >\r\n            <Card.Header className=\"text-center\">اطلاعات تماس</Card.Header>\r\n            <Card.Body className=\"text-right\">\r\n                <Card.Text>دانشگاه علم و صنعت ایران</Card.Text>\r\n                <Card.Text>E-mail: <a href=\"https://mail.google.com\">thcplusplus@gmail.com</a></Card.Text>\r\n                <Card.Text>Phone Number: 0000000000000</Card.Text>\r\n                <Card.Text>اطلاعات تماس استاد</Card.Text>\r\n                <Card.Text>instagram: ......</Card.Text>\r\n                <Card.Text>blah blah blah</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default ContactUs;","import \"./scores.css\";\r\nimport { Component } from \"react\";\r\nimport AllScores from \"./AllScores\";\r\nimport gameServices from \"../../services/http/gameServices\";\r\nimport Configs from \"../../services/configs\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nclass ScoresTable extends Component {\r\n    state = {\r\n        liveScores: [],\r\n        finalScores: [],\r\n        showLiveOnes: false,\r\n        loading: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log('CHecking prop: ', this.props.Device);\r\n        // get all game results , live or final, handling promises\r\n        // client and server side for this Module seriously need to be edited\r\n        (async () => {\r\n            this.setState({ loading: true }); // use preloader here?\r\n            const { data, status } = await gameServices.getAllGames();\r\n            if (status === Configs.Status.Successful) return data.allGames;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                result = result.reverse();\r\n                this.setState({\r\n                    liveScores: result.filter((game) => game.isLive),\r\n                    finalScores: result.filter((game) => !game.isLive),\r\n                    loading: false,\r\n                });\r\n                //EDIT EDIT EDIT\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ finalScores: [], loading: false });\r\n            });\r\n    }\r\n\r\n    btnShowLiveScores = () => {\r\n        this.setState({ showLiveOnes: true });\r\n    };\r\n\r\n    btnShowFinalScores = () => {\r\n        this.setState({ showLiveOnes: false });\r\n    };\r\n\r\n    \r\n    render() {\r\n       \r\n        // game replay? is it a good idea DataBase Size-Wise ? ===> if true: see 1st page of the notebook\r\n        /* add a NextGames button maybe? (گزینه بازی های اینده) */\r\n        let { liveScores, finalScores, showLiveOnes } = this.state;\r\n\r\n        // DESIGN : USE <Tabs> ???\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowLiveScores}>\r\n                            نتایج زنده\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button\r\n                            variant={\r\n                                !showLiveOnes\r\n                                    ? \"outline-success\"\r\n                                    : \"outline-primary\"\r\n                            }\r\n                            className=\"scores-mode-select-button\"\r\n                            onClick={this.btnShowFinalScores}>\r\n                            نتایج نهایی\r\n                            <i\r\n                                className=\"fa fa-play-circle px-3\"\r\n                                aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* this single column is to make mode select buttons and Allscores same width */}\r\n                        <AllScores\r\n                            scores={showLiveOnes ? liveScores : finalScores}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScoresTable;\r\n","import { Button, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Component, Fragment } from \"react\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Sorry } from \"./../tools/notification\";\r\n\r\nclass ModalSignIn extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\tstate = {\r\n\t\tshowModal: false,\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tonCloseClick = () => this.setState({ showModal: false });\r\n\tonShowClick = () => this.setState({ showModal: true });\r\n\r\n\tonSignInSubmitted = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst { studentID, password } = this.state;\r\n\t\tconst user = { studentID: Number(studentID), password };\r\n\t\ttry {\r\n\t\t\tconst { status, data } = await userServices.signIn(user);\r\n\t\t\tif (status === Configs.Status.Successful) {\r\n\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t// check nonserver errors\r\n\t\t\tthis.setState({ password: \"\" });\r\n\t\t\tif (!Configs.Status.isErrorExpected(err))\r\n\t\t\t\tSorry(\".ورود با مشکل رو به رو شد. لطفا دوباره تلاش کتنید.\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\tonForgotPasswordClick = () => {};\r\n\r\n\trender() {\r\n\t\tconst { showModal, studentID, password, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Button variant=\"outline-primary\" onClick={this.onShowClick}>\r\n\t\t\t\t\t<i className=\"fa fa-user px-2\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\tورود کاربران\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\tonHide={this.onCloseClick}>\r\n\t\t\t\t\t<Modal.Header closeButton></Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tclassName=\"m-4 text-right\"\r\n\t\t\t\t\t\t\tonSubmit={(event) => this.onSignInSubmitted(event)}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3 form-inline\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\tclassName=\"mb-3 form-inline\"\r\n\t\t\t\t\t\t\t\tcontrolId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\t\tرمز عبور\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-75 text-left\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-sign-in px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tورود\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-50\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-warning\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.onForgotPasswordClick}>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-recycle px-2\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t\t\tفراموشی رمز\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(ModalSignIn);\r\n","import React, { Component } from \"react\";\r\nimport ModalSignIn from \"./ModalSignIn\";\r\nimport \"./users.css\";\r\nimport userServices from \"../services/http/userServices\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoadingBar from \"../commons/LoadingBar\";\r\nimport Configs, { browserStorage } from \"../services/configs\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { Sorry, OK, Attention } from \"../tools/notification\";\r\n\r\nclass SignUp extends Component {\r\n\t// *********************Objectives***********************\r\n\t// 1. handle errors particularly\r\n\t// 2. first and last name must be persian text so make the direction correct and force persian chars\r\n\tstate = {\r\n\t\tstudentID: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t\tfirstname: \"\",\r\n\t\tlastname: \"\",\r\n\t\temail: \"\",\r\n\t\tloading: false,\r\n\t};\r\n\r\n\tcheckConfirmPassword = (event) => {\r\n\t\tthis.setState({ confirmPassword: event.target.value });\r\n\t\tif (this.state.password !== event.target.value) {\r\n\t\t\tevent.target.setCustomValidity(\r\n\t\t\t\t\"تایید رمز عبور باید با خود رمز عبور مطابقت کامل داشته باشد\"\r\n\t\t\t);\r\n\t\t\t//console.log(password, confirmPassword);\r\n\t\t} else event.target.setCustomValidity(\"\");\r\n\t};\r\n\tonSignUpSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t} = this.state;\r\n\t\tif (firstname.trim().length < 3 || lastname.trim().length < 3) {\r\n\t\t\tSorry(\"نام و نام خانوادگی باید حداقل شام سه حرف فارسی باشد\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tfirstname: firstname.trim(),\r\n\t\t\t\tlastname: lastname.trim(),\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.setState({ loading: true });\r\n\t\t\t\tconst newUser = {\r\n\t\t\t\t\tstudentID: Number(studentID),\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tfullname: (firstname + \" \" + lastname).replace(/\\s+/g, \" \"), // correct? (iterative?)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst { status, data } = await userServices.signUp(newUser);\r\n\r\n\t\t\t\tif (status === Configs.Status.CreatedSuccessfully) {\r\n\t\t\t\t\t//console.log(data);\r\n\t\t\t\t\tOK(\"ثبت نام با موفقیت انجام شد\");\r\n\t\t\t\t\tbrowserStorage.save(data.token);\r\n\t\t\t\t\tthis.props.history.replace(\"/\");\r\n\t\t\t\t\t// this.props.history.replace('/signIn')\r\n\t\t\t\t\t// ******* change server to return user token and auto sign in\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\tif (err.response.status === Configs.Status.Conflict) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"اگر رمز عبور خود را فراموش کرده اید، از گزینه بازیابی رمز عبور در صفحه ی ورود استفاده نمایید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (!Configs.Status.isErrorExpected(err)) {\r\n\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\"ثبت نام با مشکل رو به رو شد. لطفا دوباره تلاش کتنید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSorry(\"رمز عبورها مطابقت ندارند\");\r\n\t\t}\r\n\t\tthis.setState({ loading: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstudentID,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Card border=\"success\" className=\"sign-up-card\">\r\n\t\t\t\t<LoadingBar loading={loading} />\r\n\t\t\t\t<Card.Header className=\"bg-transparent text-center border-success\">\r\n\t\t\t\t\tفرم ثبت نام\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Form onSubmit={(event) => this.onSignUpSubmit(event)}>\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">نام</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tvalue={firstname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tfirstname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tنام خانوادگی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tpattern=\"[آ-ی ]{3,}\" // persian characters and space\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"نام خانوادگی باید با حروف فارسی و با حداقل طول سه حرف باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tvalue={lastname}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tlastname: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tشماره دانشجویی\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tpattern=\"[0-9]{8}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"شماره دانشجویی باید یک عدد 8 رقمی باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Student ID\"\r\n\t\t\t\t\t\t\t\tvalue={studentID}\r\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tstudentID: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">ایمیل</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"ورودی باید فرمت معتبر ایمیل را رعایت کرده و حداقل 6 کاراکتر باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({ email: e.target.value })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">رمز عبور</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tpattern=\".{6,15}\"\r\n\t\t\t\t\t\t\t\tonInput={(e) => e.target.setCustomValidity(\"\")}\r\n\t\t\t\t\t\t\t\tonInvalid={(e) =>\r\n\t\t\t\t\t\t\t\t\te.target.setCustomValidity(\r\n\t\t\t\t\t\t\t\t\t\t\"رمز عبور باید حداقل 6 کاراکتر و حداکثر 15 کاراکتر داشته باشد\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t\t\t\t<Form.Label className=\"w-25\">\r\n\t\t\t\t\t\t\t\tتایید رمز عبور\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"sign-up-textbox w-75\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\tonChange={(event) =>\r\n\t\t\t\t\t\t\t\t\tthis.checkConfirmPassword(event)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-block mt-4\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"fa fa-user-plus px-2\"\r\n\t\t\t\t\t\t\t\taria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\tثبت نام\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"border-primary bg-transparent\">\r\n\t\t\t\t\tاگر قبلا ثبت نام کردی، به صفحه ی <ModalSignIn /> برو !\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","const SinglePlayerCard = ({rowNumber, name, points, wins, loses, draws }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{rowNumber}</th>\r\n            <td>{name}</td>\r\n            <td>{points}</td>\r\n            <td>{wins}</td>\r\n            <td>{loses}</td>\r\n            <td>{draws}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SinglePlayerCard;\r\n","import { Card } from \"react-bootstrap\";\r\nimport SinglePlayerCard from \"./SinglePlayerCard\";\r\n\r\nconst AllPlayers = ({ players }) => {\r\n    return (\r\n        <Card border=\"dark\" style={{ width: \"100%\", borderRadius: \"5px\" }}>\r\n            <Card.Header className=\"text-center\">رده بندی</Card.Header>\r\n            <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                <thead className=\"bg-info\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">نام بازیکن</th>\r\n                        <th scope=\"col\">امتیاز</th>\r\n                        <th scope=\"col\">تعداد برد</th>\r\n                        <th scope=\"col\">تعداد باخت</th>\r\n                        <th scope=\"col\">تعداد تساوی</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <SinglePlayerCard\r\n                            key={player.userID}\r\n                            rowNumber={\r\n                                players.findIndex(\r\n                                    (p) => p.userID === player.userID\r\n                                ) + 1\r\n                            }\r\n                            name={player.fullname}\r\n                            points={player.records.points}\r\n                            wins={player.records.wins}\r\n                            loses={player.records.loses}\r\n                            draws={player.records.draws}></SinglePlayerCard>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AllPlayers;\r\n","import { Component } from \"react\";\r\nimport AllPlayers from \"./AllPlayers\";\r\nimport userServices from \"../../services/http/userServices\";\r\nimport LoadingBar from \"../../commons/LoadingBar\";\r\nimport Configs from '../../services/configs';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nclass Rankings extends Component {\r\n    state = { players: [], loading: false };\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            this.setState({ loading: true });\r\n            const { data, status } = await userServices.getAllPlayers();\r\n            if (status === Configs.Status.Successful) return data.players;\r\n            return [];\r\n        })()\r\n            .then((result) => {\r\n                let tempPlayers = [...result];\r\n                this.setState({\r\n                    players: tempPlayers.sort( //sort priorities: 1. more points 2. more wins 3. less loses\r\n                        (p1, p2) =>\r\n                            p2.records.points - p1.records.points ||\r\n                            p2.records.wins - p1.records.wins ||\r\n                            p1.records.loses - p2.records.loses\r\n                    ),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                //******* handle errors */\r\n                // console.log(err);\r\n                this.setState({ players: [], loading: false });\r\n            });\r\n    }\r\n    render() {\r\n        const { players, loading } = this.state;\r\n        return (\r\n            <Row className=\"mx-auto mt-3\">\r\n                {loading ? <LoadingBar loading={loading} /> : null}\r\n                <Row className=\"w-100 mx-auto\">\r\n                    <AllPlayers players={players} />\r\n                </Row>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rankings;\r\n","\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Routes } from '../services/configs';\r\nimport ProfilePanelLayout from './../layouts/ProfilePanelLayout';\r\nimport MyGamesAndFriends from './../profile/friendgames/MyGamesAndFriends';\r\nimport NoticeManager from './../profile/NoticeManager';\r\nimport ChatRoom from './../chat/ChatRoom';\r\nimport AccountCredentials from './../profile/AcountCredentials';\r\nimport MainLayout from '../layouts/MainLayout';\r\nimport GameDeck from './../games/GameDeck';\r\nimport GameGuide from './../informations/GameGuide';\r\nimport ContactUs from './../informations/ContactUs';\r\nimport ScoresTable from './../tables/scores/ScoresTable';\r\nimport SignUp from '../users/SignUp';\r\nimport Rankings from './../tables/rankings/Rankings';\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${Routes.Client.Profile}/:path?`} exact>\r\n\t\t\t\t<ProfilePanelLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.MyGamesAndFriends}>\r\n\t\t\t\t\t\t\t<MyGamesAndFriends />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Notices}>\r\n\t\t\t\t\t\t\t<NoticeManager />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.ChatRoom}>\r\n\t\t\t\t\t\t\t<ChatRoom />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route exact path={Routes.Client.Profile}>\r\n\t\t\t\t\t\t\t<AccountCredentials />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</ProfilePanelLayout>\r\n\t\t\t</Route>\r\n\t\t\t<Route>\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={Routes.Client.SignUp}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameDeck}>\r\n\t\t\t\t\t\t\t<GameDeck />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.Rankings}>\r\n\t\t\t\t\t\t\t<Rankings />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.GameGuide}>\r\n\t\t\t\t\t\t\t<GameGuide />/\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path={Routes.Client.ContactUs}>\r\n\t\t\t\t\t\t\t<ContactUs />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route path={Routes.Client.Root} exact>\r\n\t\t\t\t\t\t\t<ScoresTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default MainRouter;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { MessagePushed } from \"../globals/redux/actions\";\r\nimport { browserStorage, Routes } from \"../services/configs\";\r\nimport { Attention, Invitation, NewMsg } from \"./notification\";\r\nimport jwtdecode from \"jwt-decode\";\r\nimport { AcceptInvitation } from \"../globals/redux/actions/tools\";\r\nimport { RejectGameInvitation } from \"./../globals/redux/actions/tools\";\r\nimport GlobalContext from \"../globals/state/GlobalContext\";\r\n\r\nconst NotificationCenter = ({ location }) => {\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst { pathname } = location;\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst dispatch = useDispatch();\r\n\tconst context = useContext(GlobalContext);\r\n\t// check TOKEN EXPIRE time and notify user before he starts a game to re login\r\n\tconst { gameInvitation } = tools;\r\n\tconst { goTo } = context;\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tif (message && message.recieved && !message.recieved.pushed) {\r\n\t\t\t\tif (pathname !== Routes.Client.ChatRoom) {\r\n\t\t\t\t\tif (pathname !== Routes.Client.GameDeck) {\r\n\t\t\t\t\t\t// then just only push when message sender is the opponent\r\n\t\t\t\t\t\t//return;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tNewMsg(message.recieved, () =>\r\n\t\t\t\t\t\tgoTo(Routes.Client.ChatRoom)\r\n\t\t\t\t\t);\r\n\t\t\t\t\t//prevent recieved message from getting stuck in notificatioon loop\r\n\t\t\t\t\tdispatch(MessagePushed());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameInvitation) {\r\n\t\t\t\tInvitation(\r\n\t\t\t\t\tgameInvitation,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(AcceptInvitation(gameInvitation.ID, gameInvitation.type));\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tdispatch(RejectGameInvitation());\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst decoded_token = jwtdecode(browserStorage.TOKEN());\r\n\r\n\t\t\tconst toMin = (mili) => mili / 1000 / 60;\r\n\t\t\tif (decoded_token) {\r\n\t\t\t\tconst { exp, iat } = decoded_token;\r\n\t\t\t\tconst expirationLength = (exp - iat) / 60;\r\n\t\t\t\tconst criticalNow = toMin(Date.now()) + expirationLength / 4;\r\n\t\t\t\t// ex: expiration is at 60 min\r\n\t\t\t\t// after converting all values to minutes\r\n\t\t\t\t// critical point is about 15 minutes to expiration\r\n\t\t\t\t// so if toMin(now) + 15min passes expiration date -> inform user to take action\r\n\t\t\t\tif (criticalNow >= exp / 60) {\r\n\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\"نشست شما در شرف انقضاست ... برای پیش گیری از بروز مشکل لطفا دوباره وارد حساب خود شوید\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// ...some action\r\n\t\t\t\t\t// implement onClick for this toast\r\n\t\t\t\t\t// like rerouting to sing in model and etc\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, [message, pathname, gameInvitation, goTo, dispatch]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default withRouter(NotificationCenter);\r\n","export const UpdateStatistics = (players, games) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait dispatch({\r\n\t\t\ttype: \"UPDATE_STATISTICS\",\r\n\t\t\tpayload: { players, games },\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const MessagePushed = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"MEESAGE_PUSHED\" });\r\n\t};\r\n};\r\n\r\nexport const ResetMessages = () => {\r\n\treturn async (dispatch) => {\r\n\t\tawait dispatch({ type: \"RESET_MESSAGES\" });\r\n\t};\r\n};","import { browserStorage, Routes } from \"../configs\";\r\nimport { Fragment, useCallback, useContext, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateStatistics, ResetMessages } from \"../../globals/redux/actions\";\r\nimport { RecieveMessageFrom } from \"../../globals/redux/actions/message\";\r\nimport { Modal, Button, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { Attention, OK, Sorry, Notify } from \"../../tools/notification\";\r\nimport NotificationCenter from \"../../tools/NotificationCenter\";\r\nimport GlobalContext from \"./../../globals/state/GlobalContext\";\r\nimport {\r\n\tEndFriendlyInvitation,\r\n\tEndFriendRequest,\r\n\tRecieveGameInvitation,\r\n\tTriggerRandomSearch,\r\n} from \"./../../globals/redux/actions/tools\";\r\nimport { EnterRoom } from \"../../globals/redux/actions/game\";\r\nconst GlobalSocketManager = () => {\r\n\t// I actually used .jsx format to make this Component EventBased\r\n\t// On Each event called socket will do some specific operation\r\n\t// events are actually useEffects bound to special state changes\r\n\tconst context = useContext(GlobalContext);\r\n\tconst [socketGlobal, setSocketGlobal] = useState(null);\r\n\tconst [incommingFriendRequest, setIncommingFriendRequest] = useState(null);\r\n\tconst [showFriendshipModal, setShowFriendshipModal] = useState(false);\r\n\tconst me = useSelector((state) => state.me);\r\n\tconst tools = useSelector((state) => state.tools);\r\n\tconst room = useSelector((state) => state.room);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst [clientOnline, toggleClientOnline] = useState(true);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst pack = useCallback((request, msg = null) => {\r\n\t\treturn JSON.stringify({\r\n\t\t\ttoken: browserStorage.TOKEN(),\r\n\t\t\trequest,\r\n\t\t\tmsg,\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst enableGlobalTimer = useCallback(() => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tif (socketGlobal) socketGlobal.send(pack(\"online\"));\r\n\t\t}, 300000); // every 5 MINUTES request number of online members to update the site\r\n\t}, [pack, socketGlobal]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"global timer enabled\");\r\n\t\tconst timerID = enableGlobalTimer();\r\n\t\treturn () => {\r\n\t\t\tconsole.log(\"global timer disabled\");\r\n\t\t\tclearInterval(timerID);\r\n\t\t};\r\n\t}, [enableGlobalTimer]);\r\n\r\n\tconst { signOut, redirectToGamePlay } = context;\r\n\tconst iamSignedIn = me && me.userID;\r\n\tconst iamBusy = room && room.name;\r\n\tconst connect = useCallback(() => {\r\n\t\tconsole.log(\"global websocket connect called -> new socket returned\");\r\n\t\tif (!iamSignedIn) return null; //to make sure just site user trigger this connection\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tvar socket = new WebSocket(\r\n\t\t\t\t\t`${Routes.Server.WebSocketRoot}/${Routes.Server.wsGlobalRoute}`\r\n\t\t\t\t);\r\n\t\t\t\tsocket.onopen = () => {\r\n\t\t\t\t\tsocket.send(pack(\"online\")); //temp\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onmessage = (response) => {\r\n\t\t\t\t\tconst { data } = response;\r\n\t\t\t\t\tconst { command, msg } = JSON.parse(data);\r\n\t\t\t\t\tswitch (command) {\r\n\t\t\t\t\t\tcase \"ONLINE\": {\r\n\t\t\t\t\t\t\tconst { players, games } = msg;\r\n\t\t\t\t\t\t\tdispatch(UpdateStatistics(players, games)); //playing temp\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"NOT_AUTHORIZED\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"نشست شما منقضی شده، لطفا دوباره وارد حساب کاربری خود شوید\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tsignOut();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FIND_RESULT\": {\r\n\t\t\t\t\t\t\t//response from random game request\r\n\t\t\t\t\t\t\tif (msg) {\r\n\t\t\t\t\t\t\t\tdispatch(EnterRoom(msg));\r\n\t\t\t\t\t\t\t\tsocket.send(pack(\"online\"));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//search again 5s later\r\n\t\t\t\t\t\t\t\t// **********************\r\n\t\t\t\t\t\t\t\t//time out must be set with rising time out time to prevent server getting fucked up\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tif(!iamBusy)\r\n\t\t\t\t\t\t\t\t\t\tdispatch(TriggerRandomSearch());\r\n\t\t\t\t\t\t\t\t}, 5000);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_REQUEST\": {\r\n\t\t\t\t\t\t\t//if (msg.askerID === opponentID) {\r\n\t\t\t\t\t\t\t//if both mes are in game then ask immidiately\r\n\t\t\t\t\t\t\tsetIncommingFriendRequest(msg);\r\n\t\t\t\t\t\t\tsetShowFriendshipModal(true);\r\n\r\n\t\t\t\t\t\t\t/*else {\r\n\t\t\t\t\t\t\t\t//if the friend request is comming from some one else then manage it differently\r\n\t\t\t\t\t\t\t\t//...\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDSHIP_RESPONSE\": {\r\n\t\t\t\t\t\t\tconst { answer, targetName } = msg;\r\n\t\t\t\t\t\t\t//if(answer) dispatch(TriggerRecordUpdate());\r\n\t\t\t\t\t\t\tif (answer)\r\n\t\t\t\t\t\t\t\tOK(`${targetName} درخواست دوستی شما را پذیرفت`);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tAttention(\r\n\t\t\t\t\t\t\t\t\t`${targetName} درخواست دوستی شما را رد کرد`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tdispatch(EndFriendRequest());\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_OFFLINE\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"کاربر مورد نظر در حال حاضر آفلاین می باشد. لطفا بعدا تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"YOUR_BUSY\": {\r\n\t\t\t\t\t\t\tSorry(\r\n\t\t\t\t\t\t\t\t\"شما هنوز بازی اخیر خود را به اتمام نرسانده اید. پس از پایان آن دوباره تلاش کنید.\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"TARGET_BUSY\": {\r\n\t\t\t\t\t\t\t//... while chatting or game request\r\n\t\t\t\t\t\t\tNotify(\r\n\t\t\t\t\t\t\t\t\"در حال حاضر کاربر مشغول انجام بازی دیگری است و درخواست شما امکان پذیر نیست\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"FRIENDLY_GAME\": {\r\n\t\t\t\t\t\t\t// ... trigger and show responding form\r\n\t\t\t\t\t\t\tconst { askerID, askerName, gameType } = msg;\r\n\t\t\t\t\t\t\tdispatch(RecieveGameInvitation(askerID, askerName, gameType));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"INVITATION_ACCEPTED\": {\r\n\t\t\t\t\t\t\t// ... friend responded to your request\r\n\t\t\t\t\t\t\t// ... if true -> room info has ben sent to you\r\n\t\t\t\t\t\t\t// needed to check room state? done in server\r\n\t\t\t\t\t\t\tdispatch(EndFriendlyInvitation());\r\n\t\t\t\t\t\t\tredirectToGamePlay(msg); //msg -> room\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase \"CHAT\": {\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tRecieveMessageFrom(\r\n\t\t\t\t\t\t\t\t\tmsg.name,\r\n\t\t\t\t\t\t\t\t\tmsg.friendID,\r\n\t\t\t\t\t\t\t\t\tmsg.text\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t//... whatever\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(socket);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onerror = (error) => {\r\n\t\t\t\t\tsocket.close();\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsocket.onclose = () => {\r\n\t\t\t\t\t// reconnectr or what?\r\n\t\t\t\t\tconsole.log(\"Reconnecting in  5 seconds\");\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t(async () => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet socket = iamSignedIn\r\n\t\t\t\t\t\t\t\t\t? await connect()\r\n\t\t\t\t\t\t\t\t\t: null;\r\n\t\t\t\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t// this part needs editing ? maybe not\r\n\t\t\t\t};\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(`global websocket errpr: ${err}`);\r\n\t\t\t}\r\n\t\t});\r\n\t}, [dispatch, signOut, redirectToGamePlay, pack, iamSignedIn, iamBusy]);\r\n\r\n\t// EVENT NAME: PlayerUpdateEvent\r\n\t// happens when player sign in status changes => set ups global socket connection and then if signed in=> reads number of online users in page\r\n\tuseEffect(() => {\r\n\t\t//updates every time record changes or common user data changes, good or what?\r\n\t\tif (clientOnline && iamSignedIn) {\r\n\t\t\t(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet socket = iamSignedIn ? await connect() : null;\r\n\t\t\t\t\tsetSocketGlobal(socket);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}, [clientOnline, iamSignedIn, connect]);\r\n\r\n\tconst { fullname } = me ? me : { fullname: null };\r\n\tconst {\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\trandomSearchTriggered,\r\n\t\tacceptedGame,\r\n\t} = tools;\r\n\t// EVENT NAME: RandomGameInitiated Event\r\n\t// happens when user clicks on 'Random Game\" Tab search button => sends opponent search request to server\r\n\tuseEffect(() => {\r\n\t\tif (room.type) {\r\n\t\t\t//is it necessary?\r\n\t\t\t//completely making sure we're on right stage\r\n\t\t\tif (!room.name && iamSignedIn && socketGlobal)\r\n\t\t\t\tsocketGlobal.send(pack(\"find\", room.type));\r\n\t\t} else if (!room.name) {\r\n\t\t\t//room --> {null,null} --> means room has been reset hand u need to remove\r\n\t\t\tif (socketGlobal) socketGlobal.send(pack(\"close_game\"));\r\n\t\t}\r\n\t}, [iamSignedIn, room, randomSearchTriggered, socketGlobal, pack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (friendRequestTarget) {\r\n\t\t\t//friendRequestTarget either contains null => no request, or contains target ID for friendship\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendship\", {\r\n\t\t\t\t\t\ttargetID: friendRequestTarget,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tif (acceptedGame) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"respond_friendlygame\", {\r\n\t\t\t\t\t\tanswer: true,\r\n\t\t\t\t\t\tinviterID: acceptedGame.inviterID,\r\n\t\t\t\t\t\tgameType: acceptedGame.type\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t} else if (friendlyGameTarget) {\r\n\t\t\tif (socketGlobal)\r\n\t\t\t\tsocketGlobal.send(\r\n\t\t\t\t\tpack(\"friendly_game\", {\r\n\t\t\t\t\t\ttargetID: friendlyGameTarget.targetID,\r\n\t\t\t\t\t\tgameType: friendlyGameTarget.type,\r\n\t\t\t\t\t\taskerName: fullname,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\tfriendRequestTarget,\r\n\t\tfriendlyGameTarget,\r\n\t\tacceptedGame,\r\n\t\tsocketGlobal,\r\n\t\tpack,\r\n\t\tfullname,\r\n\t]);\r\n\r\n\tconst respondToFriendshipRequest = (answer) => {\r\n\t\t// handle multiple requests *************\r\n\r\n\t\t//target reponds to requester\r\n\t\tif (socketGlobal)\r\n\t\t\tsocketGlobal.send(\r\n\t\t\t\tpack(\"respond_friendship\", {\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t\ttargetName: me.fullname,\r\n\t\t\t\t\taskerID: incommingFriendRequest.askerID,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t// if(answer) dispatch(TriggerRecordUpdate());\r\n\t\tsetShowFriendshipModal(false);\r\n\t\tsetIncommingFriendRequest(null);\r\n\t\t// dispatch(SendFriendRequestTo(null)); //reset friend request targetID to prevent any future problm\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message.sent && socketGlobal) {\r\n\t\t\t//if destination is determined, otherwise => means no message has been sent\r\n\t\t\tsocketGlobal.send(pack(\"chat\", message.sent));\r\n\t\t\tdispatch(ResetMessages());\r\n\t\t}\r\n\t}, [message.sent, socketGlobal, pack, dispatch]);\r\n\r\n\t// if online status changes\r\n\tsetInterval(() => {\r\n\t\tif (window.navigator.onLine) {\r\n\t\t\t//client online\r\n\t\t\tif (!clientOnline)\r\n\t\t\t\t//this means -> client JUST became online\r\n\t\t\t\ttoggleClientOnline(true); //change connection status\r\n\t\t} else {\r\n\t\t\t// clients offline\r\n\t\t\tif (clientOnline)\r\n\t\t\t\t//this means -> client JUST became offline now\r\n\t\t\t\ttoggleClientOnline(false); //change connection status\r\n\t\t}\r\n\t}, 5000);\r\n\r\n\t// is it really necessary though ?????\r\n\t// move UI to notification center\r\n\treturn (\r\n\t\t//this is just for firendship request in games\r\n\t\t<Fragment>\r\n\t\t\t<NotificationCenter />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showFriendshipModal}\r\n\t\t\t\tonHide={() => respondToFriendshipRequest(false)}>\r\n\t\t\t\t<Modal.Header closeButton />\r\n\t\t\t\t<Modal.Body className=\"text-right\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{!incommingFriendRequest ? null : (\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: \"18px\", margin: \"2%\" }}\r\n\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\tvariant=\"warning\">\r\n\t\t\t\t\t\t\t\t{incommingFriendRequest.askerName}\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tبه شما پیشنهاد دوستی داده است.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>اگر تمایل به دوستی ندارید میتواند درخواست را رد کنید.</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer className=\"w-100 text-right\">\r\n\t\t\t\t\t<Row className=\"w-100\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(true)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tپذیرفتن\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\trespondToFriendshipRequest(false)\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tرد\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GlobalSocketManager;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport NavigationBar from \"./commons/NavigationBar\";\r\nimport GlobalStates from \"./globals/state/GlobalStates\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport MainRouter from \"./commons/MainRouter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GlobalSocketManager from \"./services/ws/GlobalSocketManager\";\r\n\r\nconst App = () => {\r\n\tconst me = useSelector((state) => state.me);\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<GlobalStates>\r\n\t\t\t\t{me && <GlobalSocketManager />}\r\n\t\t\t\t<NavigationBar />\r\n\r\n\t\t\t\t<MainRouter />\r\n\t\t\t</GlobalStates>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { meReducer } from \"./me\";\r\nimport { opponentReducer } from \"./opponent\";\r\nimport { roomReducer } from './room';\r\nimport { scoreboardReducer } from './scoreboard';\r\nimport { toolsReducer } from \"./tools\";\r\nimport { statisticsReducer } from \"./statistics\";\r\nimport { messageReducer } from './message';\r\nimport { chatsReducer } from './chats';\r\nimport { friendsReducer } from './freinds';\r\n\r\nexport const reducers = combineReducers({\r\n    me: meReducer,\r\n    opponent: opponentReducer,\r\n    room: roomReducer,\r\n    scoreboard: scoreboardReducer,\r\n    tools: toolsReducer,\r\n    statistics: statisticsReducer,\r\n    message: messageReducer,\r\n    chats: chatsReducer,\r\n    friends: friendsReducer\r\n});","export const meReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_MINE\":\r\n            return action.payload;\r\n        case \"RESET_MINE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const opponentReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_OPPONENT\":\r\n            return action.payload;\r\n        case \"RESET_OPPONENT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const roomReducer = (state = {name: null, type: null}, action) => {\r\n    switch (action.type) {\r\n        case \"ENTER_ROOM\":\r\n            return {...action.payload};\r\n        case \"EXIT_ROOM\":\r\n            return {name: null, type: null}\r\n        default:\r\n            return state;\r\n    }\r\n};","// simple scoreboard for player's live games\r\n\r\nexport const scoreboardReducer = (state = {me: null, opp: null}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_SCOREBOARD\":\r\n            return {...action.payload}; // payload === {me: {shape: , score: }, opp: 0} // null for ended or not started games : {me: null, opp: null}\r\n        case \"CLEAN_SCOREBOARD\":\r\n            return {me: null, opp: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const toolsReducer = (\r\n\tstate = {\r\n\t\trandomSearchTriggered: false,\r\n\t\tfriendRequestTarget: null,\r\n\t\tfriendlyGameTarget: null,\r\n\t\tgameInvitation: null,\r\n\t\tacceptedGame: null,\r\n\t},\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_TOOLS\":\r\n\t\t\treturn { ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const statisticsReducer = (state = { players: 0, games: 0 }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"UPDATE_STATISTICS\":\r\n\t\t\treturn { ...action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const messageReducer = (\r\n\tstate = { sent: null, recieved: null },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"RECIEVE_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\trecieved: { ...action.payload, pushed: false },\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"SEND_MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\tsent: { ...action.payload, pushed: true },\r\n\t\t\t\trecieved: state.recieved,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase \"MEESAGE_PUSHED\":\r\n\t\t\treturn {\r\n\t\t\t\tsent: state.sent,\r\n\t\t\t\trecieved: {...state.recieved, pushed: true},\r\n\t\t\t};\r\n\t\tcase \"RESET_MESSAGES\":\r\n\t\t\treturn { sent: null, recieved: null };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const chatsReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"LOAD_CHATS\":\r\n\t\t\t// use a copy of?\r\n\t\t\treturn [...action.payload];\r\n\t\tcase \"RESET_CHATS\":\r\n\t\t\t//... what to do?\r\n\t\t\treturn [];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const friendsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_FRIENDS\":\r\n            return [...action.payload];\r\n        case \"RESET_FRIENDS\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n//dispatch\r\n// store.subscribe(() => console.log(store.getState()));","import { render } from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./globals/redux/store/index\";\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","const ClientRoutes = require('./client');\r\nconst ServerRoutes = require('./server');\r\nconst Status = require('./status');\r\nconst browserStorage = require('./browser');\r\nconst GameSetting = require('./gamesetting');\r\n//all configs\r\nmodule.exports = {\r\n    browserStorage,\r\n    Routes: { Server: ServerRoutes, Client: ClientRoutes },\r\n    Status,\r\n    GameSetting,\r\n    Devices: { SmartPhone: 2, Tablet: 1, Desktop: 0 },\r\n}"],"sourceRoot":""}